{"remainingRequest":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/views/Home.vue?vue&type=template&id=4fbfea68&scoped=true","dependencies":[{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/views/Home.vue","mtime":1623705379261},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBpZD0idGhlU2lkZWJhciIgY2xhc3M9InNpZGViYXIiPgogICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iY2xvc2VidG4iIEBjbGljaz0iY2xvc2VCYXIiPiZ0aW1lczs8L2E+CgogICAgPGRpdiBjbGFzcz0iZmlsZVVwbG9hZCI+CiAgICAgIDxpbnB1dAogICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgcGxhY2Vob2xkZXI9Ik5hbWUgb2YgdGhlIERhdGFzZXQiCiAgICAgICAgdi1tb2RlbD0iZGF0YXNldHMuZGF0YU5hbWUiCiAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCIKICAgICAgLz4KICAgICAgPHAgaWQ9Im1zZyI+PC9wPgogICAgICA8aW5wdXQgdHlwZT0iZmlsZSIgYWNjZXB0PSIuY3N2IiBAY2hhbmdlPSJzZWxlY3RGaWxlIiAvPjxidXR0b24KICAgICAgICBAY2xpY2s9InVwbG9hZEZpbGUiCiAgICAgID4KICAgICAgICBVcGxvYWQKICAgICAgPC9idXR0b24+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJ3aW5kb3dTZWxlY3Rpb24iPgogICAgICA8aDM+Tm9kZS1MaW5rIERpYWdyYW0gV2luZG93PC9oMz4KICAgICAgPHNlbGVjdCBpZD0idGVzdFNlbGVjdE5MIj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSJ2aXNMZWZ0Ij5MZWZ0PC9vcHRpb24+CiAgICAgICAgPG9wdGlvbiB2YWx1ZT0idmlzUmlnaHQiPlJpZ2h0PC9vcHRpb24+CiAgICAgIDwvc2VsZWN0PgoKICAgICAgPGgzPkFkamFjZW5jeSBNYXRyaXggV2luZG93PC9oMz4KICAgICAgPHNlbGVjdCBpZD0idGVzdFNlbGVjdEFNIj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSJ2aXNSaWdodCI+UmlnaHQ8L29wdGlvbj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSJ2aXNMZWZ0Ij5MZWZ0PC9vcHRpb24+CiAgICAgIDwvc2VsZWN0PgoKPCEtLQogICAgICA8aDMgY2xhc3M9InR5cGUiPlNlbGVjdCB2aXN1YWxpc2F0aW9uIHR5cGU8L2gzPgogICAgICA8c2VsZWN0IGlkPSJ2aXNUeXBlIj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSJub2RlbGluayI+Tm9kZS1MaW5rIERpYWdyYW08L29wdGlvbj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSJtYXRyaXgiPkFkamFjZW5jeSBNYXRyaXg8L29wdGlvbj4KICAgICAgPC9zZWxlY3Q+CiAgICA8L2Rpdj4KICAgIC0tPgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0iZGF0YUxpc3QiPgogICAgICA8dWwgaWQ9Imxpc3QiIGNsYXNzPSJjb2x1bW4iPjwvdWw+CiAgICA8L2Rpdj4KICA8L2Rpdj4KCiAgPGRpdiBjbGFzcz0ic2lkZWJhckJ1dHRvbiI+CiAgICA8YnV0dG9uIGNsYXNzPSJvcGVuYnRuIiBAY2xpY2s9Im9wZW5CYXIiPiYjOTc3NjsgT3B0aW9uczwvYnV0dG9uPgogIDwvZGl2PgoKICA8ZGl2IGNsYXNzPSJ2aXNHcmlkIj4KICAgIDxkaXYgaWQ9InZpc2NvbnRlbnQiPgogICAgICA8ZGl2IGlkPSJ2aXNMZWZ0Ij48L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBpZD0idmlzY29udGVudCI+PGRpdiBpZD0idmlzUmlnaHQiPjwvZGl2PjwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9InNsaWRlckxlZnQiPgogICAgPGlucHV0CiAgICAgIHR5cGU9InJhbmdlIgogICAgICBtaW49IjEiCiAgICAgIG1heD0iMTAwIgogICAgICB2YWx1ZT0iNTAiCiAgICAgIGNsYXNzPSJzbGlkZXIiCiAgICAgIGlkPSJyYW5nZUxlZnQiCiAgICAgIEBpbnB1dD0ic2hvd1JhbmdlVmFsdWVMZWZ0IgogICAgLz4KICAgIDxwIGlkPSJyYW5nZVZhbHVlTGVmdCI+dGVzdDwvcD4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJzbGlkZXJSaWdodCI+CiAgICA8aW5wdXQKICAgICAgdHlwZT0icmFuZ2UiCiAgICAgIG1pbj0iMSIKICAgICAgbWF4PSIxMDAiCiAgICAgIHZhbHVlPSI1MCIKICAgICAgY2xhc3M9InNsaWRlciIKICAgICAgaWQ9InJhbmdlUmlnaHQiCiAgICAgIEBpbnB1dD0ic2hvd1JhbmdlVmFsdWVSaWdodCIKICAgIC8+CiAgICA8cCBpZD0icmFuZ2VWYWx1ZVJpZ2h0Ij50ZXN0PC9wPgogIDwvZGl2Pgo="},{"version":3,"sources":["/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/views/Home.vue"],"names":[],"mappings":"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","file":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/views/Home.vue","sourceRoot":"","sourcesContent":["<template>\n  <div id=\"theSidebar\" class=\"sidebar\">\n    <a href=\"javascript:void(0)\" class=\"closebtn\" @click=\"closeBar\">&times;</a>\n\n    <div class=\"fileUpload\">\n      <input\n        type=\"text\"\n        placeholder=\"Name of the Dataset\"\n        v-model=\"datasets.dataName\"\n        class=\"form-control\"\n      />\n      <p id=\"msg\"></p>\n      <input type=\"file\" accept=\".csv\" @change=\"selectFile\" /><button\n        @click=\"uploadFile\"\n      >\n        Upload\n      </button>\n    </div>\n\n    <div class=\"windowSelection\">\n      <h3>Node-Link Diagram Window</h3>\n      <select id=\"testSelectNL\">\n        <option value=\"visLeft\">Left</option>\n        <option value=\"visRight\">Right</option>\n      </select>\n\n      <h3>Adjacency Matrix Window</h3>\n      <select id=\"testSelectAM\">\n        <option value=\"visRight\">Right</option>\n        <option value=\"visLeft\">Left</option>\n      </select>\n\n<!--\n      <h3 class=\"type\">Select visualisation type</h3>\n      <select id=\"visType\">\n        <option value=\"nodelink\">Node-Link Diagram</option>\n        <option value=\"matrix\">Adjacency Matrix</option>\n      </select>\n    </div>\n    -->\n    </div>\n\n    <div class=\"dataList\">\n      <ul id=\"list\" class=\"column\"></ul>\n    </div>\n  </div>\n\n  <div class=\"sidebarButton\">\n    <button class=\"openbtn\" @click=\"openBar\">&#9776; Options</button>\n  </div>\n\n  <div class=\"visGrid\">\n    <div id=\"viscontent\">\n      <div id=\"visLeft\"></div>\n    </div>\n    <div id=\"viscontent\"><div id=\"visRight\"></div></div>\n  </div>\n  <div class=\"sliderLeft\">\n    <input\n      type=\"range\"\n      min=\"1\"\n      max=\"100\"\n      value=\"50\"\n      class=\"slider\"\n      id=\"rangeLeft\"\n      @input=\"showRangeValueLeft\"\n    />\n    <p id=\"rangeValueLeft\">test</p>\n  </div>\n  <div class=\"sliderRight\">\n    <input\n      type=\"range\"\n      min=\"1\"\n      max=\"100\"\n      value=\"50\"\n      class=\"slider\"\n      id=\"rangeRight\"\n      @input=\"showRangeValueRight\"\n    />\n    <p id=\"rangeValueRight\">test</p>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\nimport * as d3 from \"d3\";\nimport { db } from \"../main\";\n//import generateNetwork from \"../visualisations/nodelink\";\nimport generateMatrix from \"../visualisations/adjacencymatrix\";\nimport generateNetworkCanvas from \"../visualisations/nodelinkv2.0\";\n\nexport default {\n  name: \"Home\",\n  components: {},\n  data() {\n    return {\n      datasets: {\n        fileLink: null,\n        dataName: null,\n      },\n      selectedFile: null,\n      datasetNo: 0,\n    };\n  },\n  mounted() {\n    this.getAllDatabaseEntries(); //the mounted() lifecycle executes after all components of the page have finished loading, so after the page is ready\n    // the previous uploaded datasets are visible in the page.\n  },\n\n  methods: {\n    showRangeValueLeft() {\n      var x = document.getElementById(\"rangeLeft\").value;\n      document.getElementById(\"rangeValueLeft\").innerHTML = x;\n    },\n\n    showRangeValueRight() {\n      var x = document.getElementById(\"rangeRight\").value;\n      document.getElementById(\"rangeValueRight\").innerHTML = x;\n    },\n    showDatabaseEntries(name, link) {\n      // function sleep(ms) {\n      //   return new Promise(\n      //     resolve => setTimeout(resolve, ms)\n      //   );\n      // }\n      var ul = document.getElementById(\"list\");\n      var header = document.createElement(\"h2\");\n\n      var selection = null;\n\n      var _name = document.createElement(\"li\");\n      var _visualise = document.createElement(\"button\");\n      header.innerHTML = \"Dataset-\" + ++this.datasetNo;\n      _name.innerHTML = \"Name of the dataset: \" + name;\n      _visualise.innerHTML = \"Visualise\";\n      _visualise.onclick = async () => {    \n        var visDiv = document.getElementById(\n          document.getElementById(\"testSelectNL\").value\n        );\n        visDiv.innerHTML = \"\";\n\n        visDiv = document.getElementById(\n          document.getElementById(\"testSelectAM\").value\n        );\n        visDiv.innerHTML = \"\";\n        const response = await fetch(link);\n        const data = d3.csvParse(await response.text(), d3.autoType);\n\n        var edges = [];\n        var nodes = [];\n\n        // \"edgeWeights.weight[source][target]\" can be used to get the weight of the source-target edge\n        // \"edgeWeights.maxWeight\" is the largest edge weight in the dataset\n        // this is used as an intermediary variable to calculate wEdges (weighted edges)\n        var edgeWeights = {\n          weight: {},\n          maxWeight: 0,\n        };\n\n        // weighted edges (maybe we will replace edges with this, as it adds weights to edges and also should improve performance)\n        var wEdges = [];\n\n        var maxDate = new Date(-3155692597470);\n        var minDate = new Date(3155692597470);\n\n        // this function auto-executes whenever visualise is clicked\n        // the purpose of this function is to calculate the minDate and the maxDate of the given dataset\n        (function () {\n          data.forEach((x) => {\n            // check if current date is larger than maxDate\n            if (x.date > maxDate) {\n              maxDate = x.date;\n            }\n\n            // check if current date is smaller than minDate\n            if (x.date < minDate) {\n              minDate = x.date;\n            }\n          });\n        })();\n\n        data.forEach((x) => {\n          var objNodesTo = {};\n          var objNodesFrom = {};\n\n          var index = nodes.findIndex((o) => o.employeeID == x.fromId);\n          if (index === -1) {\n            objNodesFrom[\"employeeID\"] = x.fromId;\n            objNodesFrom[\"email\"] = x.fromEmail;\n            objNodesFrom[\"jobTitle\"] = x.fromJobtitle;\n            nodes.push(objNodesFrom);\n\n            // add missing node ID to edgeWeights\n            edgeWeights.weight[x.fromId] = {};\n          }\n\n          var index2 = nodes.findIndex((o) => o.employeeID == x.toId);\n          if (index2 === -1) {\n            objNodesTo[\"employeeID\"] = x.toId;\n            objNodesTo[\"email\"] = x.toEmail;\n            objNodesTo[\"jobTitle\"] = x.toJobtitle;\n            nodes.push(objNodesTo);\n\n            // add missing node ID to edgeWeights\n            edgeWeights.weight[x.toId] = {};\n          }\n\n          // init current edge with weight 0\n          edgeWeights.weight[x.fromId][x.toId] = 0;\n          let temp = ++edgeWeights.weight[x.fromId][x.toId];\n\n          if (temp > edgeWeights.maxWeight) {\n            edgeWeights.maxWeight = temp;\n          }\n          \n        });\n\n        // calculate edgeWeight values\n        data.forEach((x) => {\n          let temp = ++edgeWeights.weight[x.fromId][x.toId];\n\n          if (temp > edgeWeights.maxWeight) {\n            edgeWeights.maxWeight = temp;\n          }\n          \n          // add the edges to the edges array.\n          var objEdges = {};\n          objEdges[\"source\"] = x.fromId;\n          objEdges[\"target\"] = x.toId;\n          objEdges[\"sentiment\"] = x.sentiment;\n          objEdges[\"messageType\"] = x.messageType;\n          objEdges[\"date\"] = x.date;\n          objEdges[\"weight\"] = edgeWeights.weight[x.fromId][x.toId];\n          edges.push(objEdges);\n        });\n\n        // create array of weighted edges\n        Object.keys(edgeWeights.weight).forEach((fromId) => {\n          Object.keys(edgeWeights.weight[fromId]).forEach((toId) => {\n            let objEdges = {};\n            objEdges[\"source\"] = fromId;\n            objEdges[\"target\"] =  toId;\n            objEdges[\"weight\"] = edgeWeights.weight[fromId][toId];\n            wEdges.push(objEdges);\n          });\n        });\n          var canvas;\n          // var currentDate = minDate;\n          // while(currentDate <= maxDate) {\n          //     data.forEach((x) => {\n          //         if(x.date > currentDate) {\n          //             nodes.splice(nodes.indexOf(x.toId), 1);\n          //             nodes.splice(nodes.indexOf(x.fromId), 1);\n          //         }\n          //     });\n          //     generateNetworkCanvas(edges, nodes, canvas, selection);\n          //     var newDate = currentDate.setDate(currentDate.getDate() + 1);\n          //     currentDate = new Date(newDate);\n          //     await sleep(1000);\n          //     console.log(\"step\");\n          //    } \n          generateNetworkCanvas(edges, nodes, canvas, selection);\n          generateMatrix(wEdges, nodes, edgeWeights);\n      };\n      ul.appendChild(header);\n      ul.appendChild(_name);\n      ul.appendChild(_visualise);\n    },\n\n    getAllDatabaseEntries() {\n      db.collection(\"datasets\")\n        .get()\n        .then((snapshot) => {\n          snapshot.forEach((doc) => {\n            let name = doc.data().dataName;\n            let link = doc.data().fileLink;\n            this.showDatabaseEntries(name, link);\n          });\n        });\n    },\n\n    openBar() {\n      document.getElementById(\"theSidebar\").style.width = \"300px\";\n      document.getElementById(\"visLeft\").style.marginLeft = \"300px\";\n    },\n\n    closeBar() {\n      document.getElementById(\"theSidebar\").style.width = \"0\";\n      document.getElementById(\"visLeft\").style.marginLeft = \"0\";\n    },\n\n    selectFile(event) {\n      this.selectedFile = event.target.files[0]; //Selects the uploaded file and assigns it to the \"selectedFile\" variable.\n      //TODO: Add proper checks to ensure that the files given are csv files.\n    },\n\n    uploadFile() {\n      let fileName = `${this.selectedFile.name}`;\n      var storageRef = firebase.storage().ref(fileName);\n      let uploadTask = storageRef.put(this.selectedFile);\n      uploadTask.on(\n        \"state_changed\",\n        () => {},\n        (error) => {\n          //Handle unsuccessfull uploads.\n          console.log(error);\n        },\n        () => {\n          //Handle successfull uploads.\n          uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n            this.datasets.fileLink = downloadURL;\n            this.saveDataToDB();\n          });\n        }\n      );\n    },\n\n    saveDataToDB() {\n      db.collection(\"datasets\")\n        .add(this.datasets)\n        .then((docRef) => {\n          var sucMsg = document.getElementById(\"msg\");\n          sucMsg.innerHTML = \"The dataset has been uploaded successfully.\";\n          console.log(\"Document written with ID: \", docRef.id);\n        })\n        .catch((error) => {\n          console.error(\"Error adding document: \", error);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.visGrid {\n  position: absolute;\n  display: grid;\n  width: 100%;\n  height: 100%;\n  background-color: #3f3f3f;\n  grid-template-columns: 1fr 1fr;\n  color: white;\n  z-index: -10;\n  transition: margin-left 0.5s;\n}\n\n#viscontent {\n  position: relative;\n  height: 100%;\n  width: 100%;\n  transition: margin-left 0.5s;\n}\n\n.sidebar {\n  height: 100%;\n  width: 0;\n  position: fixed;\n  z-index: 2;\n  top: 0;\n  left: 0;\n  background-color: black;\n  color: white;\n  overflow-x: hidden;\n  padding-top: 60px;\n  transition: 0.5s; /* 0.5 second transition effect to slide in the sidebar */\n  float: left;\n}\n\n.sidebar a:hover {\n  color: #f1f1f1;\n}\n\n.sidebar .closebtn {\n  position: absolute;\n  top: 0;\n  right: 25px;\n  font-size: 36px;\n  margin-left: 50px;\n  padding: 8px 8px 8px 32px;\n  text-decoration: none;\n  color: #818181;\n  display: block;\n  transition: 0.3s;\n}\n\n.openbtn {\n  font-size: 20px;\n  cursor: pointer;\n  background-color: black;\n  color: white;\n  padding: 10px 15px;\n  border: none;\n}\n\n.openbtn:hover {\n  color: black;\n  background-color: #42b983;\n}\n\n/* Push page content to the right */\n.sidebarButton {\n  position: absolute;\n  transition: margin-left 0.5s;\n  text-align: left;\n  z-index: 1;\n}\n\n.dataList {\n  height: 50%;\n  overflow-y: auto;\n}\n\n.fileUpload {\n  border-bottom: 2px solid white;\n}\n\n.windowSelection {\n  padding: 30px;\n  border-bottom: 2px solid white;\n}\n\n.type {\n  margin-top: 0.5cm;\n}\n\n#visLeft {\n  transition: margin-left 0.5s;\n  border-right: 3px solid white;\n}\n\n#visRight {\n  transition: margin-left 0.5s;\n}\n\n.sliderLeft {\n  position: absolute;\n  bottom: 0;\n  width: 50%;\n  background-color: #2c3e50;\n  height: 40px;\n}\n\n.sliderRight {\n  position: absolute;\n  bottom: 0;\n  width: 50%;\n  background-color: #2c3e50;\n  height: 40px;\n  display: inline;\n}\n\n.slider {\n  width: 80%;\n}\n\n#rangeValueLeft {\n  color: white;\n}\n\n#rangeValueRight {\n  color: white;\n}\n</style>\n"]}]}