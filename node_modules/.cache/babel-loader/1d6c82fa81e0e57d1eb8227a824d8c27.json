{"remainingRequest":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\src\\views\\Home.vue?vue&type=template&id=fae5bece&scoped=true","dependencies":[{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\src\\views\\Home.vue","mtime":1623234877326},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622459531629},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js","mtime":1622459531252},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1622459545384},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622459531629},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1622459545375}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCB2TW9kZWxUZXh0IGFzIF92TW9kZWxUZXh0LCB3aXRoRGlyZWN0aXZlcyBhcyBfd2l0aERpcmVjdGl2ZXMsIGNyZWF0ZVN0YXRpY1ZOb2RlIGFzIF9jcmVhdGVTdGF0aWNWTm9kZSwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi1mYWU1YmVjZSIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtZmFlNWJlY2UiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGlkOiAidGhlU2lkZWJhciIsCiAgY2xhc3M6ICJzaWRlYmFyIgp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBjbGFzczogImZpbGVVcGxvYWQiCn07Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInAiLCB7CiAgaWQ6ICJtc2ciCn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF80ID0gLyojX19QVVJFX18qL19jcmVhdGVTdGF0aWNWTm9kZSgiPGRpdiBjbGFzcz1cIndpbmRvd1NlbGVjdGlvblwiIGRhdGEtdi1mYWU1YmVjZT48aDMgZGF0YS12LWZhZTViZWNlPlNlbGVjdCB2aXN1YWxpc2F0aW9uIHdpbmRvdzwvaDM+PHNlbGVjdCBpZD1cInRlc3RTZWxlY3RcIiBkYXRhLXYtZmFlNWJlY2U+PG9wdGlvbiB2YWx1ZT1cImNhbnZhc0xlZnRcIiBkYXRhLXYtZmFlNWJlY2U+TGVmdDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9XCJ2aXNSaWdodFwiIGRhdGEtdi1mYWU1YmVjZT5SaWdodDwvb3B0aW9uPjwvc2VsZWN0PjxoMyBjbGFzcz1cInR5cGVcIiBkYXRhLXYtZmFlNWJlY2U+U2VsZWN0IHZpc3VhbGlzYXRpb24gdHlwZTwvaDM+PHNlbGVjdCBpZD1cInZpc1R5cGVcIiBkYXRhLXYtZmFlNWJlY2U+PG9wdGlvbiB2YWx1ZT1cIm5vZGVsaW5rXCIgZGF0YS12LWZhZTViZWNlPk5vZGUtTGluayBEaWFncmFtPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT1cIm1hdHJpeFwiIGRhdGEtdi1mYWU1YmVjZT5BZGphY2VuY3kgTWF0cml4PC9vcHRpb24+PC9zZWxlY3Q+PC9kaXY+PGRpdiBjbGFzcz1cImRhdGFMaXN0XCIgZGF0YS12LWZhZTViZWNlPjx1bCBpZD1cImxpc3RcIiBjbGFzcz1cImNvbHVtblwiIGRhdGEtdi1mYWU1YmVjZT48L3VsPjwvZGl2PiIsIDIpOwoKdmFyIF9ob2lzdGVkXzYgPSB7CiAgY2xhc3M6ICJzaWRlYmFyQnV0dG9uIgp9OwoKdmFyIF9ob2lzdGVkXzcgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVN0YXRpY1ZOb2RlKCI8ZGl2IGNsYXNzPVwidmlzR3JpZFwiIGRhdGEtdi1mYWU1YmVjZT48ZGl2IGlkPVwidmlzY29udGVudFwiIGRhdGEtdi1mYWU1YmVjZT48Y2FudmFzIGlkPVwiY2FudmFzTGVmdFwiIGRhdGEtdi1mYWU1YmVjZT48L2NhbnZhcz48L2Rpdj48ZGl2IGlkPVwidmlzY29udGVudFwiIGRhdGEtdi1mYWU1YmVjZT48ZGl2IGlkPVwidmlzUmlnaHRcIiBkYXRhLXYtZmFlNWJlY2U+PC9kaXY+PC9kaXY+PC9kaXY+IiwgMSk7Cgp2YXIgX2hvaXN0ZWRfOCA9IHsKICBjbGFzczogInNsaWRlckxlZnQiCn07Cgp2YXIgX2hvaXN0ZWRfOSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInAiLCB7CiAgaWQ6ICJyYW5nZVZhbHVlTGVmdCIKfSwgInRlc3QiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTAgPSB7CiAgY2xhc3M6ICJzbGlkZXJSaWdodCIKfTsKCnZhciBfaG9pc3RlZF8xMSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInAiLCB7CiAgaWQ6ICJyYW5nZVZhbHVlUmlnaHQiCn0sICJ0ZXN0IiwgLTEKLyogSE9JU1RFRCAqLwopOwoKX3BvcFNjb3BlSWQoKTsKCmV4cG9ydCB2YXIgcmVuZGVyID0gLyojX19QVVJFX18qL193aXRoSWQoZnVuY3Rpb24gKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlVk5vZGUoImEiLCB7CiAgICBocmVmOiAiamF2YXNjcmlwdDp2b2lkKDApIiwKICAgIGNsYXNzOiAiY2xvc2VidG4iLAogICAgb25DbGljazogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5jbG9zZUJhciAmJiAkb3B0aW9ucy5jbG9zZUJhci5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgIsOXIiksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMiwgW193aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoImlucHV0IiwgewogICAgdHlwZTogInRleHQiLAogICAgcGxhY2Vob2xkZXI6ICJOYW1lIG9mIHRoZSBEYXRhc2V0IiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkZGF0YS5kYXRhc2V0cy5kYXRhTmFtZSA9ICRldmVudDsKICAgIH0pLAogICAgY2xhc3M6ICJmb3JtLWNvbnRyb2wiCiAgfSwgbnVsbCwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIFtbX3ZNb2RlbFRleHQsICRkYXRhLmRhdGFzZXRzLmRhdGFOYW1lXV0pLCBfaG9pc3RlZF8zLCBfY3JlYXRlVk5vZGUoImlucHV0IiwgewogICAgdHlwZTogImZpbGUiLAogICAgYWNjZXB0OiAiLmNzdiIsCiAgICBvbkNoYW5nZTogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5zZWxlY3RGaWxlICYmICRvcHRpb25zLnNlbGVjdEZpbGUuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KQogIH0sIG51bGwsIDMyCiAgLyogSFlEUkFURV9FVkVOVFMgKi8KICApLCBfY3JlYXRlVk5vZGUoImJ1dHRvbiIsIHsKICAgIG9uQ2xpY2s6IF9jYWNoZVs0XSB8fCAoX2NhY2hlWzRdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMudXBsb2FkRmlsZSAmJiAkb3B0aW9ucy51cGxvYWRGaWxlLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCAiIFVwbG9hZCAiKV0pLCBfaG9pc3RlZF80XSksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNiwgW19jcmVhdGVWTm9kZSgiYnV0dG9uIiwgewogICAgY2xhc3M6ICJvcGVuYnRuIiwKICAgIG9uQ2xpY2s6IF9jYWNoZVs1XSB8fCAoX2NhY2hlWzVdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMub3BlbkJhciAmJiAkb3B0aW9ucy5vcGVuQmFyLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCAi4piwIE9wdGlvbnMiKV0pLCBfaG9pc3RlZF83LCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzgsIFtfY3JlYXRlVk5vZGUoImlucHV0IiwgewogICAgdHlwZTogInJhbmdlIiwKICAgIG1pbjogIjEiLAogICAgbWF4OiAiMTAwIiwKICAgIHZhbHVlOiAiNTAiLAogICAgY2xhc3M6ICJzbGlkZXIiLAogICAgaWQ6ICJyYW5nZUxlZnQiLAogICAgb25JbnB1dDogX2NhY2hlWzZdIHx8IChfY2FjaGVbNl0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5zaG93UmFuZ2VWYWx1ZUxlZnQgJiYgJG9wdGlvbnMuc2hvd1JhbmdlVmFsdWVMZWZ0LmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCBudWxsLCAzMgogIC8qIEhZRFJBVEVfRVZFTlRTICovCiAgKSwgX2hvaXN0ZWRfOV0pLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEwLCBbX2NyZWF0ZVZOb2RlKCJpbnB1dCIsIHsKICAgIHR5cGU6ICJyYW5nZSIsCiAgICBtaW46ICIxIiwKICAgIG1heDogIjEwMCIsCiAgICB2YWx1ZTogIjUwIiwKICAgIGNsYXNzOiAic2xpZGVyIiwKICAgIGlkOiAicmFuZ2VSaWdodCIsCiAgICBvbklucHV0OiBfY2FjaGVbN10gfHwgKF9jYWNoZVs3XSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLnNob3dSYW5nZVZhbHVlUmlnaHQgJiYgJG9wdGlvbnMuc2hvd1JhbmdlVmFsdWVSaWdodC5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgbnVsbCwgMzIKICAvKiBIWURSQVRFX0VWRU5UUyAqLwogICksIF9ob2lzdGVkXzExXSldLCA2NAogIC8qIFNUQUJMRV9GUkFHTUVOVCAqLwogICk7Cn0pOw=="},{"version":3,"sources":["C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\src\\views\\Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"theSidebar\" class=\"sidebar\">\r\n    <a href=\"javascript:void(0)\" class=\"closebtn\" @click=\"closeBar\">&times;</a>\r\n\r\n    <div class=\"fileUpload\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Name of the Dataset\"\r\n        v-model=\"datasets.dataName\"\r\n        class=\"form-control\"\r\n      />\r\n      <p id=\"msg\"></p>\r\n      <input type=\"file\" accept=\".csv\" @change=\"selectFile\" /><button\r\n        @click=\"uploadFile\"\r\n      >\r\n        Upload\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"windowSelection\">\r\n      <h3>Select visualisation window</h3>\r\n      <select id=\"testSelect\">\r\n        <option value=\"canvasLeft\">Left</option>\r\n        <option value=\"visRight\">Right</option>\r\n      </select>\r\n\r\n      <h3 class=\"type\">Select visualisation type</h3>\r\n      <select id=\"visType\">\r\n        <option value=\"nodelink\">Node-Link Diagram</option>\r\n        <option value=\"matrix\">Adjacency Matrix</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"dataList\">\r\n      <ul id=\"list\" class=\"column\"></ul>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"sidebarButton\">\r\n    <button class=\"openbtn\" @click=\"openBar\">&#9776; Options</button>\r\n  </div>\r\n\r\n  <div class=\"visGrid\">\r\n    <div id=\"viscontent\"><canvas id=\"canvasLeft\"></canvas></div>\r\n    <div id=\"viscontent\"><div id=\"visRight\"></div></div>\r\n  </div>\r\n  <div class=\"sliderLeft\">\r\n    <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"rangeLeft\" @input=\"showRangeValueLeft\">\r\n    <p id=\"rangeValueLeft\">test</p>\r\n  </div>\r\n  <div class=\"sliderRight\">\r\n    <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"rangeRight\" @input=\"showRangeValueRight\">\r\n    <p id=\"rangeValueRight\">test</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport firebase from \"firebase\";\r\nimport * as d3 from \"d3\";\r\nimport { db } from \"../main\";\r\n//import generateNetwork from \"../visualisations/nodelink\";\r\nimport generateMatrix from \"../visualisations/adjacencymatrix\";\r\nimport generateNetworkCanvas from \"../visualisations/nodelinkv2.0\";\r\n\r\nexport default {\r\n  name: \"Home\",\r\n  components: {},\r\n  data() {\r\n    return {\r\n      datasets: {\r\n        fileLink: null,\r\n        dataName: null,\r\n      },\r\n      selectedFile: null,\r\n      datasetNo: 0,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getAllDatabaseEntries(); //the mounted() lifecycle executes after all components of the page have finished loading, so after the page is ready\r\n    // the previous uploaded datasets are visible in the page.\r\n  },\r\n\r\n  methods: {\r\n    showRangeValueLeft() {\r\n      var x = document.getElementById(\"rangeLeft\").value;\r\n      document.getElementById(\"rangeValueLeft\").innerHTML = x;\r\n    },\r\n\r\n    showRangeValueRight() {\r\n      var x = document.getElementById(\"rangeRight\").value;\r\n      document.getElementById(\"rangeValueRight\").innerHTML = x;\r\n    },\r\n    showDatabaseEntries(name, link) {\r\n      var ul = document.getElementById(\"list\");\r\n      var header = document.createElement(\"h2\");\r\n      var _name = document.createElement(\"li\");\r\n      var _visualise = document.createElement(\"button\");\r\n      header.innerHTML = \"Dataset-\" + ++this.datasetNo;\r\n      _name.innerHTML = \"Name of the dataset: \" + name;\r\n      _visualise.innerHTML = \"Visualise\";\r\n      _visualise.onclick = async () => {\r\n        var visDiv = document.getElementById(\r\n          document.getElementById(\"testSelect\").value\r\n        );\r\n        visDiv.innerHTML = \"\";\r\n        const response = await fetch(link);\r\n        const data = d3.csvParse(await response.text(), d3.autoType);\r\n        var edges = [];\r\n        var nodes = [];\r\n        data.forEach((x) => {\r\n          var objEdges = {};\r\n          objEdges[\"source\"] = x.fromId;\r\n          objEdges[\"target\"] = x.toId;\r\n          objEdges[\"sentiment\"] = x.sentiment;\r\n          edges.push(objEdges);\r\n          var objNodesTo = {};\r\n          var objNodesFrom = {};\r\n          var index = nodes.findIndex((o) => o.employeeID == x.fromId);\r\n          if (index === -1) {\r\n            objNodesFrom[\"employeeID\"] = x.fromId;\r\n            nodes.push(objNodesFrom);\r\n          }\r\n          var index2 = nodes.findIndex((o) => o.employeeID == x.toId);\r\n          if (index2 === -1) {\r\n            objNodesTo[\"employeeID\"] = x.toId;\r\n            nodes.push(objNodesTo);\r\n          }\r\n        });\r\n        if (document.getElementById(\"visType\").value == \"nodelink\") {\r\n          var canvas;\r\n          generateNetworkCanvas(edges, nodes, canvas);\r\n        } else if (document.getElementById(\"visType\").value == \"matrix\") {\r\n          generateMatrix(edges, nodes);\r\n        }\r\n      };\r\n      ul.appendChild(header);\r\n      ul.appendChild(_name);\r\n      ul.appendChild(_visualise);\r\n    },\r\n\r\n    getAllDatabaseEntries() {\r\n      db.collection(\"datasets\")\r\n        .get()\r\n        .then((snapshot) => {\r\n          snapshot.forEach((doc) => {\r\n            let name = doc.data().dataName;\r\n            let link = doc.data().fileLink;\r\n            this.showDatabaseEntries(name, link);\r\n          });\r\n        });\r\n    },\r\n    \r\n\r\n    openBar() {\r\n      document.getElementById(\"theSidebar\").style.width = \"300px\";\r\n      document.getElementById(\"visLeft\").style.marginLeft = \"300px\";\r\n      \r\n    },\r\n\r\n    closeBar() {\r\n      document.getElementById(\"theSidebar\").style.width = \"0\";\r\n      document.getElementById(\"visLeft\").style.marginLeft = \"0\";\r\n    },\r\n\r\n    selectFile(event) {\r\n      this.selectedFile = event.target.files[0]; //Selects the uploaded file and assigns it to the \"selectedFile\" variable.\r\n      //TODO: Add proper checks to ensure that the files given are csv files.\r\n    },\r\n\r\n    uploadFile() {\r\n      let fileName = `${this.selectedFile.name}`;\r\n      var storageRef = firebase.storage().ref(fileName);\r\n      let uploadTask = storageRef.put(this.selectedFile);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        () => {},\r\n        (error) => {\r\n          //Handle unsuccessfull uploads.\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          //Handle successfull uploads.\r\n          uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n            this.datasets.fileLink = downloadURL;\r\n            this.saveDataToDB();\r\n          });\r\n        }\r\n      );\r\n    },\r\n\r\n    saveDataToDB() {\r\n      db.collection(\"datasets\")\r\n        .add(this.datasets)\r\n        .then((docRef) => {\r\n          var sucMsg = document.getElementById(\"msg\");\r\n          sucMsg.innerHTML = \"The dataset has been uploaded successfully.\";\r\n          console.log(\"Document written with ID: \", docRef.id);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding document: \", error);\r\n        });\r\n    },\r\n    \r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.visGrid {\r\n  position: absolute;\r\n  display: grid;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #3f3f3f;\r\n  grid-template-columns: 1fr 1fr;\r\n  color: white;\r\n  z-index: -10;\r\n  transition: margin-left .5s;\r\n}\r\n\r\n\r\n\r\n#viscontent {\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  transition: margin-left .5s;\r\n}\r\n\r\n.sidebar {\r\n  height: 100%;\r\n  width: 0;\r\n  position: fixed;\r\n  z-index: 2;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: black;\r\n  color: white;\r\n  overflow-x: hidden;\r\n  padding-top: 60px;\r\n  transition: 0.5s; /* 0.5 second transition effect to slide in the sidebar */\r\n  float: left;\r\n}\r\n\r\n.sidebar a:hover {\r\n  color: #f1f1f1;\r\n}\r\n\r\n.sidebar .closebtn {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 25px;\r\n  font-size: 36px;\r\n  margin-left: 50px;\r\n  padding: 8px 8px 8px 32px;\r\n  text-decoration: none;\r\n  color: #818181;\r\n  display: block;\r\n  transition: 0.3s;\r\n}\r\n\r\n.openbtn {\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  background-color: black;\r\n  color: white;\r\n  padding: 10px 15px;\r\n  border: none;\r\n}\r\n\r\n.openbtn:hover {\r\n  color: black;\r\n  background-color: #42b983;\r\n}\r\n\r\n/* Push page content to the right */\r\n.sidebarButton {\r\n  position: absolute;\r\n  transition: margin-left 0.5s;\r\n  text-align: left;\r\n  z-index: 1;\r\n}\r\n\r\n.dataList {\r\n  height: 50%;\r\n  overflow-y: auto;\r\n}\r\n\r\n.fileUpload {\r\n  border-bottom: 2px solid white;\r\n}\r\n\r\n.windowSelection {\r\n  padding: 30px;\r\n  border-bottom: 2px solid white;\r\n}\r\n\r\n\r\n.type {\r\n  margin-top: 0.5cm;\r\n}\r\n\r\n.canvasLeft{\r\n  transition: margin-left .5s;\r\n  border-right: 3px solid white;\r\n}\r\n\r\n.canvasRight{\r\n  transition: margin-left .5s;\r\n}\r\n\r\n.sliderLeft{\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 50%;\r\n  background-color: #2c3e50;\r\n  height: 40px;\r\n}\r\n\r\n.sliderRight{\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 50%;\r\n  background-color: #2c3e50;\r\n  height: 40px;\r\n  display: inline;\r\n}\r\n\r\n.slider{\r\n  width: 80%;\r\n}\r\n\r\n\r\n#rangeValueLeft{\r\n  color: white;\r\n}\r\n\r\n#rangeValueRight{\r\n  color: white;\r\n}\r\n\r\n\r\n</style>\r\n"],"sourceRoot":""}]}