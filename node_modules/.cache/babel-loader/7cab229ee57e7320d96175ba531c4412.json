{"remainingRequest":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\src\\visualisations\\nodelinkv2.0.js","dependencies":[{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\src\\visualisations\\nodelinkv2.0.js","mtime":1625227624964},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623407834742},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js","mtime":1623407834357},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\eslint-loader\\index.js","mtime":1623407839439}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Koen/Documents/GitHub/DBL-Project/src/visualisations/nodelinkv2.0.js"],"names":["d3","generateNetworkCanvas","edges","nodes","edgeWeights","selectedNode","updateCounter","heartBeatInterval","updateID","side","document","getElementById","value","canvas","createElement","w","clientWidth","h","clientHeight","oldSelection","oldSelectionSize","simplifiedEdges","oldEdge","isNew","length","edge","source","target","weight","sentiment","push","hue","Math","min","max","saturation","abs","lightness","c","x","m","r","g","b","floor","toString","slice","minWidth","maxWidth","logCoefficient","log10","maxWeight","logCoefficient2","log2","id","width","height","boundDistance","boundDistanceSquared","pow","appendChild","ctx","getContext","strokeStyle","lineWidth","transform","zoomIdentity","simulation","forceSimulation","force","forceManyBody","strength","distanceMax","forceLink","d","employeeID","links","forceCenter","on","ticked","clearRect","translate","y","scale","k","neighbours","prepareEdges","node","constrainNode","includes","fillStyle","drawNode","drawSelectionInformation","distanceFromCenterSquared","distanceFromCenter","sqrt","selectionEdges","normalEdges","drawAllEdges","fromSelection","toSelection","strokeColor","forEach","drawEdge","color","beginPath","moveTo","lineTo","stroke","arc","PI","fill","drawNodeInformation","type","popupX","popupY","popupSize","popupHeight","measureText","email","jobTitle","name","console","log","fillRect","strokeRect","fillText","scaleOrdinal","schemeCategory10","group","heartBeat","alpha","restart","clearInterval","onClick","event","subject","dragNodes","dragSubject","find","dragStarted","active","alphaTarget","fx","fy","dragged","dragEnded","drag","setInterval","select","call"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\r\n\r\n\r\n\r\nfunction generateNetworkCanvas(edges, nodes, edgeWeights, selectedNode, updateCounter) {\r\n    var heartBeatInterval;\r\n    var updateID;\r\n    var side = document.getElementById(document.getElementById(\"testSelectNL\").value);\r\n    var canvas = document.createElement('canvas');\r\n    var w = document.getElementById(\"viscontent\").clientWidth;\r\n    var h = document.getElementById(\"viscontent\").clientHeight;\r\n    h = h*0.80 + 5\r\n    var oldSelection = null;\r\n    var oldSelectionSize = 0;\r\n\r\n    var simplifiedEdges = [];\r\n    for (const oldEdge of edges) {\r\n        var isNew = true;\r\n        if (simplifiedEdges.length > 0) {\r\n            for (const edge of simplifiedEdges) {\r\n                if (edge.source == oldEdge.target && edge.target == oldEdge.source) {\r\n                    edge.weight = (edge.weight + oldEdge.weight);\r\n                    edge.sentiment = (edge.sentiment + oldEdge.sentiment) / 2;\r\n                    isNew = false;\r\n                }\r\n            }\r\n        }\r\n        if (isNew) {\r\n            simplifiedEdges.push(oldEdge);\r\n        }\r\n    }\r\n    for (const edge of simplifiedEdges) {\r\n        var sentiment = edge.sentiment * (1 / 0.025);\r\n        var hue = Math.min(Math.max(-1, sentiment),1)*0.599*100 + 60;\r\n        var saturation = Math.min(1, Math.max(0.2, Math.abs(sentiment*1.5)));\r\n        var lightness = Math.max(0.5, Math.min(0.8, 1 - Math.abs(sentiment*1.2)));\r\n        var c = (1 - Math.abs(2*lightness - 1)) * saturation;\r\n        var x = c * (1 - Math.abs((hue / 60) % 2 - 1))\r\n        var m = lightness - c/2;\r\n        var r,g,b;\r\n        if (hue < 60) {\r\n            r = (c + m) * 255;\r\n            g = (x + m) * 255;\r\n            b = m * 255;\r\n        } else if (hue < 120) {\r\n            r = (x + m) * 255;\r\n            g = (c + m) * 255;\r\n            b = m * 255;\r\n        }\r\n        edge[\"color\"] = \"#\" + ((1 << 24) + (Math.floor(r) << 16) + (Math.floor(g) << 8) + Math.floor(b)).toString(16).slice(1);\r\n    }\r\n\r\n    const minWidth = 0.01;                                                              // width of an edge with weight 1\r\n    const maxWidth = 1;                                                                // width of largest edge\r\n    const logCoefficient = (maxWidth - minWidth) / Math.log10(edgeWeights.maxWeight); \r\n    const logCoefficient2 = (10 - minWidth) / Math.log2(edgeWeights.maxWeight); // coeficient that is used to calculate opacity\r\n\r\n    if (updateCounter[0] != null) {\r\n        updateID = updateCounter[0];\r\n    } else {\r\n        updateID = 0;\r\n    }\r\n\r\n    canvas.id = \"NLCanvas\";\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n    // Creates a circle bound with diameter of the smallest of either the width or height of the window.\r\n    var boundDistance = Math.min(w / 2, h / 2);\r\n    var boundDistanceSquared = Math.pow(boundDistance, 2);\r\n\r\n    side.appendChild(canvas);\r\n\r\n    var ctx = canvas.getContext(\"2d\");\r\n    ctx.strokeStyle = \"red\"\r\n    ctx.lineWidth = 0.1;\r\n\r\n    var transform = d3.zoomIdentity;\r\n\r\n    var simulation = d3 //done\r\n        .forceSimulation(nodes)\r\n        .force(\r\n            \"charge\",\r\n            d3.forceManyBody()\r\n                .strength(-50)\r\n                .distanceMax(100))\r\n        .force(\r\n            \"link\",\r\n            d3\r\n                .forceLink()\r\n                .id(function (d) {\r\n                    return d.employeeID;\r\n                })\r\n                .links(simplifiedEdges)\r\n                .strength(function (edge) {\r\n                    return ((Math.log2(edge.weight) * logCoefficient2) + minWidth) / edgeWeights.maxWeight;\r\n                })\r\n        )\r\n        .force(\"center\", \r\n            d3\r\n                .forceCenter(w / 2, h / 2)\r\n                .strength(0.1))\r\n        .on(\"tick\", ticked);\r\n\r\n    function ticked() {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.translate(transform.x, transform.y);\r\n        ctx.scale(transform.k, transform.k);\r\n\r\n        var neighbours = prepareEdges(simplifiedEdges);\r\n        for (const node of nodes) {\r\n            constrainNode(node);\r\n            // Change selected node to stand out\r\n            if (selectedNode.includes(node.employeeID)) {\r\n                ctx.strokeStyle = \"#000\";\r\n                ctx.fillStyle = \"#ff0000\";\r\n            } else if (neighbours.includes(node) && selectedNode.length <= 1) {\r\n                ctx.strokeStyle = \"#000\";\r\n                ctx.fillStyle = \"#00ff00\";\r\n            } else {\r\n                ctx.strokeStyle = \"#fff\";\r\n                ctx.fillStyle = \"#000\";\r\n            }\r\n            if (selectedNode.includes(node.employeeID) || selectedNode.length <= 1) {\r\n                drawNode(node);\r\n            }\r\n        }\r\n        drawSelectionInformation(neighbours);\r\n    }\r\n\r\n\r\n    function constrainNode(node) {\r\n        var distanceFromCenterSquared = Math.pow(node.x - w / 2, 2) + Math.pow(node.y - h / 2, 2);\r\n        if (distanceFromCenterSquared > boundDistanceSquared) {\r\n            var distanceFromCenter = Math.sqrt(distanceFromCenterSquared);\r\n            node.x = ((node.x - w / 2) / distanceFromCenter) * boundDistance + w / 2;\r\n            node.y = ((node.y - h / 2) / distanceFromCenter) * boundDistance + h / 2;\r\n        }\r\n        //node.x = Math.min(w-6, Math.max(2, node.x));\r\n        //node.y = Math.min(h-130, Math.max(2, node.y));\r\n    }\r\n\r\n    function prepareEdges(edges) {\r\n        var selectionEdges = [];\r\n        var normalEdges = [];\r\n        var neighbours = [];\r\n\r\n        if (selectedNode[0] == null) { // No selection, draw all edges normally\r\n            drawAllEdges(edges, '#aaa');\r\n        } else if (selectedNode[1] == null) { // 1 selection, draw connected edges and mark neighbouring nodes.\r\n            for (const edge of edges) {\r\n                if (edge.source.employeeID == selectedNode[0]) {\r\n                    selectionEdges.push(edge);\r\n                    neighbours.push(edge.target);\r\n                } else if (edge.target.employeeID == selectedNode[0]) {\r\n                    selectionEdges.push(edge);\r\n                    neighbours.push(edge.source);\r\n                } else {\r\n                    normalEdges.push(edge);\r\n                }\r\n            }\r\n            drawAllEdges(normalEdges, '#aaa');\r\n\r\n            drawAllEdges(selectionEdges, '#f58a2c');\r\n        } else { // 2 or more selections, mark edges between selected nodes.\r\n            for (const edge of edges) {\r\n                var fromSelection = selectedNode.includes(edge.source.employeeID);\r\n                var toSelection = selectedNode.includes(edge.target.employeeID);\r\n                if (fromSelection && toSelection) {\r\n                    selectionEdges.push(edge);\r\n                } else if (fromSelection) {\r\n                    neighbours.push(edge.target);\r\n                    normalEdges.push(edge);\r\n                } else if (toSelection) {\r\n                    neighbours.push(edge.source);\r\n                    normalEdges.push(edge);\r\n                } else {\r\n                    normalEdges.push(edge);\r\n                }\r\n            }\r\n            //drawAllEdges(normalEdges, '#aaa');\r\n\r\n            drawAllEdges(selectionEdges, \"Sentiment\");\r\n        }\r\n\r\n        return neighbours;\r\n    }\r\n\r\n    function drawAllEdges(edges, strokeColor) {\r\n        if (strokeColor[0] == \"#\") {\r\n            ctx.strokeStyle = strokeColor;\r\n            edges.forEach(drawEdge);\r\n        } else {\r\n            edges.forEach(edge => {\r\n                ctx.strokeStyle = edge.color;\r\n                drawEdge(edge)\r\n            });\r\n        }\r\n    }\r\n\r\n    function drawEdge(d) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(d.source.x, d.source.y);\r\n        ctx.lineTo(d.target.x, d.target.y);\r\n        ctx.lineWidth=(Math.log10(d.weight) * logCoefficient) + minWidth;\r\n        // ctx.lineWidth = d.weight / edgeWeights.maxWeight;\r\n        ctx.stroke();\r\n        //ctx.fillText(d.sentiment, ((d.source.x + d.target.x) / 2) + 10 , ((d.source.y + d.target.y) / 2) + 3);\r\n    }\r\n\r\n    function drawNode(d) {\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 0.25;\r\n        ctx.moveTo(d.x, d.y);\r\n        ctx.arc(d.x, d.y, 3, 0, 2 * Math.PI);\r\n        ctx.fillStyle = color(d);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        //ctx.fillText(\"ID: \" + d.employeeID, d.x+10, d.y+3);\r\n    }\r\n\r\n    function drawSelectionInformation(neighbours) {\r\n        for (const node of nodes) {\r\n            if (selectedNode.includes(node.employeeID)) {\r\n                if (selectedNode.length == 1) {\r\n                    drawNodeInformation(node, \"Full\");\r\n                } else if (selectedNode.length > 1) {\r\n                    drawNodeInformation(node, \"Short\");\r\n                }\r\n            } else if (neighbours.includes(node)) {\r\n                if (selectedNode.length == 1) {\r\n                    drawNodeInformation(node, \"Short\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function drawNodeInformation(d, type) {\r\n        if (d != null) {\r\n            var popupX, popupY;\r\n            var popupSize, popupHeight;\r\n            if (type == \"Full\") {\r\n                popupX = d.x + 6;\r\n                popupY = d.y + 6;\r\n                popupSize = ctx.measureText(d.email).width + 4;\r\n                popupHeight = 36;\r\n            } else if (type == \"Short\") {\r\n                popupX = d.x + 3;\r\n                popupY = d.y + 3;\r\n                popupSize = ctx.measureText(Math.max(d.jobTitle, d.name));\r\n                popupHeight = 26;\r\n            } else {\r\n                console.log(\"Unkown dataframe type specified\");\r\n            }\r\n            ctx.fillStyle = \"#fff\";\r\n            ctx.fillRect(popupX, popupY, popupSize, popupHeight);\r\n            ctx.strokeStyle = \"#000\"\r\n            ctx.strokeRect(popupX, popupY, popupSize, popupHeight);\r\n\r\n            if (type == \"Full\") {\r\n                ctx.fillStyle = '#000';\r\n                ctx.fillText(d.name + \" | \" + d.employeeID, popupX + 2, popupY + 10);\r\n                ctx.fillText(d.jobTitle, popupX + 2, popupY + 20);\r\n                ctx.fillText(d.email, popupX + 2, popupY + 30);\r\n            } else if (type == \"Short\") {\r\n                ctx.fillStyle = \"#fff\";\r\n                ctx.fillText(d.name, popupX + 2, popupY + 10);\r\n                ctx.fillText(d.jobTitle, popupX + 2, popupY + 20);\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    function color() {\r\n        var scale = d3.scaleOrdinal(d3.schemeCategory10);\r\n        return d => scale(d.group);\r\n    }\r\n\r\n    //Update loop seperate from the tick function, thus not controlled by D3\r\n    function heartBeat() {\r\n         if (simulation.alpha() < 0.01 && (oldSelection != selectedNode[0] || oldSelectionSize != selectedNode.length)) {\r\n             simulation.alpha(0.01).restart();\r\n             oldSelection = selectedNode[0];\r\n             oldSelectionSize = selectedNode.length;\r\n         }\r\n         if (updateCounter[0] != updateID) {\r\n            simulation = null;\r\n            clearInterval(heartBeatInterval);\r\n         }\r\n    }\r\n\r\n\r\n    function onClick(event) {\r\n        if (selectedNode.length <= 1) {\r\n            selectedNode[0] = event.subject.employeeID;\r\n        }\r\n    }\r\n\r\n    function dragNodes(simulation) {\r\n        function dragSubject(event) {\r\n            return simulation.find(event.x, event.y);\r\n        }\r\n\r\n        // Use dragStart event to hack in clickability in HTML canvas\r\n        function dragStarted(event) {\r\n            onClick(event);\r\n\r\n            if (!event.active) simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n        }\r\n\r\n        function dragged(event) {\r\n            event.subject.fx = event.x;\r\n            event.subject.fy = event.y;\r\n        }\r\n\r\n        function dragEnded(event) {\r\n            if (!event.active) simulation.alphaTarget(0);\r\n            event.subject.fx = null;\r\n            event.subject.fy = null;\r\n        }\r\n\r\n        return d3.drag()\r\n            .subject(dragSubject)\r\n            .on(\"start\", dragStarted)\r\n            .on(\"drag\", dragged)\r\n            .on(\"end\", dragEnded)\r\n    }\r\n\r\n    heartBeatInterval = setInterval(function () { heartBeat(); }, 50); // Check for updates every 500 ms\r\n    simulation.alpha(20).restart();\r\n    return d3.select(ctx.canvas).call(dragNodes(simulation)).node();\r\n}\r\n\r\n\r\nexport default generateNetworkCanvas"]}]}