{"remainingRequest":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\src\\visualisations\\nodelinkv2.0.js","dependencies":[{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\src\\visualisations\\nodelinkv2.0.js","mtime":1625071969416},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623407834742},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js","mtime":1623407834357},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\eslint-loader\\index.js","mtime":1623407839439}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Koen/Documents/GitHub/DBL-Project/src/visualisations/nodelinkv2.0.js"],"names":["d3","generateNetworkCanvas","edges","nodes","edgeWeights","selectedNode","side","document","getElementById","value","canvas","createElement","w","clientWidth","h","clientHeight","oldSelection","oldSelectionSize","minWidth","maxWidth","logCoefficient","Math","log10","maxWeight","logCoefficient2","log2","width","height","boundDistance","min","boundDistanceSquared","pow","appendChild","ctx","getContext","strokeStyle","lineWidth","transform","zoomIdentity","simulation","forceSimulation","force","forceManyBody","strength","distanceMax","forceLink","id","d","employeeID","links","edge","console","log","weight","forceCenter","on","ticked","clearRect","translate","x","y","scale","k","neighbours","prepareEdges","node","constrainNode","includes","fillStyle","length","drawNode","drawSelectionInformation","distanceFromCenterSquared","distanceFromCenter","sqrt","selectionEdges","normalEdges","drawAllEdges","source","push","target","fromSelection","toSelection","strokeColor","forEach","drawEdge","r","sentiment","g","b","toString","slice","beginPath","moveTo","lineTo","stroke","arc","PI","color","fill","drawNodeInformation","type","popupX","popupY","popupSize","popupHeight","measureText","email","max","jobTitle","name","fillRect","strokeRect","fillText","scaleOrdinal","schemeCategory10","group","heartBeat","alpha","restart","zooming","event","onClick","subject","dragNodes","dragSubject","find","dragStarted","active","alphaTarget","fx","fy","dragged","dragEnded","drag","setInterval","select","call"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\r\n\r\n\r\n\r\nfunction generateNetworkCanvas(edges, nodes, edgeWeights, selectedNode) {\r\n    var side = document.getElementById(document.getElementById(\"testSelectNL\").value);\r\n    var canvas = document.createElement('canvas');\r\n    var w = document.getElementById(\"viscontent\").clientWidth;\r\n    var h = document.getElementById(\"viscontent\").clientHeight - 130;\r\n    var oldSelection = null;\r\n    var oldSelectionSize = 0;\r\n\r\n    const minWidth = 0.01;                                                              // width of an edge with weight 1\r\n    const maxWidth = 1;                                                                // width of largest edge\r\n    const logCoefficient = (maxWidth - minWidth) / Math.log10(edgeWeights.maxWeight); \r\n    const logCoefficient2 = (10 - minWidth) / Math.log2(edgeWeights.maxWeight); // coeficient that is used to calculate opacity\r\n\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n    // Creates a circle bound with diameter of the smallest of either the width or height of the window.\r\n    var boundDistance = Math.min(w / 2, h / 2);\r\n    var boundDistanceSquared = Math.pow(boundDistance, 2);\r\n\r\n    side.appendChild(canvas);\r\n\r\n    var ctx = canvas.getContext(\"2d\");\r\n    ctx.strokeStyle = \"red\"\r\n    ctx.lineWidth = 0.1;\r\n\r\n    var transform = d3.zoomIdentity;\r\n\r\n    var simulation = d3 //done\r\n        .forceSimulation(nodes)\r\n        .force(\r\n            \"charge\",\r\n            d3.forceManyBody()\r\n                .strength(-50)\r\n                .distanceMax(100))\r\n        .force(\r\n            \"link\",\r\n            d3\r\n                .forceLink()\r\n                .id(function (d) {\r\n                    return d.employeeID;\r\n                })\r\n                .links(edges)\r\n                .strength(function (edge) {\r\n                    console.log(edge)\r\n                    return ((Math.log2(edge.weight) * logCoefficient2) + minWidth) / edgeWeights.maxWeight;\r\n                })\r\n        )\r\n        .force(\"center\", d3.forceCenter(w / 2, h / 2))\r\n        .on(\"tick\", ticked);\r\n\r\n    function ticked() {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.translate(transform.x, transform.y);\r\n        ctx.scale(transform.k, transform.k);\r\n\r\n        var neighbours = prepareEdges(edges);\r\n        //console.log(neighbours);\r\n        for (const node of nodes) {\r\n            constrainNode(node);\r\n            // Change selected node to stand out\r\n            if (selectedNode.includes(node.employeeID)) {\r\n                ctx.strokeStyle = \"#000\";\r\n                ctx.fillStyle = \"#ff0000\";\r\n            } else if (neighbours.includes(node) && selectedNode.length <= 1) {\r\n                ctx.strokeStyle = \"#000\";\r\n                ctx.fillStyle = \"#00ff00\";\r\n            } else {\r\n                ctx.strokeStyle = \"#fff\";\r\n                ctx.fillStyle = \"#000\";\r\n            }\r\n            if (selectedNode.includes(node.employeeID) || selectedNode.length <= 1) {\r\n                drawNode(node);\r\n            }\r\n            //drawNode(node)\r\n        }\r\n        drawSelectionInformation(neighbours);\r\n        //selectedNode.forEach(drawSelectionInformation)\r\n    }\r\n\r\n\r\n    function constrainNode(node) {\r\n        var distanceFromCenterSquared = Math.pow(node.x - w / 2, 2) + Math.pow(node.y - h / 2, 2);\r\n        if (distanceFromCenterSquared > boundDistanceSquared) {\r\n            var distanceFromCenter = Math.sqrt(distanceFromCenterSquared);\r\n            node.x = ((node.x - w / 2) / distanceFromCenter) * boundDistance + w / 2;\r\n            node.y = ((node.y - h / 2) / distanceFromCenter) * boundDistance + h / 2;\r\n        }\r\n        //node.x = Math.min(w-6, Math.max(2, node.x));\r\n        //node.y = Math.min(h-130, Math.max(2, node.y));\r\n    }\r\n\r\n    function prepareEdges(edges) {\r\n        var selectionEdges = [];\r\n        var normalEdges = [];\r\n        var neighbours = [];\r\n\r\n        if (selectedNode[0] == null) { // No selection, draw all edges normally\r\n            drawAllEdges(edges, '#aaa');\r\n        } else if (selectedNode[1] == null) { // 1 selection, draw connected edges and mark neighbouring nodes.\r\n            for (const edge of edges) {\r\n                if (edge.source.employeeID == selectedNode[0]) {\r\n                    selectionEdges.push(edge);\r\n                    neighbours.push(edge.target);\r\n                } else if (edge.target.employeeID == selectedNode[0]) {\r\n                    selectionEdges.push(edge);\r\n                    neighbours.push(edge.source);\r\n                } else {\r\n                    normalEdges.push(edge);\r\n                }\r\n            }\r\n            drawAllEdges(normalEdges, '#aaa');\r\n\r\n            drawAllEdges(selectionEdges, '#f58a2c');\r\n        } else { // 2 or more selections, mark edges between selected nodes.\r\n            for (const edge of edges) {\r\n                var fromSelection = selectedNode.includes(edge.source.employeeID);\r\n                var toSelection = selectedNode.includes(edge.target.employeeID);\r\n                if (fromSelection && toSelection) {\r\n                    selectionEdges.push(edge);\r\n                } else if (fromSelection) {\r\n                    neighbours.push(edge.target);\r\n                    normalEdges.push(edge);\r\n                } else if (toSelection) {\r\n                    neighbours.push(edge.source);\r\n                    normalEdges.push(edge);\r\n                } else {\r\n                    normalEdges.push(edge);\r\n                }\r\n            }\r\n            //drawAllEdges(normalEdges, '#aaa');\r\n\r\n            drawAllEdges(selectionEdges, \"Sentiment\");\r\n        }\r\n\r\n        return neighbours;\r\n    }\r\n\r\n    function drawAllEdges(edges, strokeColor) {\r\n        if (strokeColor[0] == \"#\") {\r\n            ctx.strokeStyle = strokeColor;\r\n            edges.forEach(drawEdge);\r\n        } else {\r\n            edges.forEach(edge => {\r\n                let r=127-(edge.sentiment*100)\r\n                let g=127+(edge.sentiment*100);\r\n                let b=0;\r\n                ctx.strokeStyle = \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\r\n                drawEdge(edge)\r\n            });\r\n        }\r\n    }\r\n\r\n    function drawEdge(d) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(d.source.x, d.source.y);\r\n        ctx.lineTo(d.target.x, d.target.y);\r\n        ctx.lineWidth=(Math.log10(d.weight) * logCoefficient) + minWidth;\r\n        // ctx.lineWidth = d.weight / edgeWeights.maxWeight;\r\n        ctx.stroke();\r\n        //ctx.fillText(d.sentiment, ((d.source.x + d.target.x) / 2) + 10 , ((d.source.y + d.target.y) / 2) + 3);\r\n        //console.log(d.sentiment)\r\n    }\r\n\r\n    function drawNode(d) {\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 0.25;\r\n        ctx.moveTo(d.x, d.y);\r\n        ctx.arc(d.x, d.y, 3, 0, 2 * Math.PI);\r\n        ctx.fillStyle = color(d);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        //ctx.fillText(\"ID: \" + d.employeeID, d.x+10, d.y+3);\r\n    }\r\n\r\n    function drawSelectionInformation(neighbours) {\r\n        for (const node of nodes) {\r\n            if (selectedNode.includes(node.employeeID)) {\r\n                if (selectedNode.length == 1) {\r\n                    drawNodeInformation(node, \"Full\");\r\n                } else if (selectedNode.length > 1) {\r\n                    drawNodeInformation(node, \"Short\");\r\n                }\r\n            } else if (neighbours.includes(node.employeeID)) {\r\n                if (selectedNode.length == 1) {\r\n                    drawNodeInformation(node, \"Short\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function drawNodeInformation(d, type) {\r\n        if (d != null) {\r\n            var popupX, popupY;\r\n            var popupSize, popupHeight;\r\n            if (type == \"Full\") {\r\n                popupX = d.x + 6;\r\n                popupY = d.y + 6;\r\n                popupSize = ctx.measureText(d.email).width + 4;\r\n                popupHeight = 36;\r\n            } else if (type == \"Short\") {\r\n                popupX = d.x + 3;\r\n                popupY = d.y + 3;\r\n                popupSize = ctx.measureText(Math.max(d.jobTitle, d.name));\r\n                popupHeight = 26;\r\n            } else {\r\n                console.log(\"Unkown dataframe type specified\");\r\n            }\r\n            ctx.fillStyle = \"#fff\";\r\n            ctx.fillRect(popupX, popupY, popupSize, popupHeight);\r\n            ctx.strokeStyle = \"#000\"\r\n            ctx.strokeRect(popupX, popupY, popupSize, popupHeight);\r\n\r\n            if (type == \"Full\") {\r\n                ctx.fillStyle = '#000';\r\n                ctx.fillText(d.name + \" | \" + d.employeeID, popupX + 2, popupY + 10);\r\n                ctx.fillText(d.jobTitle, popupX + 2, popupY + 20);\r\n                ctx.fillText(d.email, popupX + 2, popupY + 30);\r\n            } else if (type == \"Short\") {\r\n                ctx.fillStyle = \"#fff\";\r\n                ctx.fillText(d.name, popupX + 2, popupY + 10);\r\n                ctx.fillText(d.jobTitle, popupX + 2, popupY + 20);\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    function color() {\r\n        var scale = d3.scaleOrdinal(d3.schemeCategory10);\r\n        return d => scale(d.group);\r\n    }\r\n\r\n    //Update loop seperate from the tick function, thus not controlled by D3\r\n    function heartBeat() {\r\n         if (simulation.alpha() < 0.01 && (oldSelection != selectedNode[0] || oldSelectionSize != selectedNode.length)) {\r\n             console.log(\"Attempting wakeup\");\r\n             simulation.alpha(0.01).restart();\r\n             oldSelection = selectedNode[0];\r\n             oldSelectionSize = selectedNode.length;\r\n         }\r\n    }\r\n\r\n    function zooming(event) {\r\n        transform = event.transform;\r\n        ticked();\r\n    }\r\n\r\n    function onClick(event) {\r\n        if (selectedNode.length <= 1) {\r\n            selectedNode[0] = event.subject.employeeID;\r\n        }\r\n    }\r\n\r\n    function dragNodes(simulation) {\r\n        function dragSubject(event) {\r\n            return simulation.find(event.x, event.y);\r\n        }\r\n\r\n        // Use dragStart event to hack in clickability in HTML canvas\r\n        function dragStarted(event) {\r\n            onClick(event);\r\n\r\n            if (!event.active) simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n        }\r\n\r\n        function dragged(event) {\r\n            event.subject.fx = event.x;\r\n            event.subject.fy = event.y;\r\n        }\r\n\r\n        function dragEnded(event) {\r\n            if (!event.active) simulation.alphaTarget(0);\r\n            event.subject.fx = null;\r\n            event.subject.fy = null;\r\n        }\r\n\r\n        return d3.drag()\r\n            .subject(dragSubject)\r\n            .on(\"start\", dragStarted)\r\n            .on(\"drag\", dragged)\r\n            .on(\"end\", dragEnded)\r\n    }\r\n\r\n    console.log(zooming);\r\n\r\n    setInterval(function () { heartBeat(); }, 50); // Check for updates every 500 ms\r\n    return d3.select(ctx.canvas).call(dragNodes(simulation)).node();\r\n}\r\n\r\n\r\nexport default generateNetworkCanvas"]}]}