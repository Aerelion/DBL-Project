{"remainingRequest":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\src\\visualisations\\nodelinkv2.0.js","dependencies":[{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\src\\visualisations\\nodelinkv2.0.js","mtime":1625221708795},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623407834742},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js","mtime":1623407834357},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\eslint-loader\\index.js","mtime":1623407839439}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzL0tvZW4vRG9jdW1lbnRzL0dpdEh1Yi9EQkwtUHJvamVjdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5tYXRoLmxvZzEwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubWF0aC5sb2cyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICogYXMgZDMgZnJvbSAiZDMiOwoKZnVuY3Rpb24gZ2VuZXJhdGVOZXR3b3JrQ2FudmFzKGVkZ2VzLCBub2RlcywgZWRnZVdlaWdodHMsIHNlbGVjdGVkTm9kZSwgdXBkYXRlQ291bnRlcikgewogIHZhciBoZWFydEJlYXRJbnRlcnZhbDsKICB2YXIgdXBkYXRlSUQ7CiAgdmFyIHNpZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidGVzdFNlbGVjdE5MIikudmFsdWUpOwogIHZhciBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTsKICB2YXIgdyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ2aXNjb250ZW50IikuY2xpZW50V2lkdGg7CiAgdmFyIGggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidmlzY29udGVudCIpLmNsaWVudEhlaWdodCAtIDEzMDsKICB2YXIgb2xkU2VsZWN0aW9uID0gbnVsbDsKICB2YXIgb2xkU2VsZWN0aW9uU2l6ZSA9IDA7CiAgdmFyIHNpbXBsaWZpZWRFZGdlcyA9IFtdOwoKICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZWRnZXMpLAogICAgICBfc3RlcDsKCiAgdHJ5IHsKICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgIHZhciBvbGRFZGdlID0gX3N0ZXAudmFsdWU7CiAgICAgIHZhciBpc05ldyA9IHRydWU7CgogICAgICBpZiAoc2ltcGxpZmllZEVkZ2VzLmxlbmd0aCA+IDApIHsKICAgICAgICB2YXIgX2l0ZXJhdG9yNiA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHNpbXBsaWZpZWRFZGdlcyksCiAgICAgICAgICAgIF9zdGVwNjsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yNi5zKCk7ICEoX3N0ZXA2ID0gX2l0ZXJhdG9yNi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciBfZWRnZTMgPSBfc3RlcDYudmFsdWU7CgogICAgICAgICAgICBpZiAoX2VkZ2UzLnNvdXJjZSA9PSBvbGRFZGdlLnRhcmdldCAmJiBfZWRnZTMudGFyZ2V0ID09IG9sZEVkZ2Uuc291cmNlKSB7CiAgICAgICAgICAgICAgX2VkZ2UzLndlaWdodCA9IF9lZGdlMy53ZWlnaHQgKyBvbGRFZGdlLndlaWdodDsKICAgICAgICAgICAgICBfZWRnZTMuc2VudGltZW50ID0gKF9lZGdlMy5zZW50aW1lbnQgKyBvbGRFZGdlLnNlbnRpbWVudCkgLyAyOwogICAgICAgICAgICAgIGlzTmV3ID0gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9pdGVyYXRvcjYuZShlcnIpOwogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBfaXRlcmF0b3I2LmYoKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChpc05ldykgewogICAgICAgIHNpbXBsaWZpZWRFZGdlcy5wdXNoKG9sZEVkZ2UpOwogICAgICB9CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfaXRlcmF0b3IuZShlcnIpOwogIH0gZmluYWxseSB7CiAgICBfaXRlcmF0b3IuZigpOwogIH0KCiAgZm9yICh2YXIgX2kgPSAwLCBfc2ltcGxpZmllZEVkZ2VzID0gc2ltcGxpZmllZEVkZ2VzOyBfaSA8IF9zaW1wbGlmaWVkRWRnZXMubGVuZ3RoOyBfaSsrKSB7CiAgICB2YXIgZWRnZSA9IF9zaW1wbGlmaWVkRWRnZXNbX2ldOwogICAgdmFyIHNlbnRpbWVudCA9IGVkZ2Uuc2VudGltZW50ICogKDEgLyAwLjAyNSk7CiAgICB2YXIgaHVlID0gTWF0aC5taW4oTWF0aC5tYXgoLTEsIHNlbnRpbWVudCksIDEpICogMC41OTkgKiAxMDAgKyA2MDsKICAgIHZhciBzYXR1cmF0aW9uID0gTWF0aC5taW4oMSwgTWF0aC5tYXgoMC4yLCBNYXRoLmFicyhzZW50aW1lbnQgKiAxLjUpKSk7CiAgICB2YXIgbGlnaHRuZXNzID0gTWF0aC5tYXgoMC41LCBNYXRoLm1pbigwLjgsIDEgLSBNYXRoLmFicyhzZW50aW1lbnQgKiAxLjIpKSk7IC8vY29uc29sZS5sb2coc2VudGltZW50ICsgIjogIiArIGh1ZSArICIsICIgKyBzYXR1cmF0aW9uICsgIiwgIiArIGxpZ2h0bmVzcyk7CgogICAgdmFyIGMgPSAoMSAtIE1hdGguYWJzKDIgKiBsaWdodG5lc3MgLSAxKSkgKiBzYXR1cmF0aW9uOwogICAgdmFyIHggPSBjICogKDEgLSBNYXRoLmFicyhodWUgLyA2MCAlIDIgLSAxKSk7CiAgICB2YXIgbSA9IGxpZ2h0bmVzcyAtIGMgLyAyOwogICAgdmFyIHIsIGcsIGI7CgogICAgaWYgKGh1ZSA8IDYwKSB7CiAgICAgIHIgPSAoYyArIG0pICogMjU1OwogICAgICBnID0gKHggKyBtKSAqIDI1NTsKICAgICAgYiA9IG0gKiAyNTU7CiAgICB9IGVsc2UgaWYgKGh1ZSA8IDEyMCkgewogICAgICByID0gKHggKyBtKSAqIDI1NTsKICAgICAgZyA9IChjICsgbSkgKiAyNTU7CiAgICAgIGIgPSBtICogMjU1OwogICAgfQoKICAgIGVkZ2VbImNvbG9yIl0gPSAiIyIgKyAoKDEgPDwgMjQpICsgKE1hdGguZmxvb3IocikgPDwgMTYpICsgKE1hdGguZmxvb3IoZykgPDwgOCkgKyBNYXRoLmZsb29yKGIpKS50b1N0cmluZygxNikuc2xpY2UoMSk7IC8vY29uc29sZS5sb2coZWRnZVsiY29sb3IiXSk7CiAgfQoKICB2YXIgbWluV2lkdGggPSAwLjAxOyAvLyB3aWR0aCBvZiBhbiBlZGdlIHdpdGggd2VpZ2h0IDEKCiAgdmFyIG1heFdpZHRoID0gMTsgLy8gd2lkdGggb2YgbGFyZ2VzdCBlZGdlCgogIHZhciBsb2dDb2VmZmljaWVudCA9IChtYXhXaWR0aCAtIG1pbldpZHRoKSAvIE1hdGgubG9nMTAoZWRnZVdlaWdodHMubWF4V2VpZ2h0KTsKICB2YXIgbG9nQ29lZmZpY2llbnQyID0gKDEwIC0gbWluV2lkdGgpIC8gTWF0aC5sb2cyKGVkZ2VXZWlnaHRzLm1heFdlaWdodCk7IC8vIGNvZWZpY2llbnQgdGhhdCBpcyB1c2VkIHRvIGNhbGN1bGF0ZSBvcGFjaXR5CgogIGlmICh1cGRhdGVDb3VudGVyWzBdICE9IG51bGwpIHsKICAgIHVwZGF0ZUlEID0gdXBkYXRlQ291bnRlclswXTsKICB9IGVsc2UgewogICAgdXBkYXRlSUQgPSAwOwogIH0KCiAgY2FudmFzLmlkID0gIk5MQ2FudmFzIjsKICBjYW52YXMud2lkdGggPSB3OwogIGNhbnZhcy5oZWlnaHQgPSBoOyAvLyBDcmVhdGVzIGEgY2lyY2xlIGJvdW5kIHdpdGggZGlhbWV0ZXIgb2YgdGhlIHNtYWxsZXN0IG9mIGVpdGhlciB0aGUgd2lkdGggb3IgaGVpZ2h0IG9mIHRoZSB3aW5kb3cuCgogIHZhciBib3VuZERpc3RhbmNlID0gTWF0aC5taW4odyAvIDIsIGggLyAyKTsKICB2YXIgYm91bmREaXN0YW5jZVNxdWFyZWQgPSBNYXRoLnBvdyhib3VuZERpc3RhbmNlLCAyKTsKICBzaWRlLmFwcGVuZENoaWxkKGNhbnZhcyk7CiAgdmFyIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCIyZCIpOwogIGN0eC5zdHJva2VTdHlsZSA9ICJyZWQiOwogIGN0eC5saW5lV2lkdGggPSAwLjE7CiAgdmFyIHRyYW5zZm9ybSA9IGQzLnpvb21JZGVudGl0eTsKICB2YXIgc2ltdWxhdGlvbiA9IGQzIC8vZG9uZQogIC5mb3JjZVNpbXVsYXRpb24obm9kZXMpLmZvcmNlKCJjaGFyZ2UiLCBkMy5mb3JjZU1hbnlCb2R5KCkuc3RyZW5ndGgoLTUwKS5kaXN0YW5jZU1heCgxMDApKS5mb3JjZSgibGluayIsIGQzLmZvcmNlTGluaygpLmlkKGZ1bmN0aW9uIChkKSB7CiAgICByZXR1cm4gZC5lbXBsb3llZUlEOwogIH0pLmxpbmtzKHNpbXBsaWZpZWRFZGdlcykuc3RyZW5ndGgoZnVuY3Rpb24gKGVkZ2UpIHsKICAgIC8vY29uc29sZS5sb2coZWRnZSkKICAgIHJldHVybiAoTWF0aC5sb2cyKGVkZ2Uud2VpZ2h0KSAqIGxvZ0NvZWZmaWNpZW50MiArIG1pbldpZHRoKSAvIGVkZ2VXZWlnaHRzLm1heFdlaWdodDsKICB9KSkuZm9yY2UoImNlbnRlciIsIGQzLmZvcmNlQ2VudGVyKHcgLyAyLCBoIC8gMikpLm9uKCJ0aWNrIiwgdGlja2VkKTsKCiAgZnVuY3Rpb24gdGlja2VkKCkgewogICAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpOwogICAgY3R4LnRyYW5zbGF0ZSh0cmFuc2Zvcm0ueCwgdHJhbnNmb3JtLnkpOwogICAgY3R4LnNjYWxlKHRyYW5zZm9ybS5rLCB0cmFuc2Zvcm0uayk7CiAgICB2YXIgbmVpZ2hib3VycyA9IHByZXBhcmVFZGdlcyhzaW1wbGlmaWVkRWRnZXMpOyAvL2NvbnNvbGUubG9nKG5laWdoYm91cnMpOwoKICAgIHZhciBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIobm9kZXMpLAogICAgICAgIF9zdGVwMjsKCiAgICB0cnkgewogICAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykgewogICAgICAgIHZhciBub2RlID0gX3N0ZXAyLnZhbHVlOwogICAgICAgIGNvbnN0cmFpbk5vZGUobm9kZSk7IC8vIENoYW5nZSBzZWxlY3RlZCBub2RlIHRvIHN0YW5kIG91dAoKICAgICAgICBpZiAoc2VsZWN0ZWROb2RlLmluY2x1ZGVzKG5vZGUuZW1wbG95ZWVJRCkpIHsKICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICIjMDAwIjsKICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSAiI2ZmMDAwMCI7CiAgICAgICAgfSBlbHNlIGlmIChuZWlnaGJvdXJzLmluY2x1ZGVzKG5vZGUpICYmIHNlbGVjdGVkTm9kZS5sZW5ndGggPD0gMSkgewogICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gIiMwMDAiOwogICAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICIjMDBmZjAwIjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gIiNmZmYiOwogICAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICIjMDAwIjsKICAgICAgICB9CgogICAgICAgIGlmIChzZWxlY3RlZE5vZGUuaW5jbHVkZXMobm9kZS5lbXBsb3llZUlEKSB8fCBzZWxlY3RlZE5vZGUubGVuZ3RoIDw9IDEpIHsKICAgICAgICAgIGRyYXdOb2RlKG5vZGUpOwogICAgICAgIH0gLy9kcmF3Tm9kZShub2RlKQoKICAgICAgfQogICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgfSBmaW5hbGx5IHsKICAgICAgX2l0ZXJhdG9yMi5mKCk7CiAgICB9CgogICAgZHJhd1NlbGVjdGlvbkluZm9ybWF0aW9uKG5laWdoYm91cnMpOyAvL3NlbGVjdGVkTm9kZS5mb3JFYWNoKGRyYXdTZWxlY3Rpb25JbmZvcm1hdGlvbikKICB9CgogIGZ1bmN0aW9uIGNvbnN0cmFpbk5vZGUobm9kZSkgewogICAgdmFyIGRpc3RhbmNlRnJvbUNlbnRlclNxdWFyZWQgPSBNYXRoLnBvdyhub2RlLnggLSB3IC8gMiwgMikgKyBNYXRoLnBvdyhub2RlLnkgLSBoIC8gMiwgMik7CgogICAgaWYgKGRpc3RhbmNlRnJvbUNlbnRlclNxdWFyZWQgPiBib3VuZERpc3RhbmNlU3F1YXJlZCkgewogICAgICB2YXIgZGlzdGFuY2VGcm9tQ2VudGVyID0gTWF0aC5zcXJ0KGRpc3RhbmNlRnJvbUNlbnRlclNxdWFyZWQpOwogICAgICBub2RlLnggPSAobm9kZS54IC0gdyAvIDIpIC8gZGlzdGFuY2VGcm9tQ2VudGVyICogYm91bmREaXN0YW5jZSArIHcgLyAyOwogICAgICBub2RlLnkgPSAobm9kZS55IC0gaCAvIDIpIC8gZGlzdGFuY2VGcm9tQ2VudGVyICogYm91bmREaXN0YW5jZSArIGggLyAyOwogICAgfSAvL25vZGUueCA9IE1hdGgubWluKHctNiwgTWF0aC5tYXgoMiwgbm9kZS54KSk7CiAgICAvL25vZGUueSA9IE1hdGgubWluKGgtMTMwLCBNYXRoLm1heCgyLCBub2RlLnkpKTsKCiAgfQoKICBmdW5jdGlvbiBwcmVwYXJlRWRnZXMoZWRnZXMpIHsKICAgIHZhciBzZWxlY3Rpb25FZGdlcyA9IFtdOwogICAgdmFyIG5vcm1hbEVkZ2VzID0gW107CiAgICB2YXIgbmVpZ2hib3VycyA9IFtdOwoKICAgIGlmIChzZWxlY3RlZE5vZGVbMF0gPT0gbnVsbCkgewogICAgICAvLyBObyBzZWxlY3Rpb24sIGRyYXcgYWxsIGVkZ2VzIG5vcm1hbGx5CiAgICAgIGRyYXdBbGxFZGdlcyhlZGdlcywgJyNhYWEnKTsKICAgIH0gZWxzZSBpZiAoc2VsZWN0ZWROb2RlWzFdID09IG51bGwpIHsKICAgICAgLy8gMSBzZWxlY3Rpb24sIGRyYXcgY29ubmVjdGVkIGVkZ2VzIGFuZCBtYXJrIG5laWdoYm91cmluZyBub2Rlcy4KICAgICAgdmFyIF9pdGVyYXRvcjMgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihlZGdlcyksCiAgICAgICAgICBfc3RlcDM7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yMy5zKCk7ICEoX3N0ZXAzID0gX2l0ZXJhdG9yMy5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgX2VkZ2UgPSBfc3RlcDMudmFsdWU7CgogICAgICAgICAgaWYgKF9lZGdlLnNvdXJjZS5lbXBsb3llZUlEID09IHNlbGVjdGVkTm9kZVswXSkgewogICAgICAgICAgICBzZWxlY3Rpb25FZGdlcy5wdXNoKF9lZGdlKTsKICAgICAgICAgICAgbmVpZ2hib3Vycy5wdXNoKF9lZGdlLnRhcmdldCk7CiAgICAgICAgICB9IGVsc2UgaWYgKF9lZGdlLnRhcmdldC5lbXBsb3llZUlEID09IHNlbGVjdGVkTm9kZVswXSkgewogICAgICAgICAgICBzZWxlY3Rpb25FZGdlcy5wdXNoKF9lZGdlKTsKICAgICAgICAgICAgbmVpZ2hib3Vycy5wdXNoKF9lZGdlLnNvdXJjZSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBub3JtYWxFZGdlcy5wdXNoKF9lZGdlKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvcjMuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvcjMuZigpOwogICAgICB9CgogICAgICBkcmF3QWxsRWRnZXMobm9ybWFsRWRnZXMsICcjYWFhJyk7CiAgICAgIGRyYXdBbGxFZGdlcyhzZWxlY3Rpb25FZGdlcywgJyNmNThhMmMnKTsKICAgIH0gZWxzZSB7CiAgICAgIC8vIDIgb3IgbW9yZSBzZWxlY3Rpb25zLCBtYXJrIGVkZ2VzIGJldHdlZW4gc2VsZWN0ZWQgbm9kZXMuCiAgICAgIHZhciBfaXRlcmF0b3I0ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZWRnZXMpLAogICAgICAgICAgX3N0ZXA0OwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvcjQucygpOyAhKF9zdGVwNCA9IF9pdGVyYXRvcjQubigpKS5kb25lOykgewogICAgICAgICAgdmFyIF9lZGdlMiA9IF9zdGVwNC52YWx1ZTsKICAgICAgICAgIHZhciBmcm9tU2VsZWN0aW9uID0gc2VsZWN0ZWROb2RlLmluY2x1ZGVzKF9lZGdlMi5zb3VyY2UuZW1wbG95ZWVJRCk7CiAgICAgICAgICB2YXIgdG9TZWxlY3Rpb24gPSBzZWxlY3RlZE5vZGUuaW5jbHVkZXMoX2VkZ2UyLnRhcmdldC5lbXBsb3llZUlEKTsKCiAgICAgICAgICBpZiAoZnJvbVNlbGVjdGlvbiAmJiB0b1NlbGVjdGlvbikgewogICAgICAgICAgICBzZWxlY3Rpb25FZGdlcy5wdXNoKF9lZGdlMik7CiAgICAgICAgICB9IGVsc2UgaWYgKGZyb21TZWxlY3Rpb24pIHsKICAgICAgICAgICAgbmVpZ2hib3Vycy5wdXNoKF9lZGdlMi50YXJnZXQpOwogICAgICAgICAgICBub3JtYWxFZGdlcy5wdXNoKF9lZGdlMik7CiAgICAgICAgICB9IGVsc2UgaWYgKHRvU2VsZWN0aW9uKSB7CiAgICAgICAgICAgIG5laWdoYm91cnMucHVzaChfZWRnZTIuc291cmNlKTsKICAgICAgICAgICAgbm9ybWFsRWRnZXMucHVzaChfZWRnZTIpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbm9ybWFsRWRnZXMucHVzaChfZWRnZTIpOwogICAgICAgICAgfQogICAgICAgIH0gLy9kcmF3QWxsRWRnZXMobm9ybWFsRWRnZXMsICcjYWFhJyk7CgogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3I0LmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3I0LmYoKTsKICAgICAgfQoKICAgICAgZHJhd0FsbEVkZ2VzKHNlbGVjdGlvbkVkZ2VzLCAiU2VudGltZW50Iik7CiAgICB9CgogICAgcmV0dXJuIG5laWdoYm91cnM7CiAgfQoKICBmdW5jdGlvbiBkcmF3QWxsRWRnZXMoZWRnZXMsIHN0cm9rZUNvbG9yKSB7CiAgICBpZiAoc3Ryb2tlQ29sb3JbMF0gPT0gIiMiKSB7CiAgICAgIGN0eC5zdHJva2VTdHlsZSA9IHN0cm9rZUNvbG9yOwogICAgICBlZGdlcy5mb3JFYWNoKGRyYXdFZGdlKTsKICAgIH0gZWxzZSB7CiAgICAgIGVkZ2VzLmZvckVhY2goZnVuY3Rpb24gKGVkZ2UpIHsKICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBlZGdlLmNvbG9yOwogICAgICAgIGRyYXdFZGdlKGVkZ2UpOwogICAgICB9KTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIGRyYXdFZGdlKGQpIHsKICAgIGN0eC5iZWdpblBhdGgoKTsKICAgIGN0eC5tb3ZlVG8oZC5zb3VyY2UueCwgZC5zb3VyY2UueSk7CiAgICBjdHgubGluZVRvKGQudGFyZ2V0LngsIGQudGFyZ2V0LnkpOwogICAgY3R4LmxpbmVXaWR0aCA9IE1hdGgubG9nMTAoZC53ZWlnaHQpICogbG9nQ29lZmZpY2llbnQgKyBtaW5XaWR0aDsgLy8gY3R4LmxpbmVXaWR0aCA9IGQud2VpZ2h0IC8gZWRnZVdlaWdodHMubWF4V2VpZ2h0OwoKICAgIGN0eC5zdHJva2UoKTsgLy9jdHguZmlsbFRleHQoZC5zZW50aW1lbnQsICgoZC5zb3VyY2UueCArIGQudGFyZ2V0LngpIC8gMikgKyAxMCAsICgoZC5zb3VyY2UueSArIGQudGFyZ2V0LnkpIC8gMikgKyAzKTsKICAgIC8vY29uc29sZS5sb2coZC5zZW50aW1lbnQpCiAgfQoKICBmdW5jdGlvbiBkcmF3Tm9kZShkKSB7CiAgICBjdHguYmVnaW5QYXRoKCk7CiAgICBjdHgubGluZVdpZHRoID0gMC4yNTsKICAgIGN0eC5tb3ZlVG8oZC54LCBkLnkpOwogICAgY3R4LmFyYyhkLngsIGQueSwgMywgMCwgMiAqIE1hdGguUEkpOwogICAgY3R4LmZpbGxTdHlsZSA9IGNvbG9yKGQpOwogICAgY3R4LmZpbGwoKTsKICAgIGN0eC5zdHJva2UoKTsgLy9jdHguZmlsbFRleHQoIklEOiAiICsgZC5lbXBsb3llZUlELCBkLngrMTAsIGQueSszKTsKICB9CgogIGZ1bmN0aW9uIGRyYXdTZWxlY3Rpb25JbmZvcm1hdGlvbihuZWlnaGJvdXJzKSB7CiAgICB2YXIgX2l0ZXJhdG9yNSA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKG5vZGVzKSwKICAgICAgICBfc3RlcDU7CgogICAgdHJ5IHsKICAgICAgZm9yIChfaXRlcmF0b3I1LnMoKTsgIShfc3RlcDUgPSBfaXRlcmF0b3I1Lm4oKSkuZG9uZTspIHsKICAgICAgICB2YXIgbm9kZSA9IF9zdGVwNS52YWx1ZTsKCiAgICAgICAgaWYgKHNlbGVjdGVkTm9kZS5pbmNsdWRlcyhub2RlLmVtcGxveWVlSUQpKSB7CiAgICAgICAgICBpZiAoc2VsZWN0ZWROb2RlLmxlbmd0aCA9PSAxKSB7CiAgICAgICAgICAgIGRyYXdOb2RlSW5mb3JtYXRpb24obm9kZSwgIkZ1bGwiKTsKICAgICAgICAgIH0gZWxzZSBpZiAoc2VsZWN0ZWROb2RlLmxlbmd0aCA+IDEpIHsKICAgICAgICAgICAgZHJhd05vZGVJbmZvcm1hdGlvbihub2RlLCAiU2hvcnQiKTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgaWYgKG5laWdoYm91cnMuaW5jbHVkZXMobm9kZSkpIHsKICAgICAgICAgIGlmIChzZWxlY3RlZE5vZGUubGVuZ3RoID09IDEpIHsKICAgICAgICAgICAgZHJhd05vZGVJbmZvcm1hdGlvbihub2RlLCAiU2hvcnQiKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfaXRlcmF0b3I1LmUoZXJyKTsKICAgIH0gZmluYWxseSB7CiAgICAgIF9pdGVyYXRvcjUuZigpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gZHJhd05vZGVJbmZvcm1hdGlvbihkLCB0eXBlKSB7CiAgICBpZiAoZCAhPSBudWxsKSB7CiAgICAgIHZhciBwb3B1cFgsIHBvcHVwWTsKICAgICAgdmFyIHBvcHVwU2l6ZSwgcG9wdXBIZWlnaHQ7CgogICAgICBpZiAodHlwZSA9PSAiRnVsbCIpIHsKICAgICAgICBwb3B1cFggPSBkLnggKyA2OwogICAgICAgIHBvcHVwWSA9IGQueSArIDY7CiAgICAgICAgcG9wdXBTaXplID0gY3R4Lm1lYXN1cmVUZXh0KGQuZW1haWwpLndpZHRoICsgNDsKICAgICAgICBwb3B1cEhlaWdodCA9IDM2OwogICAgICB9IGVsc2UgaWYgKHR5cGUgPT0gIlNob3J0IikgewogICAgICAgIHBvcHVwWCA9IGQueCArIDM7CiAgICAgICAgcG9wdXBZID0gZC55ICsgMzsKICAgICAgICBwb3B1cFNpemUgPSBjdHgubWVhc3VyZVRleHQoTWF0aC5tYXgoZC5qb2JUaXRsZSwgZC5uYW1lKSk7CiAgICAgICAgcG9wdXBIZWlnaHQgPSAyNjsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmxvZygiVW5rb3duIGRhdGFmcmFtZSB0eXBlIHNwZWNpZmllZCIpOwogICAgICB9CgogICAgICBjdHguZmlsbFN0eWxlID0gIiNmZmYiOwogICAgICBjdHguZmlsbFJlY3QocG9wdXBYLCBwb3B1cFksIHBvcHVwU2l6ZSwgcG9wdXBIZWlnaHQpOwogICAgICBjdHguc3Ryb2tlU3R5bGUgPSAiIzAwMCI7CiAgICAgIGN0eC5zdHJva2VSZWN0KHBvcHVwWCwgcG9wdXBZLCBwb3B1cFNpemUsIHBvcHVwSGVpZ2h0KTsKCiAgICAgIGlmICh0eXBlID09ICJGdWxsIikgewogICAgICAgIGN0eC5maWxsU3R5bGUgPSAnIzAwMCc7CiAgICAgICAgY3R4LmZpbGxUZXh0KGQubmFtZSArICIgfCAiICsgZC5lbXBsb3llZUlELCBwb3B1cFggKyAyLCBwb3B1cFkgKyAxMCk7CiAgICAgICAgY3R4LmZpbGxUZXh0KGQuam9iVGl0bGUsIHBvcHVwWCArIDIsIHBvcHVwWSArIDIwKTsKICAgICAgICBjdHguZmlsbFRleHQoZC5lbWFpbCwgcG9wdXBYICsgMiwgcG9wdXBZICsgMzApOwogICAgICB9IGVsc2UgaWYgKHR5cGUgPT0gIlNob3J0IikgewogICAgICAgIGN0eC5maWxsU3R5bGUgPSAiI2ZmZiI7CiAgICAgICAgY3R4LmZpbGxUZXh0KGQubmFtZSwgcG9wdXBYICsgMiwgcG9wdXBZICsgMTApOwogICAgICAgIGN0eC5maWxsVGV4dChkLmpvYlRpdGxlLCBwb3B1cFggKyAyLCBwb3B1cFkgKyAyMCk7CiAgICAgIH0KICAgIH0KICB9CgogIGZ1bmN0aW9uIGNvbG9yKCkgewogICAgdmFyIHNjYWxlID0gZDMuc2NhbGVPcmRpbmFsKGQzLnNjaGVtZUNhdGVnb3J5MTApOwogICAgcmV0dXJuIGZ1bmN0aW9uIChkKSB7CiAgICAgIHJldHVybiBzY2FsZShkLmdyb3VwKTsKICAgIH07CiAgfSAvL1VwZGF0ZSBsb29wIHNlcGVyYXRlIGZyb20gdGhlIHRpY2sgZnVuY3Rpb24sIHRodXMgbm90IGNvbnRyb2xsZWQgYnkgRDMKCgogIGZ1bmN0aW9uIGhlYXJ0QmVhdCgpIHsKICAgIGlmIChzaW11bGF0aW9uLmFscGhhKCkgPCAwLjAxICYmIChvbGRTZWxlY3Rpb24gIT0gc2VsZWN0ZWROb2RlWzBdIHx8IG9sZFNlbGVjdGlvblNpemUgIT0gc2VsZWN0ZWROb2RlLmxlbmd0aCkpIHsKICAgICAgY29uc29sZS5sb2coY2FudmFzKTsKICAgICAgc2ltdWxhdGlvbi5hbHBoYSgwLjAxKS5yZXN0YXJ0KCk7CiAgICAgIG9sZFNlbGVjdGlvbiA9IHNlbGVjdGVkTm9kZVswXTsKICAgICAgb2xkU2VsZWN0aW9uU2l6ZSA9IHNlbGVjdGVkTm9kZS5sZW5ndGg7CiAgICB9CgogICAgaWYgKHVwZGF0ZUNvdW50ZXJbMF0gIT0gdXBkYXRlSUQpIHsKICAgICAgc2ltdWxhdGlvbiA9IG51bGw7CiAgICAgIGNsZWFySW50ZXJ2YWwoaGVhcnRCZWF0SW50ZXJ2YWwpOwogICAgfQogIH0gLy9mdW5jdGlvbiB6b29taW5nKGV2ZW50KSB7CiAgLy90cmFuc2Zvcm0gPSBldmVudC50cmFuc2Zvcm07CiAgLy90aWNrZWQoKTsKICAvL30KCgogIGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQpIHsKICAgIGlmIChzZWxlY3RlZE5vZGUubGVuZ3RoIDw9IDEpIHsKICAgICAgc2VsZWN0ZWROb2RlWzBdID0gZXZlbnQuc3ViamVjdC5lbXBsb3llZUlEOwogICAgfQogIH0KCiAgZnVuY3Rpb24gZHJhZ05vZGVzKHNpbXVsYXRpb24pIHsKICAgIGZ1bmN0aW9uIGRyYWdTdWJqZWN0KGV2ZW50KSB7CiAgICAgIHJldHVybiBzaW11bGF0aW9uLmZpbmQoZXZlbnQueCwgZXZlbnQueSk7CiAgICB9IC8vIFVzZSBkcmFnU3RhcnQgZXZlbnQgdG8gaGFjayBpbiBjbGlja2FiaWxpdHkgaW4gSFRNTCBjYW52YXMKCgogICAgZnVuY3Rpb24gZHJhZ1N0YXJ0ZWQoZXZlbnQpIHsKICAgICAgb25DbGljayhldmVudCk7CiAgICAgIGlmICghZXZlbnQuYWN0aXZlKSBzaW11bGF0aW9uLmFscGhhVGFyZ2V0KDAuMykucmVzdGFydCgpOwogICAgICBldmVudC5zdWJqZWN0LmZ4ID0gZXZlbnQuc3ViamVjdC54OwogICAgICBldmVudC5zdWJqZWN0LmZ5ID0gZXZlbnQuc3ViamVjdC55OwogICAgfQoKICAgIGZ1bmN0aW9uIGRyYWdnZWQoZXZlbnQpIHsKICAgICAgZXZlbnQuc3ViamVjdC5meCA9IGV2ZW50Lng7CiAgICAgIGV2ZW50LnN1YmplY3QuZnkgPSBldmVudC55OwogICAgfQoKICAgIGZ1bmN0aW9uIGRyYWdFbmRlZChldmVudCkgewogICAgICBpZiAoIWV2ZW50LmFjdGl2ZSkgc2ltdWxhdGlvbi5hbHBoYVRhcmdldCgwKTsKICAgICAgZXZlbnQuc3ViamVjdC5meCA9IG51bGw7CiAgICAgIGV2ZW50LnN1YmplY3QuZnkgPSBudWxsOwogICAgfQoKICAgIHJldHVybiBkMy5kcmFnKCkuc3ViamVjdChkcmFnU3ViamVjdCkub24oInN0YXJ0IiwgZHJhZ1N0YXJ0ZWQpLm9uKCJkcmFnIiwgZHJhZ2dlZCkub24oImVuZCIsIGRyYWdFbmRlZCk7CiAgfSAvL2NvbnNvbGUubG9nKHpvb21pbmcpOwoKCiAgaGVhcnRCZWF0SW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICBoZWFydEJlYXQoKTsKICB9LCA1MCk7IC8vIENoZWNrIGZvciB1cGRhdGVzIGV2ZXJ5IDUwMCBtcwoKICByZXR1cm4gZDMuc2VsZWN0KGN0eC5jYW52YXMpLmNhbGwoZHJhZ05vZGVzKHNpbXVsYXRpb24pKS5ub2RlKCk7Cn0KCmV4cG9ydCBkZWZhdWx0IGdlbmVyYXRlTmV0d29ya0NhbnZhczs="},{"version":3,"sources":["C:/Users/Koen/Documents/GitHub/DBL-Project/src/visualisations/nodelinkv2.0.js"],"names":["d3","generateNetworkCanvas","edges","nodes","edgeWeights","selectedNode","updateCounter","heartBeatInterval","updateID","side","document","getElementById","value","canvas","createElement","w","clientWidth","h","clientHeight","oldSelection","oldSelectionSize","simplifiedEdges","oldEdge","isNew","length","edge","source","target","weight","sentiment","push","hue","Math","min","max","saturation","abs","lightness","c","x","m","r","g","b","floor","toString","slice","minWidth","maxWidth","logCoefficient","log10","maxWeight","logCoefficient2","log2","id","width","height","boundDistance","boundDistanceSquared","pow","appendChild","ctx","getContext","strokeStyle","lineWidth","transform","zoomIdentity","simulation","forceSimulation","force","forceManyBody","strength","distanceMax","forceLink","d","employeeID","links","forceCenter","on","ticked","clearRect","translate","y","scale","k","neighbours","prepareEdges","node","constrainNode","includes","fillStyle","drawNode","drawSelectionInformation","distanceFromCenterSquared","distanceFromCenter","sqrt","selectionEdges","normalEdges","drawAllEdges","fromSelection","toSelection","strokeColor","forEach","drawEdge","color","beginPath","moveTo","lineTo","stroke","arc","PI","fill","drawNodeInformation","type","popupX","popupY","popupSize","popupHeight","measureText","email","jobTitle","name","console","log","fillRect","strokeRect","fillText","scaleOrdinal","schemeCategory10","group","heartBeat","alpha","restart","clearInterval","onClick","event","subject","dragNodes","dragSubject","find","dragStarted","active","alphaTarget","fx","fy","dragged","dragEnded","drag","setInterval","select","call"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;;AAIA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsCC,KAAtC,EAA6CC,WAA7C,EAA0DC,YAA1D,EAAwEC,aAAxE,EAAuF;AACnF,MAAIC,iBAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwBD,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAAhE,CAAX;AACA,MAAIC,MAAM,GAAGH,QAAQ,CAACI,aAAT,CAAuB,QAAvB,CAAb;AACA,MAAIC,CAAC,GAAGL,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCK,WAA9C;AACA,MAAIC,CAAC,GAAGP,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCO,YAAtC,GAAqD,GAA7D;AACA,MAAIC,YAAY,GAAG,IAAnB;AACA,MAAIC,gBAAgB,GAAG,CAAvB;AAEA,MAAIC,eAAe,GAAG,EAAtB;;AAVmF,6CAW7DnB,KAX6D;AAAA;;AAAA;AAWnF,wDAA6B;AAAA,UAAlBoB,OAAkB;AACzB,UAAIC,KAAK,GAAG,IAAZ;;AACA,UAAIF,eAAe,CAACG,MAAhB,GAAyB,CAA7B,EAAgC;AAAA,oDACTH,eADS;AAAA;;AAAA;AAC5B,iEAAoC;AAAA,gBAAzBI,MAAyB;;AAChC,gBAAIA,MAAI,CAACC,MAAL,IAAeJ,OAAO,CAACK,MAAvB,IAAiCF,MAAI,CAACE,MAAL,IAAeL,OAAO,CAACI,MAA5D,EAAoE;AAChED,cAAAA,MAAI,CAACG,MAAL,GAAeH,MAAI,CAACG,MAAL,GAAcN,OAAO,CAACM,MAArC;AACAH,cAAAA,MAAI,CAACI,SAAL,GAAiB,CAACJ,MAAI,CAACI,SAAL,GAAiBP,OAAO,CAACO,SAA1B,IAAuC,CAAxD;AACAN,cAAAA,KAAK,GAAG,KAAR;AACH;AACJ;AAP2B;AAAA;AAAA;AAAA;AAAA;AAQ/B;;AACD,UAAIA,KAAJ,EAAW;AACPF,QAAAA,eAAe,CAACS,IAAhB,CAAqBR,OAArB;AACH;AACJ;AAzBkF;AAAA;AAAA;AAAA;AAAA;;AA0BnF,sCAAmBD,eAAnB,sCAAoC;AAA/B,QAAMI,IAAI,uBAAV;AACD,QAAII,SAAS,GAAGJ,IAAI,CAACI,SAAL,IAAkB,IAAI,KAAtB,CAAhB;AACA,QAAIE,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS,CAAC,CAAV,EAAaL,SAAb,CAAT,EAAiC,CAAjC,IAAoC,KAApC,GAA0C,GAA1C,GAAgD,EAA1D;AACA,QAAIM,UAAU,GAAGH,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,GAAL,CAAS,GAAT,EAAcF,IAAI,CAACI,GAAL,CAASP,SAAS,GAAC,GAAnB,CAAd,CAAZ,CAAjB;AACA,QAAIQ,SAAS,GAAGL,IAAI,CAACE,GAAL,CAAS,GAAT,EAAcF,IAAI,CAACC,GAAL,CAAS,GAAT,EAAc,IAAID,IAAI,CAACI,GAAL,CAASP,SAAS,GAAC,GAAnB,CAAlB,CAAd,CAAhB,CAJgC,CAKhC;;AACA,QAAIS,CAAC,GAAG,CAAC,IAAIN,IAAI,CAACI,GAAL,CAAS,IAAEC,SAAF,GAAc,CAAvB,CAAL,IAAkCF,UAA1C;AACA,QAAII,CAAC,GAAGD,CAAC,IAAI,IAAIN,IAAI,CAACI,GAAL,CAAUL,GAAG,GAAG,EAAP,GAAa,CAAb,GAAiB,CAA1B,CAAR,CAAT;AACA,QAAIS,CAAC,GAAGH,SAAS,GAAGC,CAAC,GAAC,CAAtB;AACA,QAAIG,CAAJ,EAAMC,CAAN,EAAQC,CAAR;;AACA,QAAIZ,GAAG,GAAG,EAAV,EAAc;AACVU,MAAAA,CAAC,GAAG,CAACH,CAAC,GAAGE,CAAL,IAAU,GAAd;AACAE,MAAAA,CAAC,GAAG,CAACH,CAAC,GAAGC,CAAL,IAAU,GAAd;AACAG,MAAAA,CAAC,GAAGH,CAAC,GAAG,GAAR;AACH,KAJD,MAIO,IAAIT,GAAG,GAAG,GAAV,EAAe;AAClBU,MAAAA,CAAC,GAAG,CAACF,CAAC,GAAGC,CAAL,IAAU,GAAd;AACAE,MAAAA,CAAC,GAAG,CAACJ,CAAC,GAAGE,CAAL,IAAU,GAAd;AACAG,MAAAA,CAAC,GAAGH,CAAC,GAAG,GAAR;AACH;;AACDf,IAAAA,IAAI,CAAC,OAAD,CAAJ,GAAgB,MAAM,CAAC,CAAC,KAAK,EAAN,KAAaO,IAAI,CAACY,KAAL,CAAWH,CAAX,KAAiB,EAA9B,KAAqCT,IAAI,CAACY,KAAL,CAAWF,CAAX,KAAiB,CAAtD,IAA2DV,IAAI,CAACY,KAAL,CAAWD,CAAX,CAA5D,EAA2EE,QAA3E,CAAoF,EAApF,EAAwFC,KAAxF,CAA8F,CAA9F,CAAtB,CAnBgC,CAoBhC;AACH;;AAED,MAAMC,QAAQ,GAAG,IAAjB,CAjDmF,CAiDC;;AACpF,MAAMC,QAAQ,GAAG,CAAjB,CAlDmF,CAkDA;;AACnF,MAAMC,cAAc,GAAG,CAACD,QAAQ,GAAGD,QAAZ,IAAwBf,IAAI,CAACkB,KAAL,CAAW9C,WAAW,CAAC+C,SAAvB,CAA/C;AACA,MAAMC,eAAe,GAAG,CAAC,KAAKL,QAAN,IAAkBf,IAAI,CAACqB,IAAL,CAAUjD,WAAW,CAAC+C,SAAtB,CAA1C,CApDmF,CAoDP;;AAE5E,MAAI7C,aAAa,CAAC,CAAD,CAAb,IAAoB,IAAxB,EAA8B;AAC1BE,IAAAA,QAAQ,GAAGF,aAAa,CAAC,CAAD,CAAxB;AACH,GAFD,MAEO;AACHE,IAAAA,QAAQ,GAAG,CAAX;AACH;;AAEDK,EAAAA,MAAM,CAACyC,EAAP,GAAY,UAAZ;AACAzC,EAAAA,MAAM,CAAC0C,KAAP,GAAexC,CAAf;AACAF,EAAAA,MAAM,CAAC2C,MAAP,GAAgBvC,CAAhB,CA9DmF,CA+DnF;;AACA,MAAIwC,aAAa,GAAGzB,IAAI,CAACC,GAAL,CAASlB,CAAC,GAAG,CAAb,EAAgBE,CAAC,GAAG,CAApB,CAApB;AACA,MAAIyC,oBAAoB,GAAG1B,IAAI,CAAC2B,GAAL,CAASF,aAAT,EAAwB,CAAxB,CAA3B;AAEAhD,EAAAA,IAAI,CAACmD,WAAL,CAAiB/C,MAAjB;AAEA,MAAIgD,GAAG,GAAGhD,MAAM,CAACiD,UAAP,CAAkB,IAAlB,CAAV;AACAD,EAAAA,GAAG,CAACE,WAAJ,GAAkB,KAAlB;AACAF,EAAAA,GAAG,CAACG,SAAJ,GAAgB,GAAhB;AAEA,MAAIC,SAAS,GAAGjE,EAAE,CAACkE,YAAnB;AAEA,MAAIC,UAAU,GAAGnE,EAAE,CAAC;AAAD,GACdoE,eADY,CACIjE,KADJ,EAEZkE,KAFY,CAGT,QAHS,EAITrE,EAAE,CAACsE,aAAH,GACKC,QADL,CACc,CAAC,EADf,EAEKC,WAFL,CAEiB,GAFjB,CAJS,EAOZH,KAPY,CAQT,MARS,EASTrE,EAAE,CACGyE,SADL,GAEKnB,EAFL,CAEQ,UAAUoB,CAAV,EAAa;AACb,WAAOA,CAAC,CAACC,UAAT;AACH,GAJL,EAKKC,KALL,CAKWvD,eALX,EAMKkD,QANL,CAMc,UAAU9C,IAAV,EAAgB;AACtB;AACA,WAAO,CAAEO,IAAI,CAACqB,IAAL,CAAU5B,IAAI,CAACG,MAAf,IAAyBwB,eAA1B,GAA6CL,QAA9C,IAA0D3C,WAAW,CAAC+C,SAA7E;AACH,GATL,CATS,EAoBZkB,KApBY,CAoBN,QApBM,EAoBIrE,EAAE,CAAC6E,WAAH,CAAe9D,CAAC,GAAG,CAAnB,EAAsBE,CAAC,GAAG,CAA1B,CApBJ,EAqBZ6D,EArBY,CAqBT,MArBS,EAqBDC,MArBC,CAAjB;;AAuBA,WAASA,MAAT,GAAkB;AACdlB,IAAAA,GAAG,CAACmB,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBnE,MAAM,CAAC0C,KAA3B,EAAkC1C,MAAM,CAAC2C,MAAzC;AACAK,IAAAA,GAAG,CAACoB,SAAJ,CAAchB,SAAS,CAAC1B,CAAxB,EAA2B0B,SAAS,CAACiB,CAArC;AACArB,IAAAA,GAAG,CAACsB,KAAJ,CAAUlB,SAAS,CAACmB,CAApB,EAAuBnB,SAAS,CAACmB,CAAjC;AAEA,QAAIC,UAAU,GAAGC,YAAY,CAACjE,eAAD,CAA7B,CALc,CAMd;;AANc,gDAOKlB,KAPL;AAAA;;AAAA;AAOd,6DAA0B;AAAA,YAAfoF,IAAe;AACtBC,QAAAA,aAAa,CAACD,IAAD,CAAb,CADsB,CAEtB;;AACA,YAAIlF,YAAY,CAACoF,QAAb,CAAsBF,IAAI,CAACZ,UAA3B,CAAJ,EAA4C;AACxCd,UAAAA,GAAG,CAACE,WAAJ,GAAkB,MAAlB;AACAF,UAAAA,GAAG,CAAC6B,SAAJ,GAAgB,SAAhB;AACH,SAHD,MAGO,IAAIL,UAAU,CAACI,QAAX,CAAoBF,IAApB,KAA6BlF,YAAY,CAACmB,MAAb,IAAuB,CAAxD,EAA2D;AAC9DqC,UAAAA,GAAG,CAACE,WAAJ,GAAkB,MAAlB;AACAF,UAAAA,GAAG,CAAC6B,SAAJ,GAAgB,SAAhB;AACH,SAHM,MAGA;AACH7B,UAAAA,GAAG,CAACE,WAAJ,GAAkB,MAAlB;AACAF,UAAAA,GAAG,CAAC6B,SAAJ,GAAgB,MAAhB;AACH;;AACD,YAAIrF,YAAY,CAACoF,QAAb,CAAsBF,IAAI,CAACZ,UAA3B,KAA0CtE,YAAY,CAACmB,MAAb,IAAuB,CAArE,EAAwE;AACpEmE,UAAAA,QAAQ,CAACJ,IAAD,CAAR;AACH,SAfqB,CAgBtB;;AACH;AAxBa;AAAA;AAAA;AAAA;AAAA;;AAyBdK,IAAAA,wBAAwB,CAACP,UAAD,CAAxB,CAzBc,CA0Bd;AACH;;AAGD,WAASG,aAAT,CAAuBD,IAAvB,EAA6B;AACzB,QAAIM,yBAAyB,GAAG7D,IAAI,CAAC2B,GAAL,CAAS4B,IAAI,CAAChD,CAAL,GAASxB,CAAC,GAAG,CAAtB,EAAyB,CAAzB,IAA8BiB,IAAI,CAAC2B,GAAL,CAAS4B,IAAI,CAACL,CAAL,GAASjE,CAAC,GAAG,CAAtB,EAAyB,CAAzB,CAA9D;;AACA,QAAI4E,yBAAyB,GAAGnC,oBAAhC,EAAsD;AAClD,UAAIoC,kBAAkB,GAAG9D,IAAI,CAAC+D,IAAL,CAAUF,yBAAV,CAAzB;AACAN,MAAAA,IAAI,CAAChD,CAAL,GAAU,CAACgD,IAAI,CAAChD,CAAL,GAASxB,CAAC,GAAG,CAAd,IAAmB+E,kBAApB,GAA0CrC,aAA1C,GAA0D1C,CAAC,GAAG,CAAvE;AACAwE,MAAAA,IAAI,CAACL,CAAL,GAAU,CAACK,IAAI,CAACL,CAAL,GAASjE,CAAC,GAAG,CAAd,IAAmB6E,kBAApB,GAA0CrC,aAA1C,GAA0DxC,CAAC,GAAG,CAAvE;AACH,KANwB,CAOzB;AACA;;AACH;;AAED,WAASqE,YAAT,CAAsBpF,KAAtB,EAA6B;AACzB,QAAI8F,cAAc,GAAG,EAArB;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIZ,UAAU,GAAG,EAAjB;;AAEA,QAAIhF,YAAY,CAAC,CAAD,CAAZ,IAAmB,IAAvB,EAA6B;AAAE;AAC3B6F,MAAAA,YAAY,CAAChG,KAAD,EAAQ,MAAR,CAAZ;AACH,KAFD,MAEO,IAAIG,YAAY,CAAC,CAAD,CAAZ,IAAmB,IAAvB,EAA6B;AAAE;AAAF,kDACbH,KADa;AAAA;;AAAA;AAChC,+DAA0B;AAAA,cAAfuB,KAAe;;AACtB,cAAIA,KAAI,CAACC,MAAL,CAAYiD,UAAZ,IAA0BtE,YAAY,CAAC,CAAD,CAA1C,EAA+C;AAC3C2F,YAAAA,cAAc,CAAClE,IAAf,CAAoBL,KAApB;AACA4D,YAAAA,UAAU,CAACvD,IAAX,CAAgBL,KAAI,CAACE,MAArB;AACH,WAHD,MAGO,IAAIF,KAAI,CAACE,MAAL,CAAYgD,UAAZ,IAA0BtE,YAAY,CAAC,CAAD,CAA1C,EAA+C;AAClD2F,YAAAA,cAAc,CAAClE,IAAf,CAAoBL,KAApB;AACA4D,YAAAA,UAAU,CAACvD,IAAX,CAAgBL,KAAI,CAACC,MAArB;AACH,WAHM,MAGA;AACHuE,YAAAA,WAAW,CAACnE,IAAZ,CAAiBL,KAAjB;AACH;AACJ;AAX+B;AAAA;AAAA;AAAA;AAAA;;AAYhCyE,MAAAA,YAAY,CAACD,WAAD,EAAc,MAAd,CAAZ;AAEAC,MAAAA,YAAY,CAACF,cAAD,EAAiB,SAAjB,CAAZ;AACH,KAfM,MAeA;AAAE;AAAF,kDACgB9F,KADhB;AAAA;;AAAA;AACH,+DAA0B;AAAA,cAAfuB,MAAe;AACtB,cAAI0E,aAAa,GAAG9F,YAAY,CAACoF,QAAb,CAAsBhE,MAAI,CAACC,MAAL,CAAYiD,UAAlC,CAApB;AACA,cAAIyB,WAAW,GAAG/F,YAAY,CAACoF,QAAb,CAAsBhE,MAAI,CAACE,MAAL,CAAYgD,UAAlC,CAAlB;;AACA,cAAIwB,aAAa,IAAIC,WAArB,EAAkC;AAC9BJ,YAAAA,cAAc,CAAClE,IAAf,CAAoBL,MAApB;AACH,WAFD,MAEO,IAAI0E,aAAJ,EAAmB;AACtBd,YAAAA,UAAU,CAACvD,IAAX,CAAgBL,MAAI,CAACE,MAArB;AACAsE,YAAAA,WAAW,CAACnE,IAAZ,CAAiBL,MAAjB;AACH,WAHM,MAGA,IAAI2E,WAAJ,EAAiB;AACpBf,YAAAA,UAAU,CAACvD,IAAX,CAAgBL,MAAI,CAACC,MAArB;AACAuE,YAAAA,WAAW,CAACnE,IAAZ,CAAiBL,MAAjB;AACH,WAHM,MAGA;AACHwE,YAAAA,WAAW,CAACnE,IAAZ,CAAiBL,MAAjB;AACH;AACJ,SAfE,CAgBH;;AAhBG;AAAA;AAAA;AAAA;AAAA;;AAkBHyE,MAAAA,YAAY,CAACF,cAAD,EAAiB,WAAjB,CAAZ;AACH;;AAED,WAAOX,UAAP;AACH;;AAED,WAASa,YAAT,CAAsBhG,KAAtB,EAA6BmG,WAA7B,EAA0C;AACtC,QAAIA,WAAW,CAAC,CAAD,CAAX,IAAkB,GAAtB,EAA2B;AACvBxC,MAAAA,GAAG,CAACE,WAAJ,GAAkBsC,WAAlB;AACAnG,MAAAA,KAAK,CAACoG,OAAN,CAAcC,QAAd;AACH,KAHD,MAGO;AACHrG,MAAAA,KAAK,CAACoG,OAAN,CAAc,UAAA7E,IAAI,EAAI;AAClBoC,QAAAA,GAAG,CAACE,WAAJ,GAAkBtC,IAAI,CAAC+E,KAAvB;AACAD,QAAAA,QAAQ,CAAC9E,IAAD,CAAR;AACH,OAHD;AAIH;AACJ;;AAED,WAAS8E,QAAT,CAAkB7B,CAAlB,EAAqB;AACjBb,IAAAA,GAAG,CAAC4C,SAAJ;AACA5C,IAAAA,GAAG,CAAC6C,MAAJ,CAAWhC,CAAC,CAAChD,MAAF,CAASa,CAApB,EAAuBmC,CAAC,CAAChD,MAAF,CAASwD,CAAhC;AACArB,IAAAA,GAAG,CAAC8C,MAAJ,CAAWjC,CAAC,CAAC/C,MAAF,CAASY,CAApB,EAAuBmC,CAAC,CAAC/C,MAAF,CAASuD,CAAhC;AACArB,IAAAA,GAAG,CAACG,SAAJ,GAAehC,IAAI,CAACkB,KAAL,CAAWwB,CAAC,CAAC9C,MAAb,IAAuBqB,cAAxB,GAA0CF,QAAxD,CAJiB,CAKjB;;AACAc,IAAAA,GAAG,CAAC+C,MAAJ,GANiB,CAOjB;AACA;AACH;;AAED,WAASjB,QAAT,CAAkBjB,CAAlB,EAAqB;AACjBb,IAAAA,GAAG,CAAC4C,SAAJ;AACA5C,IAAAA,GAAG,CAACG,SAAJ,GAAgB,IAAhB;AACAH,IAAAA,GAAG,CAAC6C,MAAJ,CAAWhC,CAAC,CAACnC,CAAb,EAAgBmC,CAAC,CAACQ,CAAlB;AACArB,IAAAA,GAAG,CAACgD,GAAJ,CAAQnC,CAAC,CAACnC,CAAV,EAAamC,CAAC,CAACQ,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,IAAIlD,IAAI,CAAC8E,EAAjC;AACAjD,IAAAA,GAAG,CAAC6B,SAAJ,GAAgBc,KAAK,CAAC9B,CAAD,CAArB;AACAb,IAAAA,GAAG,CAACkD,IAAJ;AACAlD,IAAAA,GAAG,CAAC+C,MAAJ,GAPiB,CAQjB;AACH;;AAED,WAAShB,wBAAT,CAAkCP,UAAlC,EAA8C;AAAA,gDACvBlF,KADuB;AAAA;;AAAA;AAC1C,6DAA0B;AAAA,YAAfoF,IAAe;;AACtB,YAAIlF,YAAY,CAACoF,QAAb,CAAsBF,IAAI,CAACZ,UAA3B,CAAJ,EAA4C;AACxC,cAAItE,YAAY,CAACmB,MAAb,IAAuB,CAA3B,EAA8B;AAC1BwF,YAAAA,mBAAmB,CAACzB,IAAD,EAAO,MAAP,CAAnB;AACH,WAFD,MAEO,IAAIlF,YAAY,CAACmB,MAAb,GAAsB,CAA1B,EAA6B;AAChCwF,YAAAA,mBAAmB,CAACzB,IAAD,EAAO,OAAP,CAAnB;AACH;AACJ,SAND,MAMO,IAAIF,UAAU,CAACI,QAAX,CAAoBF,IAApB,CAAJ,EAA+B;AAClC,cAAIlF,YAAY,CAACmB,MAAb,IAAuB,CAA3B,EAA8B;AAC1BwF,YAAAA,mBAAmB,CAACzB,IAAD,EAAO,OAAP,CAAnB;AACH;AACJ;AACJ;AAbyC;AAAA;AAAA;AAAA;AAAA;AAc7C;;AACD,WAASyB,mBAAT,CAA6BtC,CAA7B,EAAgCuC,IAAhC,EAAsC;AAClC,QAAIvC,CAAC,IAAI,IAAT,EAAe;AACX,UAAIwC,MAAJ,EAAYC,MAAZ;AACA,UAAIC,SAAJ,EAAeC,WAAf;;AACA,UAAIJ,IAAI,IAAI,MAAZ,EAAoB;AAChBC,QAAAA,MAAM,GAAGxC,CAAC,CAACnC,CAAF,GAAM,CAAf;AACA4E,QAAAA,MAAM,GAAGzC,CAAC,CAACQ,CAAF,GAAM,CAAf;AACAkC,QAAAA,SAAS,GAAGvD,GAAG,CAACyD,WAAJ,CAAgB5C,CAAC,CAAC6C,KAAlB,EAAyBhE,KAAzB,GAAiC,CAA7C;AACA8D,QAAAA,WAAW,GAAG,EAAd;AACH,OALD,MAKO,IAAIJ,IAAI,IAAI,OAAZ,EAAqB;AACxBC,QAAAA,MAAM,GAAGxC,CAAC,CAACnC,CAAF,GAAM,CAAf;AACA4E,QAAAA,MAAM,GAAGzC,CAAC,CAACQ,CAAF,GAAM,CAAf;AACAkC,QAAAA,SAAS,GAAGvD,GAAG,CAACyD,WAAJ,CAAgBtF,IAAI,CAACE,GAAL,CAASwC,CAAC,CAAC8C,QAAX,EAAqB9C,CAAC,CAAC+C,IAAvB,CAAhB,CAAZ;AACAJ,QAAAA,WAAW,GAAG,EAAd;AACH,OALM,MAKA;AACHK,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH;;AACD9D,MAAAA,GAAG,CAAC6B,SAAJ,GAAgB,MAAhB;AACA7B,MAAAA,GAAG,CAAC+D,QAAJ,CAAaV,MAAb,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,WAAxC;AACAxD,MAAAA,GAAG,CAACE,WAAJ,GAAkB,MAAlB;AACAF,MAAAA,GAAG,CAACgE,UAAJ,CAAeX,MAAf,EAAuBC,MAAvB,EAA+BC,SAA/B,EAA0CC,WAA1C;;AAEA,UAAIJ,IAAI,IAAI,MAAZ,EAAoB;AAChBpD,QAAAA,GAAG,CAAC6B,SAAJ,GAAgB,MAAhB;AACA7B,QAAAA,GAAG,CAACiE,QAAJ,CAAapD,CAAC,CAAC+C,IAAF,GAAS,KAAT,GAAiB/C,CAAC,CAACC,UAAhC,EAA4CuC,MAAM,GAAG,CAArD,EAAwDC,MAAM,GAAG,EAAjE;AACAtD,QAAAA,GAAG,CAACiE,QAAJ,CAAapD,CAAC,CAAC8C,QAAf,EAAyBN,MAAM,GAAG,CAAlC,EAAqCC,MAAM,GAAG,EAA9C;AACAtD,QAAAA,GAAG,CAACiE,QAAJ,CAAapD,CAAC,CAAC6C,KAAf,EAAsBL,MAAM,GAAG,CAA/B,EAAkCC,MAAM,GAAG,EAA3C;AACH,OALD,MAKO,IAAIF,IAAI,IAAI,OAAZ,EAAqB;AACxBpD,QAAAA,GAAG,CAAC6B,SAAJ,GAAgB,MAAhB;AACA7B,QAAAA,GAAG,CAACiE,QAAJ,CAAapD,CAAC,CAAC+C,IAAf,EAAqBP,MAAM,GAAG,CAA9B,EAAiCC,MAAM,GAAG,EAA1C;AACAtD,QAAAA,GAAG,CAACiE,QAAJ,CAAapD,CAAC,CAAC8C,QAAf,EAAyBN,MAAM,GAAG,CAAlC,EAAqCC,MAAM,GAAG,EAA9C;AACH;AAEJ;AACJ;;AAED,WAASX,KAAT,GAAiB;AACb,QAAIrB,KAAK,GAAGnF,EAAE,CAAC+H,YAAH,CAAgB/H,EAAE,CAACgI,gBAAnB,CAAZ;AACA,WAAO,UAAAtD,CAAC;AAAA,aAAIS,KAAK,CAACT,CAAC,CAACuD,KAAH,CAAT;AAAA,KAAR;AACH,GAjRkF,CAmRnF;;;AACA,WAASC,SAAT,GAAqB;AAChB,QAAI/D,UAAU,CAACgE,KAAX,KAAqB,IAArB,KAA8BhH,YAAY,IAAId,YAAY,CAAC,CAAD,CAA5B,IAAmCe,gBAAgB,IAAIf,YAAY,CAACmB,MAAlG,CAAJ,EAA+G;AAC3GkG,MAAAA,OAAO,CAACC,GAAR,CAAY9G,MAAZ;AACAsD,MAAAA,UAAU,CAACgE,KAAX,CAAiB,IAAjB,EAAuBC,OAAvB;AACAjH,MAAAA,YAAY,GAAGd,YAAY,CAAC,CAAD,CAA3B;AACAe,MAAAA,gBAAgB,GAAGf,YAAY,CAACmB,MAAhC;AACH;;AACD,QAAIlB,aAAa,CAAC,CAAD,CAAb,IAAoBE,QAAxB,EAAkC;AAC/B2D,MAAAA,UAAU,GAAG,IAAb;AACAkE,MAAAA,aAAa,CAAC9H,iBAAD,CAAb;AACF;AACL,GA/RkF,CAiSnF;AACI;AACA;AACJ;;;AAEA,WAAS+H,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,QAAIlI,YAAY,CAACmB,MAAb,IAAuB,CAA3B,EAA8B;AAC1BnB,MAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBkI,KAAK,CAACC,OAAN,CAAc7D,UAAhC;AACH;AACJ;;AAED,WAAS8D,SAAT,CAAmBtE,UAAnB,EAA+B;AAC3B,aAASuE,WAAT,CAAqBH,KAArB,EAA4B;AACxB,aAAOpE,UAAU,CAACwE,IAAX,CAAgBJ,KAAK,CAAChG,CAAtB,EAAyBgG,KAAK,CAACrD,CAA/B,CAAP;AACH,KAH0B,CAK3B;;;AACA,aAAS0D,WAAT,CAAqBL,KAArB,EAA4B;AACxBD,MAAAA,OAAO,CAACC,KAAD,CAAP;AAEA,UAAI,CAACA,KAAK,CAACM,MAAX,EAAmB1E,UAAU,CAAC2E,WAAX,CAAuB,GAAvB,EAA4BV,OAA5B;AACnBG,MAAAA,KAAK,CAACC,OAAN,CAAcO,EAAd,GAAmBR,KAAK,CAACC,OAAN,CAAcjG,CAAjC;AACAgG,MAAAA,KAAK,CAACC,OAAN,CAAcQ,EAAd,GAAmBT,KAAK,CAACC,OAAN,CAActD,CAAjC;AACH;;AAED,aAAS+D,OAAT,CAAiBV,KAAjB,EAAwB;AACpBA,MAAAA,KAAK,CAACC,OAAN,CAAcO,EAAd,GAAmBR,KAAK,CAAChG,CAAzB;AACAgG,MAAAA,KAAK,CAACC,OAAN,CAAcQ,EAAd,GAAmBT,KAAK,CAACrD,CAAzB;AACH;;AAED,aAASgE,SAAT,CAAmBX,KAAnB,EAA0B;AACtB,UAAI,CAACA,KAAK,CAACM,MAAX,EAAmB1E,UAAU,CAAC2E,WAAX,CAAuB,CAAvB;AACnBP,MAAAA,KAAK,CAACC,OAAN,CAAcO,EAAd,GAAmB,IAAnB;AACAR,MAAAA,KAAK,CAACC,OAAN,CAAcQ,EAAd,GAAmB,IAAnB;AACH;;AAED,WAAOhJ,EAAE,CAACmJ,IAAH,GACFX,OADE,CACME,WADN,EAEF5D,EAFE,CAEC,OAFD,EAEU8D,WAFV,EAGF9D,EAHE,CAGC,MAHD,EAGSmE,OAHT,EAIFnE,EAJE,CAIC,KAJD,EAIQoE,SAJR,CAAP;AAKH,GA1UkF,CA4UnF;;;AAEA3I,EAAAA,iBAAiB,GAAG6I,WAAW,CAAC,YAAY;AAAElB,IAAAA,SAAS;AAAK,GAA7B,EAA+B,EAA/B,CAA/B,CA9UmF,CA8UhB;;AACnE,SAAOlI,EAAE,CAACqJ,MAAH,CAAUxF,GAAG,CAAChD,MAAd,EAAsByI,IAAtB,CAA2Bb,SAAS,CAACtE,UAAD,CAApC,EAAkDoB,IAAlD,EAAP;AACH;;AAGD,eAAetF,qBAAf","sourcesContent":["import * as d3 from \"d3\";\r\n\r\n\r\n\r\nfunction generateNetworkCanvas(edges, nodes, edgeWeights, selectedNode, updateCounter) {\r\n    var heartBeatInterval;\r\n    var updateID;\r\n    var side = document.getElementById(document.getElementById(\"testSelectNL\").value);\r\n    var canvas = document.createElement('canvas');\r\n    var w = document.getElementById(\"viscontent\").clientWidth;\r\n    var h = document.getElementById(\"viscontent\").clientHeight - 130;\r\n    var oldSelection = null;\r\n    var oldSelectionSize = 0;\r\n\r\n    var simplifiedEdges = [];\r\n    for (const oldEdge of edges) {\r\n        var isNew = true;\r\n        if (simplifiedEdges.length > 0) {\r\n            for (const edge of simplifiedEdges) {\r\n                if (edge.source == oldEdge.target && edge.target == oldEdge.source) {\r\n                    edge.weight = (edge.weight + oldEdge.weight);\r\n                    edge.sentiment = (edge.sentiment + oldEdge.sentiment) / 2;\r\n                    isNew = false;\r\n                }\r\n            }\r\n        }\r\n        if (isNew) {\r\n            simplifiedEdges.push(oldEdge);\r\n        }\r\n    }\r\n    for (const edge of simplifiedEdges) {\r\n        var sentiment = edge.sentiment * (1 / 0.025);\r\n        var hue = Math.min(Math.max(-1, sentiment),1)*0.599*100 + 60;\r\n        var saturation = Math.min(1, Math.max(0.2, Math.abs(sentiment*1.5)));\r\n        var lightness = Math.max(0.5, Math.min(0.8, 1 - Math.abs(sentiment*1.2)));\r\n        //console.log(sentiment + \": \" + hue + \", \" + saturation + \", \" + lightness);\r\n        var c = (1 - Math.abs(2*lightness - 1)) * saturation;\r\n        var x = c * (1 - Math.abs((hue / 60) % 2 - 1))\r\n        var m = lightness - c/2;\r\n        var r,g,b;\r\n        if (hue < 60) {\r\n            r = (c + m) * 255;\r\n            g = (x + m) * 255;\r\n            b = m * 255;\r\n        } else if (hue < 120) {\r\n            r = (x + m) * 255;\r\n            g = (c + m) * 255;\r\n            b = m * 255;\r\n        }\r\n        edge[\"color\"] = \"#\" + ((1 << 24) + (Math.floor(r) << 16) + (Math.floor(g) << 8) + Math.floor(b)).toString(16).slice(1);\r\n        //console.log(edge[\"color\"]);\r\n    }\r\n\r\n    const minWidth = 0.01;                                                              // width of an edge with weight 1\r\n    const maxWidth = 1;                                                                // width of largest edge\r\n    const logCoefficient = (maxWidth - minWidth) / Math.log10(edgeWeights.maxWeight); \r\n    const logCoefficient2 = (10 - minWidth) / Math.log2(edgeWeights.maxWeight); // coeficient that is used to calculate opacity\r\n\r\n    if (updateCounter[0] != null) {\r\n        updateID = updateCounter[0];\r\n    } else {\r\n        updateID = 0;\r\n    }\r\n\r\n    canvas.id = \"NLCanvas\";\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n    // Creates a circle bound with diameter of the smallest of either the width or height of the window.\r\n    var boundDistance = Math.min(w / 2, h / 2);\r\n    var boundDistanceSquared = Math.pow(boundDistance, 2);\r\n\r\n    side.appendChild(canvas);\r\n\r\n    var ctx = canvas.getContext(\"2d\");\r\n    ctx.strokeStyle = \"red\"\r\n    ctx.lineWidth = 0.1;\r\n\r\n    var transform = d3.zoomIdentity;\r\n\r\n    var simulation = d3 //done\r\n        .forceSimulation(nodes)\r\n        .force(\r\n            \"charge\",\r\n            d3.forceManyBody()\r\n                .strength(-50)\r\n                .distanceMax(100))\r\n        .force(\r\n            \"link\",\r\n            d3\r\n                .forceLink()\r\n                .id(function (d) {\r\n                    return d.employeeID;\r\n                })\r\n                .links(simplifiedEdges)\r\n                .strength(function (edge) {\r\n                    //console.log(edge)\r\n                    return ((Math.log2(edge.weight) * logCoefficient2) + minWidth) / edgeWeights.maxWeight;\r\n                })\r\n        )\r\n        .force(\"center\", d3.forceCenter(w / 2, h / 2))\r\n        .on(\"tick\", ticked);\r\n\r\n    function ticked() {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.translate(transform.x, transform.y);\r\n        ctx.scale(transform.k, transform.k);\r\n\r\n        var neighbours = prepareEdges(simplifiedEdges);\r\n        //console.log(neighbours);\r\n        for (const node of nodes) {\r\n            constrainNode(node);\r\n            // Change selected node to stand out\r\n            if (selectedNode.includes(node.employeeID)) {\r\n                ctx.strokeStyle = \"#000\";\r\n                ctx.fillStyle = \"#ff0000\";\r\n            } else if (neighbours.includes(node) && selectedNode.length <= 1) {\r\n                ctx.strokeStyle = \"#000\";\r\n                ctx.fillStyle = \"#00ff00\";\r\n            } else {\r\n                ctx.strokeStyle = \"#fff\";\r\n                ctx.fillStyle = \"#000\";\r\n            }\r\n            if (selectedNode.includes(node.employeeID) || selectedNode.length <= 1) {\r\n                drawNode(node);\r\n            }\r\n            //drawNode(node)\r\n        }\r\n        drawSelectionInformation(neighbours);\r\n        //selectedNode.forEach(drawSelectionInformation)\r\n    }\r\n\r\n\r\n    function constrainNode(node) {\r\n        var distanceFromCenterSquared = Math.pow(node.x - w / 2, 2) + Math.pow(node.y - h / 2, 2);\r\n        if (distanceFromCenterSquared > boundDistanceSquared) {\r\n            var distanceFromCenter = Math.sqrt(distanceFromCenterSquared);\r\n            node.x = ((node.x - w / 2) / distanceFromCenter) * boundDistance + w / 2;\r\n            node.y = ((node.y - h / 2) / distanceFromCenter) * boundDistance + h / 2;\r\n        }\r\n        //node.x = Math.min(w-6, Math.max(2, node.x));\r\n        //node.y = Math.min(h-130, Math.max(2, node.y));\r\n    }\r\n\r\n    function prepareEdges(edges) {\r\n        var selectionEdges = [];\r\n        var normalEdges = [];\r\n        var neighbours = [];\r\n\r\n        if (selectedNode[0] == null) { // No selection, draw all edges normally\r\n            drawAllEdges(edges, '#aaa');\r\n        } else if (selectedNode[1] == null) { // 1 selection, draw connected edges and mark neighbouring nodes.\r\n            for (const edge of edges) {\r\n                if (edge.source.employeeID == selectedNode[0]) {\r\n                    selectionEdges.push(edge);\r\n                    neighbours.push(edge.target);\r\n                } else if (edge.target.employeeID == selectedNode[0]) {\r\n                    selectionEdges.push(edge);\r\n                    neighbours.push(edge.source);\r\n                } else {\r\n                    normalEdges.push(edge);\r\n                }\r\n            }\r\n            drawAllEdges(normalEdges, '#aaa');\r\n\r\n            drawAllEdges(selectionEdges, '#f58a2c');\r\n        } else { // 2 or more selections, mark edges between selected nodes.\r\n            for (const edge of edges) {\r\n                var fromSelection = selectedNode.includes(edge.source.employeeID);\r\n                var toSelection = selectedNode.includes(edge.target.employeeID);\r\n                if (fromSelection && toSelection) {\r\n                    selectionEdges.push(edge);\r\n                } else if (fromSelection) {\r\n                    neighbours.push(edge.target);\r\n                    normalEdges.push(edge);\r\n                } else if (toSelection) {\r\n                    neighbours.push(edge.source);\r\n                    normalEdges.push(edge);\r\n                } else {\r\n                    normalEdges.push(edge);\r\n                }\r\n            }\r\n            //drawAllEdges(normalEdges, '#aaa');\r\n\r\n            drawAllEdges(selectionEdges, \"Sentiment\");\r\n        }\r\n\r\n        return neighbours;\r\n    }\r\n\r\n    function drawAllEdges(edges, strokeColor) {\r\n        if (strokeColor[0] == \"#\") {\r\n            ctx.strokeStyle = strokeColor;\r\n            edges.forEach(drawEdge);\r\n        } else {\r\n            edges.forEach(edge => {\r\n                ctx.strokeStyle = edge.color;\r\n                drawEdge(edge)\r\n            });\r\n        }\r\n    }\r\n\r\n    function drawEdge(d) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(d.source.x, d.source.y);\r\n        ctx.lineTo(d.target.x, d.target.y);\r\n        ctx.lineWidth=(Math.log10(d.weight) * logCoefficient) + minWidth;\r\n        // ctx.lineWidth = d.weight / edgeWeights.maxWeight;\r\n        ctx.stroke();\r\n        //ctx.fillText(d.sentiment, ((d.source.x + d.target.x) / 2) + 10 , ((d.source.y + d.target.y) / 2) + 3);\r\n        //console.log(d.sentiment)\r\n    }\r\n\r\n    function drawNode(d) {\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 0.25;\r\n        ctx.moveTo(d.x, d.y);\r\n        ctx.arc(d.x, d.y, 3, 0, 2 * Math.PI);\r\n        ctx.fillStyle = color(d);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        //ctx.fillText(\"ID: \" + d.employeeID, d.x+10, d.y+3);\r\n    }\r\n\r\n    function drawSelectionInformation(neighbours) {\r\n        for (const node of nodes) {\r\n            if (selectedNode.includes(node.employeeID)) {\r\n                if (selectedNode.length == 1) {\r\n                    drawNodeInformation(node, \"Full\");\r\n                } else if (selectedNode.length > 1) {\r\n                    drawNodeInformation(node, \"Short\");\r\n                }\r\n            } else if (neighbours.includes(node)) {\r\n                if (selectedNode.length == 1) {\r\n                    drawNodeInformation(node, \"Short\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function drawNodeInformation(d, type) {\r\n        if (d != null) {\r\n            var popupX, popupY;\r\n            var popupSize, popupHeight;\r\n            if (type == \"Full\") {\r\n                popupX = d.x + 6;\r\n                popupY = d.y + 6;\r\n                popupSize = ctx.measureText(d.email).width + 4;\r\n                popupHeight = 36;\r\n            } else if (type == \"Short\") {\r\n                popupX = d.x + 3;\r\n                popupY = d.y + 3;\r\n                popupSize = ctx.measureText(Math.max(d.jobTitle, d.name));\r\n                popupHeight = 26;\r\n            } else {\r\n                console.log(\"Unkown dataframe type specified\");\r\n            }\r\n            ctx.fillStyle = \"#fff\";\r\n            ctx.fillRect(popupX, popupY, popupSize, popupHeight);\r\n            ctx.strokeStyle = \"#000\"\r\n            ctx.strokeRect(popupX, popupY, popupSize, popupHeight);\r\n\r\n            if (type == \"Full\") {\r\n                ctx.fillStyle = '#000';\r\n                ctx.fillText(d.name + \" | \" + d.employeeID, popupX + 2, popupY + 10);\r\n                ctx.fillText(d.jobTitle, popupX + 2, popupY + 20);\r\n                ctx.fillText(d.email, popupX + 2, popupY + 30);\r\n            } else if (type == \"Short\") {\r\n                ctx.fillStyle = \"#fff\";\r\n                ctx.fillText(d.name, popupX + 2, popupY + 10);\r\n                ctx.fillText(d.jobTitle, popupX + 2, popupY + 20);\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    function color() {\r\n        var scale = d3.scaleOrdinal(d3.schemeCategory10);\r\n        return d => scale(d.group);\r\n    }\r\n\r\n    //Update loop seperate from the tick function, thus not controlled by D3\r\n    function heartBeat() {\r\n         if (simulation.alpha() < 0.01 && (oldSelection != selectedNode[0] || oldSelectionSize != selectedNode.length)) {\r\n             console.log(canvas);\r\n             simulation.alpha(0.01).restart();\r\n             oldSelection = selectedNode[0];\r\n             oldSelectionSize = selectedNode.length;\r\n         }\r\n         if (updateCounter[0] != updateID) {\r\n            simulation = null;\r\n            clearInterval(heartBeatInterval);\r\n         }\r\n    }\r\n\r\n    //function zooming(event) {\r\n        //transform = event.transform;\r\n        //ticked();\r\n    //}\r\n\r\n    function onClick(event) {\r\n        if (selectedNode.length <= 1) {\r\n            selectedNode[0] = event.subject.employeeID;\r\n        }\r\n    }\r\n\r\n    function dragNodes(simulation) {\r\n        function dragSubject(event) {\r\n            return simulation.find(event.x, event.y);\r\n        }\r\n\r\n        // Use dragStart event to hack in clickability in HTML canvas\r\n        function dragStarted(event) {\r\n            onClick(event);\r\n\r\n            if (!event.active) simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n        }\r\n\r\n        function dragged(event) {\r\n            event.subject.fx = event.x;\r\n            event.subject.fy = event.y;\r\n        }\r\n\r\n        function dragEnded(event) {\r\n            if (!event.active) simulation.alphaTarget(0);\r\n            event.subject.fx = null;\r\n            event.subject.fy = null;\r\n        }\r\n\r\n        return d3.drag()\r\n            .subject(dragSubject)\r\n            .on(\"start\", dragStarted)\r\n            .on(\"drag\", dragged)\r\n            .on(\"end\", dragEnded)\r\n    }\r\n\r\n    //console.log(zooming);\r\n\r\n    heartBeatInterval = setInterval(function () { heartBeat(); }, 50); // Check for updates every 500 ms\r\n    return d3.select(ctx.canvas).call(dragNodes(simulation)).node();\r\n}\r\n\r\n\r\nexport default generateNetworkCanvas"]}]}