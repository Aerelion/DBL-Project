{"remainingRequest":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\src\\visualisations\\nodelinkv2.0.js","dependencies":[{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\src\\visualisations\\nodelinkv2.0.js","mtime":1625059689882},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623407834742},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js","mtime":1623407834357},{"path":"C:\\Users\\Koen\\Documents\\GitHub\\DBL-Project\\node_modules\\eslint-loader\\index.js","mtime":1623407839439}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzL0tvZW4vRG9jdW1lbnRzL0dpdEh1Yi9EQkwtUHJvamVjdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm1hdGgubG9nMTAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5tYXRoLmxvZzIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWxsLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwppbXBvcnQgKiBhcyBkMyBmcm9tICJkMyI7CgpmdW5jdGlvbiBnZW5lcmF0ZU5ldHdvcmtDYW52YXMoZWRnZXMsIG5vZGVzLCBlZGdlV2VpZ2h0cywgc2VsZWN0ZWROb2RlKSB7CiAgdmFyIHNpZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidGVzdFNlbGVjdE5MIikudmFsdWUpOwogIHZhciBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTsKICB2YXIgdyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ2aXNjb250ZW50IikuY2xpZW50V2lkdGg7CiAgdmFyIGggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidmlzY29udGVudCIpLmNsaWVudEhlaWdodCAtIDEzMDsKICB2YXIgb2xkU2VsZWN0aW9uID0gbnVsbDsKICB2YXIgb2xkU2VsZWN0aW9uU2l6ZSA9IDA7CiAgdmFyIG1pbldpZHRoID0gMC4wMTsgLy8gd2lkdGggb2YgYW4gZWRnZSB3aXRoIHdlaWdodCAxCgogIHZhciBtYXhXaWR0aCA9IDE7IC8vIHdpZHRoIG9mIGxhcmdlc3QgZWRnZQoKICB2YXIgbG9nQ29lZmZpY2llbnQgPSAobWF4V2lkdGggLSBtaW5XaWR0aCkgLyBNYXRoLmxvZzEwKGVkZ2VXZWlnaHRzLm1heFdlaWdodCk7CiAgdmFyIGxvZ0NvZWZmaWNpZW50MiA9ICgxMCAtIG1pbldpZHRoKSAvIE1hdGgubG9nMihlZGdlV2VpZ2h0cy5tYXhXZWlnaHQpOyAvLyBjb2VmaWNpZW50IHRoYXQgaXMgdXNlZCB0byBjYWxjdWxhdGUgb3BhY2l0eQoKICBjYW52YXMud2lkdGggPSB3OwogIGNhbnZhcy5oZWlnaHQgPSBoOyAvLyBDcmVhdGVzIGEgY2lyY2xlIGJvdW5kIHdpdGggZGlhbWV0ZXIgb2YgdGhlIHNtYWxsZXN0IG9mIGVpdGhlciB0aGUgd2lkdGggb3IgaGVpZ2h0IG9mIHRoZSB3aW5kb3cuCgogIHZhciBib3VuZERpc3RhbmNlID0gTWF0aC5taW4odyAvIDIsIGggLyAyKTsKICB2YXIgYm91bmREaXN0YW5jZVNxdWFyZWQgPSBNYXRoLnBvdyhib3VuZERpc3RhbmNlLCAyKTsKICBzaWRlLmFwcGVuZENoaWxkKGNhbnZhcyk7CiAgdmFyIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCIyZCIpOwogIGN0eC5zdHJva2VTdHlsZSA9ICJyZWQiOwogIGN0eC5saW5lV2lkdGggPSAwLjE7CiAgdmFyIHRyYW5zZm9ybSA9IGQzLnpvb21JZGVudGl0eTsKICB2YXIgc2ltdWxhdGlvbiA9IGQzIC8vZG9uZQogIC5mb3JjZVNpbXVsYXRpb24obm9kZXMpLmZvcmNlKCJjaGFyZ2UiLCBkMy5mb3JjZU1hbnlCb2R5KCkuc3RyZW5ndGgoLTUwKS5kaXN0YW5jZU1heCgxMDApKS5mb3JjZSgibGluayIsIGQzLmZvcmNlTGluaygpLmlkKGZ1bmN0aW9uIChkKSB7CiAgICByZXR1cm4gZC5lbXBsb3llZUlEOwogIH0pLmxpbmtzKGVkZ2VzKS5zdHJlbmd0aChmdW5jdGlvbiAoZWRnZSkgewogICAgY29uc29sZS5sb2coZWRnZSk7CiAgICByZXR1cm4gKE1hdGgubG9nMihlZGdlLndlaWdodCkgKiBsb2dDb2VmZmljaWVudDIgKyBtaW5XaWR0aCkgLyBlZGdlV2VpZ2h0cy5tYXhXZWlnaHQ7CiAgfSkpLmZvcmNlKCJjZW50ZXIiLCBkMy5mb3JjZUNlbnRlcih3IC8gMiwgaCAvIDIpKS5vbigidGljayIsIHRpY2tlZCk7CgogIGZ1bmN0aW9uIHRpY2tlZCgpIHsKICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTsKICAgIGN0eC50cmFuc2xhdGUodHJhbnNmb3JtLngsIHRyYW5zZm9ybS55KTsKICAgIGN0eC5zY2FsZSh0cmFuc2Zvcm0uaywgdHJhbnNmb3JtLmspOwogICAgdmFyIG5laWdoYm91cnMgPSBwcmVwYXJlRWRnZXMoZWRnZXMpOwoKICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihub2RlcyksCiAgICAgICAgX3N0ZXA7CgogICAgdHJ5IHsKICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICB2YXIgbm9kZSA9IF9zdGVwLnZhbHVlOwogICAgICAgIGNvbnN0cmFpbk5vZGUobm9kZSk7IC8vIENoYW5nZSBzZWxlY3RlZCBub2RlIHRvIHN0YW5kIG91dAoKICAgICAgICBpZiAoc2VsZWN0ZWROb2RlLmluY2x1ZGVzKG5vZGUuZW1wbG95ZWVJRCkpIHsKICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICIjMDAwIjsKICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSAiI2ZmMDAwMCI7CiAgICAgICAgfSBlbHNlIGlmIChuZWlnaGJvdXJzLmluY2x1ZGVzKG5vZGUpICYmIHNlbGVjdGVkTm9kZS5sZW5ndGggPD0gMSkgewogICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gIiMwMDAiOwogICAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICIjMDBmZjAwIjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gIiNmZmYiOwogICAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICIjMDAwIjsKICAgICAgICB9CgogICAgICAgIGlmIChzZWxlY3RlZE5vZGUuaW5jbHVkZXMobm9kZS5lbXBsb3llZUlEKSB8fCBzZWxlY3RlZE5vZGUubGVuZ3RoIDw9IDEpIHsKICAgICAgICAgIGRyYXdOb2RlKG5vZGUpOwogICAgICAgIH0gLy9kcmF3Tm9kZShub2RlKQoKICAgICAgfQogICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICB9IGZpbmFsbHkgewogICAgICBfaXRlcmF0b3IuZigpOwogICAgfQoKICAgIGRyYXdTZWxlY3Rpb25JbmZvcm1hdGlvbihzZWxlY3RlZE5vZGVbMF0pOyAvL3NlbGVjdGVkTm9kZS5mb3JFYWNoKGRyYXdTZWxlY3Rpb25JbmZvcm1hdGlvbikKICB9CgogIGZ1bmN0aW9uIGNvbnN0cmFpbk5vZGUobm9kZSkgewogICAgdmFyIGRpc3RhbmNlRnJvbUNlbnRlclNxdWFyZWQgPSBNYXRoLnBvdyhub2RlLnggLSB3IC8gMiwgMikgKyBNYXRoLnBvdyhub2RlLnkgLSBoIC8gMiwgMik7CgogICAgaWYgKGRpc3RhbmNlRnJvbUNlbnRlclNxdWFyZWQgPiBib3VuZERpc3RhbmNlU3F1YXJlZCkgewogICAgICB2YXIgZGlzdGFuY2VGcm9tQ2VudGVyID0gTWF0aC5zcXJ0KGRpc3RhbmNlRnJvbUNlbnRlclNxdWFyZWQpOwogICAgICBub2RlLnggPSAobm9kZS54IC0gdyAvIDIpIC8gZGlzdGFuY2VGcm9tQ2VudGVyICogYm91bmREaXN0YW5jZSArIHcgLyAyOwogICAgICBub2RlLnkgPSAobm9kZS55IC0gaCAvIDIpIC8gZGlzdGFuY2VGcm9tQ2VudGVyICogYm91bmREaXN0YW5jZSArIGggLyAyOwogICAgfSAvL25vZGUueCA9IE1hdGgubWluKHctNiwgTWF0aC5tYXgoMiwgbm9kZS54KSk7CiAgICAvL25vZGUueSA9IE1hdGgubWluKGgtMTMwLCBNYXRoLm1heCgyLCBub2RlLnkpKTsKCiAgfQoKICBmdW5jdGlvbiBwcmVwYXJlRWRnZXMoZWRnZXMpIHsKICAgIHZhciBzZWxlY3Rpb25FZGdlcyA9IFtdOwogICAgdmFyIG5vcm1hbEVkZ2VzID0gW107CiAgICB2YXIgbmVpZ2hib3VycyA9IFtdOwoKICAgIGlmIChzZWxlY3RlZE5vZGVbMF0gPT0gbnVsbCkgewogICAgICAvLyBObyBzZWxlY3Rpb24sIGRyYXcgYWxsIGVkZ2VzIG5vcm1hbGx5CiAgICAgIGRyYXdBbGxFZGdlcyhlZGdlcywgJyNhYWEnKTsKICAgIH0gZWxzZSBpZiAoc2VsZWN0ZWROb2RlWzFdID09IG51bGwpIHsKICAgICAgLy8gMSBzZWxlY3Rpb24sIGRyYXcgY29ubmVjdGVkIGVkZ2VzIGFuZCBtYXJrIG5laWdoYm91cmluZyBub2Rlcy4KICAgICAgdmFyIF9pdGVyYXRvcjIgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihlZGdlcyksCiAgICAgICAgICBfc3RlcDI7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgZWRnZSA9IF9zdGVwMi52YWx1ZTsKCiAgICAgICAgICBpZiAoZWRnZS5zb3VyY2UuZW1wbG95ZWVJRCA9PSBzZWxlY3RlZE5vZGVbMF0pIHsKICAgICAgICAgICAgc2VsZWN0aW9uRWRnZXMucHVzaChlZGdlKTsKICAgICAgICAgICAgbmVpZ2hib3Vycy5wdXNoKGVkZ2Uuc291cmNlKTsKICAgICAgICAgIH0gZWxzZSBpZiAoZWRnZS50YXJnZXQuZW1wbG95ZWVJRCA9PSBzZWxlY3RlZE5vZGVbMF0pIHsKICAgICAgICAgICAgc2VsZWN0aW9uRWRnZXMucHVzaChlZGdlKTsKICAgICAgICAgICAgbmVpZ2hib3Vycy5wdXNoKGVkZ2UudGFyZ2V0KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5vcm1hbEVkZ2VzLnB1c2goZWRnZSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3IyLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IyLmYoKTsKICAgICAgfQoKICAgICAgZHJhd0FsbEVkZ2VzKG5vcm1hbEVkZ2VzLCAnI2FhYScpOwogICAgICBkcmF3QWxsRWRnZXMoc2VsZWN0aW9uRWRnZXMsICcjZjU4YTJjJyk7CiAgICB9IGVsc2UgewogICAgICAvLyAyIG9yIG1vcmUgc2VsZWN0aW9ucywgbWFyayBlZGdlcyBiZXR3ZWVuIHNlbGVjdGVkIG5vZGVzLgogICAgICB2YXIgX2l0ZXJhdG9yMyA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGVkZ2VzKSwKICAgICAgICAgIF9zdGVwMzsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IzLnMoKTsgIShfc3RlcDMgPSBfaXRlcmF0b3IzLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBfZWRnZSA9IF9zdGVwMy52YWx1ZTsKICAgICAgICAgIHZhciBmcm9tU2VsZWN0aW9uID0gc2VsZWN0ZWROb2RlLmluY2x1ZGVzKF9lZGdlLnNvdXJjZS5lbXBsb3llZUlEKTsKICAgICAgICAgIHZhciB0b1NlbGVjdGlvbiA9IHNlbGVjdGVkTm9kZS5pbmNsdWRlcyhfZWRnZS50YXJnZXQuZW1wbG95ZWVJRCk7CgogICAgICAgICAgaWYgKGZyb21TZWxlY3Rpb24gJiYgdG9TZWxlY3Rpb24pIHsKICAgICAgICAgICAgc2VsZWN0aW9uRWRnZXMucHVzaChfZWRnZSk7CiAgICAgICAgICB9IGVsc2UgaWYgKGZyb21TZWxlY3Rpb24pIHsKICAgICAgICAgICAgbmVpZ2hib3Vycy5wdXNoKF9lZGdlLnRhcmdldCk7CiAgICAgICAgICAgIG5vcm1hbEVkZ2VzLnB1c2goX2VkZ2UpOwogICAgICAgICAgfSBlbHNlIGlmICh0b1NlbGVjdGlvbikgewogICAgICAgICAgICBuZWlnaGJvdXJzLnB1c2goX2VkZ2Uuc291cmNlKTsKICAgICAgICAgICAgbm9ybWFsRWRnZXMucHVzaChfZWRnZSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBub3JtYWxFZGdlcy5wdXNoKF9lZGdlKTsKICAgICAgICAgIH0KICAgICAgICB9IC8vZHJhd0FsbEVkZ2VzKG5vcm1hbEVkZ2VzLCAnI2FhYScpOwoKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yMy5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yMy5mKCk7CiAgICAgIH0KCiAgICAgIGRyYXdBbGxFZGdlcyhzZWxlY3Rpb25FZGdlcywgJyMwMGYnKTsKICAgIH0KCiAgICByZXR1cm4gbmVpZ2hib3VyczsKICB9CgogIGZ1bmN0aW9uIGRyYXdBbGxFZGdlcyhlZGdlcywgc3Ryb2tlQ29sb3IpIHsKICAgIGN0eC5zdHJva2VTdHlsZSA9IHN0cm9rZUNvbG9yOwogICAgZWRnZXMuZm9yRWFjaChkcmF3RWRnZSk7CiAgfQoKICBmdW5jdGlvbiBkcmF3RWRnZShkKSB7CiAgICBjdHguYmVnaW5QYXRoKCk7CiAgICBjdHgubW92ZVRvKGQuc291cmNlLngsIGQuc291cmNlLnkpOwogICAgY3R4LmxpbmVUbyhkLnRhcmdldC54LCBkLnRhcmdldC55KTsKICAgIGN0eC5saW5lV2lkdGggPSBNYXRoLmxvZzEwKGQud2VpZ2h0KSAqIGxvZ0NvZWZmaWNpZW50ICsgbWluV2lkdGg7IC8vIGN0eC5saW5lV2lkdGggPSBkLndlaWdodCAvIGVkZ2VXZWlnaHRzLm1heFdlaWdodDsKCiAgICBjdHguc3Ryb2tlKCk7IC8vY3R4LmZpbGxUZXh0KGQuc2VudGltZW50LCAoKGQuc291cmNlLnggKyBkLnRhcmdldC54KSAvIDIpICsgMTAgLCAoKGQuc291cmNlLnkgKyBkLnRhcmdldC55KSAvIDIpICsgMyk7CiAgICAvL2NvbnNvbGUubG9nKGQuc2VudGltZW50KQogIH0KCiAgZnVuY3Rpb24gZHJhd05vZGUoZCkgewogICAgY3R4LmJlZ2luUGF0aCgpOwogICAgY3R4LmxpbmVXaWR0aCA9IDAuMTsKICAgIGN0eC5tb3ZlVG8oZC54LCBkLnkpOwogICAgY3R4LmFyYyhkLngsIGQueSwgMywgMCwgMiAqIE1hdGguUEkpOwogICAgY3R4LmZpbGxTdHlsZSA9IGNvbG9yKGQpOwogICAgY3R4LmZpbGwoKTsKICAgIGN0eC5zdHJva2UoKTsgLy9jdHguZmlsbFRleHQoIklEOiAiICsgZC5lbXBsb3llZUlELCBkLngrMTAsIGQueSszKTsKICB9CgogIGZ1bmN0aW9uIGRyYXdTZWxlY3Rpb25JbmZvcm1hdGlvbihpZCkgewogICAgdmFyIF9pdGVyYXRvcjQgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihub2RlcyksCiAgICAgICAgX3N0ZXA0OwoKICAgIHRyeSB7CiAgICAgIGZvciAoX2l0ZXJhdG9yNC5zKCk7ICEoX3N0ZXA0ID0gX2l0ZXJhdG9yNC5uKCkpLmRvbmU7KSB7CiAgICAgICAgdmFyIG5vZGUgPSBfc3RlcDQudmFsdWU7CgogICAgICAgIGlmIChpZCA9PSBub2RlLmVtcGxveWVlSUQpIHsKICAgICAgICAgIGRyYXdOb2RlSW5mb3JtYXRpb24obm9kZSk7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfaXRlcmF0b3I0LmUoZXJyKTsKICAgIH0gZmluYWxseSB7CiAgICAgIF9pdGVyYXRvcjQuZigpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gZHJhd05vZGVJbmZvcm1hdGlvbihkKSB7CiAgICBpZiAoZCAhPSBudWxsKSB7CiAgICAgIHZhciBwb3B1cFggPSBkLnggKyAxMDsKICAgICAgdmFyIHBvcHVwWSA9IGQueSArIDEwOwogICAgICB2YXIgcG9wdXBTaXplID0gY3R4Lm1lYXN1cmVUZXh0KGQuZW1haWwpLndpZHRoICsgNDsKICAgICAgY3R4LmZpbGxTdHlsZSA9ICIjZmZmIjsKICAgICAgY3R4LmZpbGxSZWN0KHBvcHVwWCwgcG9wdXBZLCBwb3B1cFNpemUsIDM2KTsKICAgICAgY3R4LnN0cm9rZVN0eWxlID0gIiMwMDAiOwogICAgICBjdHguc3Ryb2tlUmVjdChwb3B1cFgsIHBvcHVwWSwgcG9wdXBTaXplLCAzNik7CiAgICAgIGN0eC5maWxsU3R5bGUgPSAiIzAwMCI7CiAgICAgIGN0eC5maWxsVGV4dChkLm5hbWUgKyAiIHwgIiArIGQuZW1wbG95ZWVJRCwgcG9wdXBYICsgMiwgcG9wdXBZICsgMTApOwogICAgICBjdHguZmlsbFRleHQoZC5qb2JUaXRsZSwgcG9wdXBYICsgMiwgcG9wdXBZICsgMjApOwogICAgICBjdHguZmlsbFRleHQoZC5lbWFpbCwgcG9wdXBYICsgMiwgcG9wdXBZICsgMzApOwogICAgfQogIH0KCiAgZnVuY3Rpb24gY29sb3IoKSB7CiAgICB2YXIgc2NhbGUgPSBkMy5zY2FsZU9yZGluYWwoZDMuc2NoZW1lQ2F0ZWdvcnkxMCk7CiAgICByZXR1cm4gZnVuY3Rpb24gKGQpIHsKICAgICAgcmV0dXJuIHNjYWxlKGQuZ3JvdXApOwogICAgfTsKICB9IC8vVXBkYXRlIGxvb3Agc2VwZXJhdGUgZnJvbSB0aGUgdGljayBmdW5jdGlvbiwgdGh1cyBub3QgY29udHJvbGxlZCBieSBEMwoKCiAgZnVuY3Rpb24gaGVhcnRCZWF0KCkgewogICAgaWYgKHNpbXVsYXRpb24uYWxwaGEoKSA8IDAuMDEgJiYgKG9sZFNlbGVjdGlvbiAhPSBzZWxlY3RlZE5vZGVbMF0gfHwgb2xkU2VsZWN0aW9uU2l6ZSAhPSBzZWxlY3RlZE5vZGUubGVuZ3RoKSkgewogICAgICBjb25zb2xlLmxvZygiQXR0ZW1wdGluZyB3YWtldXAiKTsKICAgICAgc2ltdWxhdGlvbi5hbHBoYSgwLjAxKS5yZXN0YXJ0KCk7CiAgICAgIG9sZFNlbGVjdGlvbiA9IHNlbGVjdGVkTm9kZVswXTsKICAgICAgb2xkU2VsZWN0aW9uU2l6ZSA9IHNlbGVjdGVkTm9kZS5sZW5ndGg7CiAgICB9CiAgfQoKICBmdW5jdGlvbiB6b29taW5nKGV2ZW50KSB7CiAgICB0cmFuc2Zvcm0gPSBldmVudC50cmFuc2Zvcm07CiAgICB0aWNrZWQoKTsKICB9CgogIGZ1bmN0aW9uIG9uQ2xpY2soZXZlbnQpIHsKICAgIGlmIChzZWxlY3RlZE5vZGUubGVuZ3RoIDw9IDEpIHsKICAgICAgc2VsZWN0ZWROb2RlWzBdID0gZXZlbnQuc3ViamVjdC5lbXBsb3llZUlEOwogICAgfQogIH0KCiAgZnVuY3Rpb24gZHJhZ05vZGVzKHNpbXVsYXRpb24pIHsKICAgIGZ1bmN0aW9uIGRyYWdTdWJqZWN0KGV2ZW50KSB7CiAgICAgIHJldHVybiBzaW11bGF0aW9uLmZpbmQoZXZlbnQueCwgZXZlbnQueSk7CiAgICB9IC8vIFVzZSBkcmFnU3RhcnQgZXZlbnQgdG8gaGFjayBpbiBjbGlja2FiaWxpdHkgaW4gSFRNTCBjYW52YXMKCgogICAgZnVuY3Rpb24gZHJhZ1N0YXJ0ZWQoZXZlbnQpIHsKICAgICAgb25DbGljayhldmVudCk7CiAgICAgIGlmICghZXZlbnQuYWN0aXZlKSBzaW11bGF0aW9uLmFscGhhVGFyZ2V0KDAuMykucmVzdGFydCgpOwogICAgICBldmVudC5zdWJqZWN0LmZ4ID0gZXZlbnQuc3ViamVjdC54OwogICAgICBldmVudC5zdWJqZWN0LmZ5ID0gZXZlbnQuc3ViamVjdC55OwogICAgfQoKICAgIGZ1bmN0aW9uIGRyYWdnZWQoZXZlbnQpIHsKICAgICAgZXZlbnQuc3ViamVjdC5meCA9IGV2ZW50Lng7CiAgICAgIGV2ZW50LnN1YmplY3QuZnkgPSBldmVudC55OwogICAgfQoKICAgIGZ1bmN0aW9uIGRyYWdFbmRlZChldmVudCkgewogICAgICBpZiAoIWV2ZW50LmFjdGl2ZSkgc2ltdWxhdGlvbi5hbHBoYVRhcmdldCgwKTsKICAgICAgZXZlbnQuc3ViamVjdC5meCA9IG51bGw7CiAgICAgIGV2ZW50LnN1YmplY3QuZnkgPSBudWxsOwogICAgfQoKICAgIHJldHVybiBkMy5kcmFnKCkuc3ViamVjdChkcmFnU3ViamVjdCkub24oInN0YXJ0IiwgZHJhZ1N0YXJ0ZWQpLm9uKCJkcmFnIiwgZHJhZ2dlZCkub24oImVuZCIsIGRyYWdFbmRlZCk7CiAgfQoKICBjb25zb2xlLmxvZyh6b29taW5nKTsKICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICBoZWFydEJlYXQoKTsKICB9LCA1MCk7IC8vIENoZWNrIGZvciB1cGRhdGVzIGV2ZXJ5IDUwMCBtcwoKICByZXR1cm4gZDMuc2VsZWN0KGN0eC5jYW52YXMpLmNhbGwoZHJhZ05vZGVzKHNpbXVsYXRpb24pKS5ub2RlKCk7Cn0KCmV4cG9ydCBkZWZhdWx0IGdlbmVyYXRlTmV0d29ya0NhbnZhczs="},{"version":3,"sources":["C:/Users/Koen/Documents/GitHub/DBL-Project/src/visualisations/nodelinkv2.0.js"],"names":["d3","generateNetworkCanvas","edges","nodes","edgeWeights","selectedNode","side","document","getElementById","value","canvas","createElement","w","clientWidth","h","clientHeight","oldSelection","oldSelectionSize","minWidth","maxWidth","logCoefficient","Math","log10","maxWeight","logCoefficient2","log2","width","height","boundDistance","min","boundDistanceSquared","pow","appendChild","ctx","getContext","strokeStyle","lineWidth","transform","zoomIdentity","simulation","forceSimulation","force","forceManyBody","strength","distanceMax","forceLink","id","d","employeeID","links","edge","console","log","weight","forceCenter","on","ticked","clearRect","translate","x","y","scale","k","neighbours","prepareEdges","node","constrainNode","includes","fillStyle","length","drawNode","drawSelectionInformation","distanceFromCenterSquared","distanceFromCenter","sqrt","selectionEdges","normalEdges","drawAllEdges","source","push","target","fromSelection","toSelection","strokeColor","forEach","drawEdge","beginPath","moveTo","lineTo","stroke","arc","PI","color","fill","drawNodeInformation","popupX","popupY","popupSize","measureText","email","fillRect","strokeRect","fillText","name","jobTitle","scaleOrdinal","schemeCategory10","group","heartBeat","alpha","restart","zooming","event","onClick","subject","dragNodes","dragSubject","find","dragStarted","active","alphaTarget","fx","fy","dragged","dragEnded","drag","setInterval","select","call"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\r\n\r\n\r\n\r\nfunction generateNetworkCanvas(edges, nodes, edgeWeights, selectedNode) {\r\n    var side = document.getElementById(document.getElementById(\"testSelectNL\").value);\r\n    var canvas = document.createElement('canvas');\r\n    var w = document.getElementById(\"viscontent\").clientWidth;\r\n    var h = document.getElementById(\"viscontent\").clientHeight - 130;\r\n    var oldSelection = null;\r\n    var oldSelectionSize = 0;\r\n\r\n    const minWidth = 0.01;                                                              // width of an edge with weight 1\r\n    const maxWidth = 1;                                                                // width of largest edge\r\n    const logCoefficient = (maxWidth - minWidth) / Math.log10(edgeWeights.maxWeight); \r\n    const logCoefficient2 = (10 - minWidth) / Math.log2(edgeWeights.maxWeight); // coeficient that is used to calculate opacity\r\n\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n    // Creates a circle bound with diameter of the smallest of either the width or height of the window.\r\n    var boundDistance = Math.min(w / 2, h / 2);\r\n    var boundDistanceSquared = Math.pow(boundDistance, 2);\r\n\r\n    side.appendChild(canvas);\r\n\r\n    var ctx = canvas.getContext(\"2d\");\r\n    ctx.strokeStyle = \"red\"\r\n    ctx.lineWidth = 0.1;\r\n\r\n    var transform = d3.zoomIdentity;\r\n\r\n    var simulation = d3 //done\r\n        .forceSimulation(nodes)\r\n        .force(\r\n            \"charge\",\r\n            d3.forceManyBody()\r\n                .strength(-50)\r\n                .distanceMax(100))\r\n        .force(\r\n            \"link\",\r\n            d3\r\n                .forceLink()\r\n                .id(function (d) {\r\n                    return d.employeeID;\r\n                })\r\n                .links(edges)\r\n                .strength(function (edge) {\r\n                    console.log(edge)\r\n                    return ((Math.log2(edge.weight) * logCoefficient2) + minWidth) / edgeWeights.maxWeight;\r\n                })\r\n        )\r\n        .force(\"center\", d3.forceCenter(w / 2, h / 2))\r\n        .on(\"tick\", ticked);\r\n\r\n    function ticked() {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.translate(transform.x, transform.y);\r\n        ctx.scale(transform.k, transform.k);\r\n\r\n        var neighbours = prepareEdges(edges);\r\n\r\n        for (const node of nodes) {\r\n            constrainNode(node);\r\n            // Change selected node to stand out\r\n            if (selectedNode.includes(node.employeeID)) {\r\n                ctx.strokeStyle = \"#000\";\r\n                ctx.fillStyle = \"#ff0000\";\r\n            } else if (neighbours.includes(node) && selectedNode.length <= 1) {\r\n                ctx.strokeStyle = \"#000\";\r\n                ctx.fillStyle = \"#00ff00\";\r\n            } else {\r\n                ctx.strokeStyle = \"#fff\";\r\n                ctx.fillStyle = \"#000\";\r\n            }\r\n            if (selectedNode.includes(node.employeeID) || selectedNode.length <= 1) {\r\n                drawNode(node);\r\n            }\r\n            //drawNode(node)\r\n        }\r\n        drawSelectionInformation(selectedNode[0]);\r\n        //selectedNode.forEach(drawSelectionInformation)\r\n    }\r\n\r\n\r\n    function constrainNode(node) {\r\n        var distanceFromCenterSquared = Math.pow(node.x - w / 2, 2) + Math.pow(node.y - h / 2, 2);\r\n        if (distanceFromCenterSquared > boundDistanceSquared) {\r\n            var distanceFromCenter = Math.sqrt(distanceFromCenterSquared);\r\n            node.x = ((node.x - w / 2) / distanceFromCenter) * boundDistance + w / 2;\r\n            node.y = ((node.y - h / 2) / distanceFromCenter) * boundDistance + h / 2;\r\n        }\r\n        //node.x = Math.min(w-6, Math.max(2, node.x));\r\n        //node.y = Math.min(h-130, Math.max(2, node.y));\r\n    }\r\n\r\n    function prepareEdges(edges) {\r\n        var selectionEdges = [];\r\n        var normalEdges = [];\r\n        var neighbours = [];\r\n\r\n        if (selectedNode[0] == null) { // No selection, draw all edges normally\r\n            drawAllEdges(edges, '#aaa');\r\n        } else if (selectedNode[1] == null) { // 1 selection, draw connected edges and mark neighbouring nodes.\r\n            for (const edge of edges) {\r\n                if (edge.source.employeeID == selectedNode[0]) {\r\n                    selectionEdges.push(edge);\r\n                    neighbours.push(edge.source);\r\n                } else if (edge.target.employeeID == selectedNode[0]) {\r\n                    selectionEdges.push(edge);\r\n                    neighbours.push(edge.target);\r\n                } else {\r\n                    normalEdges.push(edge);\r\n                }\r\n            }\r\n            drawAllEdges(normalEdges, '#aaa');\r\n\r\n            drawAllEdges(selectionEdges, '#f58a2c');\r\n        } else { // 2 or more selections, mark edges between selected nodes.\r\n            for (const edge of edges) {\r\n                var fromSelection = selectedNode.includes(edge.source.employeeID);\r\n                var toSelection = selectedNode.includes(edge.target.employeeID);\r\n                if (fromSelection && toSelection) {\r\n                    selectionEdges.push(edge);\r\n                } else if (fromSelection) {\r\n                    neighbours.push(edge.target);\r\n                    normalEdges.push(edge);\r\n                } else if (toSelection) {\r\n                    neighbours.push(edge.source);\r\n                    normalEdges.push(edge);\r\n                } else {\r\n                    normalEdges.push(edge);\r\n                }\r\n            }\r\n            //drawAllEdges(normalEdges, '#aaa');\r\n\r\n            drawAllEdges(selectionEdges, '#00f');\r\n        }\r\n\r\n        return neighbours;\r\n    }\r\n\r\n    function drawAllEdges(edges, strokeColor) {\r\n        ctx.strokeStyle = strokeColor;\r\n        edges.forEach(drawEdge);\r\n    }\r\n\r\n    function drawEdge(d) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(d.source.x, d.source.y);\r\n        ctx.lineTo(d.target.x, d.target.y);\r\n        ctx.lineWidth=(Math.log10(d.weight) * logCoefficient) + minWidth;\r\n        // ctx.lineWidth = d.weight / edgeWeights.maxWeight;\r\n        ctx.stroke();\r\n        //ctx.fillText(d.sentiment, ((d.source.x + d.target.x) / 2) + 10 , ((d.source.y + d.target.y) / 2) + 3);\r\n        //console.log(d.sentiment)\r\n    }\r\n\r\n    function drawNode(d) {\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 0.1;\r\n        ctx.moveTo(d.x, d.y);\r\n        ctx.arc(d.x, d.y, 3, 0, 2 * Math.PI);\r\n        ctx.fillStyle = color(d);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        //ctx.fillText(\"ID: \" + d.employeeID, d.x+10, d.y+3);\r\n    }\r\n\r\n    function drawSelectionInformation(id) {\r\n        for (const node of nodes) {\r\n            if (id == node.employeeID) {\r\n                drawNodeInformation(node);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    function drawNodeInformation(d) {\r\n        if (d != null) {\r\n            var popupX = d.x + 10;\r\n            var popupY = d.y + 10;\r\n            var popupSize = ctx.measureText(d.email).width + 4;\r\n            ctx.fillStyle = \"#fff\";\r\n            ctx.fillRect(popupX, popupY, popupSize, 36);\r\n\r\n            ctx.strokeStyle = \"#000\"\r\n            ctx.strokeRect(popupX, popupY, popupSize, 36);\r\n            ctx.fillStyle = \"#000\";\r\n            ctx.fillText(d.name + \" | \" + d.employeeID, popupX + 2, popupY + 10);\r\n            ctx.fillText(d.jobTitle, popupX + 2, popupY + 20);\r\n            ctx.fillText(d.email, popupX + 2, popupY + 30);\r\n        }\r\n    }\r\n\r\n    function color() {\r\n        var scale = d3.scaleOrdinal(d3.schemeCategory10);\r\n        return d => scale(d.group);\r\n    }\r\n\r\n    //Update loop seperate from the tick function, thus not controlled by D3\r\n    function heartBeat() {\r\n         if (simulation.alpha() < 0.01 && (oldSelection != selectedNode[0] || oldSelectionSize != selectedNode.length)) {\r\n             console.log(\"Attempting wakeup\");\r\n             simulation.alpha(0.01).restart();\r\n             oldSelection = selectedNode[0];\r\n             oldSelectionSize = selectedNode.length;\r\n         }\r\n    }\r\n\r\n    function zooming(event) {\r\n        transform = event.transform;\r\n        ticked();\r\n    }\r\n\r\n    function onClick(event) {\r\n        if (selectedNode.length <= 1) {\r\n            selectedNode[0] = event.subject.employeeID;\r\n        }\r\n    }\r\n\r\n    function dragNodes(simulation) {\r\n        function dragSubject(event) {\r\n            return simulation.find(event.x, event.y);\r\n        }\r\n\r\n        // Use dragStart event to hack in clickability in HTML canvas\r\n        function dragStarted(event) {\r\n            onClick(event);\r\n\r\n            if (!event.active) simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n        }\r\n\r\n        function dragged(event) {\r\n            event.subject.fx = event.x;\r\n            event.subject.fy = event.y;\r\n        }\r\n\r\n        function dragEnded(event) {\r\n            if (!event.active) simulation.alphaTarget(0);\r\n            event.subject.fx = null;\r\n            event.subject.fy = null;\r\n        }\r\n\r\n        return d3.drag()\r\n            .subject(dragSubject)\r\n            .on(\"start\", dragStarted)\r\n            .on(\"drag\", dragged)\r\n            .on(\"end\", dragEnded)\r\n    }\r\n\r\n    console.log(zooming);\r\n\r\n    setInterval(function () { heartBeat(); }, 50); // Check for updates every 500 ms\r\n    return d3.select(ctx.canvas).call(dragNodes(simulation)).node();\r\n}\r\n\r\n\r\nexport default generateNetworkCanvas"]}]}