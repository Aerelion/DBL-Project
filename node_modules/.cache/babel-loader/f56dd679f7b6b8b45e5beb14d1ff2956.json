{"remainingRequest":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/babel-loader/lib/index.js!/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/views/fileUpload.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/views/fileUpload.vue","mtime":1621541108790},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9iZXJrYXlrb3NlYmF5L0RvY3VtZW50cy9HaXRIdWIvREJMLVByb2plY3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luLmpzIjsKaW1wb3J0IGZpcmViYXNlIGZyb20gJ2ZpcmViYXNlJzsKaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnOwppbXBvcnQgeyBkYiB9IGZyb20gJy4uL21haW4nOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2ZpbGVVcGxvYWQnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhc2V0czogewogICAgICAgIGZpbGVMaW5rOiBudWxsLAogICAgICAgIGRhdGFOYW1lOiBudWxsCiAgICAgIH0sCiAgICAgIHNlbGVjdGVkRmlsZTogbnVsbCwKICAgICAgZGF0YXNldE5vOiAwCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0QWxsRGF0YWJhc2VFbnRyaWVzKCk7IC8vdGhlIG1vdW50ZWQoKSBsaWZlY3ljbGUgZXhlY3V0ZXMgYWZ0ZXIgYWxsIGNvbXBvbmVudHMgb2YgdGhlIHBhZ2UgaGF2ZSBmaW5pc2hlZCBsb2FkaW5nLCBzbyBhZnRlciB0aGUgcGFnZSBpcyByZWFkeQogICAgLy8gdGhlIHByZXZpb3VzIHVwbG9hZGVkIGRhdGFzZXRzIGFyZSB2aXNpYmxlIGluIHRoZSBwYWdlLgogIH0sCiAgbWV0aG9kczogewogICAgc2VsZWN0RmlsZTogZnVuY3Rpb24gc2VsZWN0RmlsZShldmVudCkgewogICAgICB0aGlzLnNlbGVjdGVkRmlsZSA9IGV2ZW50LnRhcmdldC5maWxlc1swXTsgLy9TZWxlY3RzIHRoZSB1cGxvYWRlZCBmaWxlIGFuZCBhc3NpZ25zIGl0IHRvIHRoZSAic2VsZWN0ZWRGaWxlIiB2YXJpYWJsZS4KICAgICAgLy9UT0RPOiBBZGQgcHJvcGVyIGNoZWNrcyB0byBlbnN1cmUgdGhhdCB0aGUgZmlsZXMgZ2l2ZW4gYXJlIGNzdiBmaWxlcy4KICAgIH0sCiAgICB1cGxvYWRGaWxlOiBmdW5jdGlvbiB1cGxvYWRGaWxlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGZpbGVOYW1lID0gIiIuY29uY2F0KHRoaXMuc2VsZWN0ZWRGaWxlLm5hbWUpOwogICAgICB2YXIgc3RvcmFnZVJlZiA9IGZpcmViYXNlLnN0b3JhZ2UoKS5yZWYoZmlsZU5hbWUpOwogICAgICB2YXIgdXBsb2FkVGFzayA9IHN0b3JhZ2VSZWYucHV0KHRoaXMuc2VsZWN0ZWRGaWxlKTsKICAgICAgdXBsb2FkVGFzay5vbignc3RhdGVfY2hhbmdlZCcsIGZ1bmN0aW9uICgpIHt9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAvL0hhbmRsZSB1bnN1Y2Nlc3NmdWxsIHVwbG9hZHMuCiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgLy9IYW5kbGUgc3VjY2Vzc2Z1bGwgdXBsb2Fkcy4KICAgICAgICB1cGxvYWRUYXNrLnNuYXBzaG90LnJlZi5nZXREb3dubG9hZFVSTCgpLnRoZW4oZnVuY3Rpb24gKGRvd25sb2FkVVJMKSB7CiAgICAgICAgICBfdGhpcy5kYXRhc2V0cy5maWxlTGluayA9IGRvd25sb2FkVVJMOwoKICAgICAgICAgIF90aGlzLnNhdmVEYXRhVG9EQigpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBzYXZlRGF0YVRvREI6IGZ1bmN0aW9uIHNhdmVEYXRhVG9EQigpIHsKICAgICAgZGIuY29sbGVjdGlvbigiZGF0YXNldHMiKS5hZGQodGhpcy5kYXRhc2V0cykudGhlbihmdW5jdGlvbiAoZG9jUmVmKSB7CiAgICAgICAgdmFyIHN1Y01zZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtc2ciKTsKICAgICAgICBzdWNNc2cuaW5uZXJIVE1MID0gIlRoZSBkYXRhc2V0IGhhcyBiZWVuIHVwbG9hZGVkIHN1Y2Nlc3NmdWxseS4iOwogICAgICAgIGNvbnNvbGUubG9nKCJEb2N1bWVudCB3cml0dGVuIHdpdGggSUQ6ICIsIGRvY1JlZi5pZCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoIkVycm9yIGFkZGluZyBkb2N1bWVudDogIiwgZXJyb3IpOwogICAgICB9KTsKICAgIH0sCiAgICBzaG93RGF0YWJhc2VFbnRyaWVzOiBmdW5jdGlvbiBzaG93RGF0YWJhc2VFbnRyaWVzKG5hbWUsIGxpbmspIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgdWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGlzdCcpOwogICAgICB2YXIgaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTsKCiAgICAgIHZhciBfbmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CgogICAgICB2YXIgX3Zpc3VhbGlzZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwoKICAgICAgdmFyIHZpc0RpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd2aXMnKTsgLy8gdmFyIHRlc3RQYXJhZ2hyYXBoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaDIiKTsKCiAgICAgIGhlYWRlci5pbm5lckhUTUwgPSAiRGF0YXNldC0iICsgKyt0aGlzLmRhdGFzZXRObzsKICAgICAgX25hbWUuaW5uZXJIVE1MID0gIk5hbWUgb2YgdGhlIGRhdGFzZXQ6ICIgKyBuYW1lOwogICAgICBfdmlzdWFsaXNlLmlubmVySFRNTCA9ICJWaXN1YWxpc2UiOwogICAgICBfdmlzdWFsaXNlLm9uY2xpY2sgPSAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZSwgZGF0YSwgZWRnZXMsIG5vZGVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHZpc0Rpdi5pbm5lckhUTUwgPSAiIjsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKGxpbmspOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IGQzOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UudGV4dCgpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfY29udGV4dC50MSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MiA9IGQzLmF1dG9UeXBlOwogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnQwLmNzdlBhcnNlLmNhbGwoX2NvbnRleHQudDAsIF9jb250ZXh0LnQxLCBfY29udGV4dC50Mik7CiAgICAgICAgICAgICAgICBlZGdlcyA9IFtdOwogICAgICAgICAgICAgICAgbm9kZXMgPSBbXTsgLy9jb25zb2xlLmxvZyhkYXRhKTsKCiAgICAgICAgICAgICAgICBkYXRhLmZvckVhY2goZnVuY3Rpb24gKHgpIHsKICAgICAgICAgICAgICAgICAgdmFyIG9iakVkZ2VzID0ge307CiAgICAgICAgICAgICAgICAgIG9iakVkZ2VzWyJzb3VyY2UiXSA9IHguZnJvbUlkOwogICAgICAgICAgICAgICAgICBvYmpFZGdlc1sidGFyZ2V0Il0gPSB4LnRvSWQ7CiAgICAgICAgICAgICAgICAgIGVkZ2VzLnB1c2gob2JqRWRnZXMpOwogICAgICAgICAgICAgICAgICB2YXIgb2JqTm9kZXNUbyA9IHt9OwogICAgICAgICAgICAgICAgICB2YXIgb2JqTm9kZXNGcm9tID0ge307CiAgICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IG5vZGVzLmZpbmRJbmRleChmdW5jdGlvbiAobykgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBvLmVtcGxveWVlSUQgPT0geC5mcm9tSWQ7CiAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgaWYgKGluZGV4ID09PSAtMSkgewogICAgICAgICAgICAgICAgICAgIG9iak5vZGVzRnJvbVsiZW1wbG95ZWVJRCJdID0geC5mcm9tSWQ7CiAgICAgICAgICAgICAgICAgICAgbm9kZXMucHVzaChvYmpOb2Rlc0Zyb20pOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICB2YXIgaW5kZXgyID0gbm9kZXMuZmluZEluZGV4KGZ1bmN0aW9uIChvKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG8uZW1wbG95ZWVJRCA9PSB4LnRvSWQ7CiAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgaWYgKGluZGV4MiA9PT0gLTEpIHsKICAgICAgICAgICAgICAgICAgICBvYmpOb2Rlc1RvWyJlbXBsb3llZUlEIl0gPSB4LnRvSWQ7CiAgICAgICAgICAgICAgICAgICAgbm9kZXMucHVzaChvYmpOb2Rlc1RvKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlZGdlcyk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhub2Rlcyk7CgogICAgICAgICAgICAgICAgX3RoaXMyLmdlbmVyYXRlTmV0d29yayhlZGdlcywgbm9kZXMpOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKICAgICAgdWwuYXBwZW5kQ2hpbGQoaGVhZGVyKTsKICAgICAgdWwuYXBwZW5kQ2hpbGQoX25hbWUpOwogICAgICB1bC5hcHBlbmRDaGlsZChfdmlzdWFsaXNlKTsKICAgIH0sCiAgICBnZXRBbGxEYXRhYmFzZUVudHJpZXM6IGZ1bmN0aW9uIGdldEFsbERhdGFiYXNlRW50cmllcygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICBkYi5jb2xsZWN0aW9uKCdkYXRhc2V0cycpLmdldCgpLnRoZW4oZnVuY3Rpb24gKHNuYXBzaG90KSB7CiAgICAgICAgc25hcHNob3QuZm9yRWFjaChmdW5jdGlvbiAoZG9jKSB7CiAgICAgICAgICB2YXIgbmFtZSA9IGRvYy5kYXRhKCkuZGF0YU5hbWU7CiAgICAgICAgICB2YXIgbGluayA9IGRvYy5kYXRhKCkuZmlsZUxpbms7CgogICAgICAgICAgX3RoaXMzLnNob3dEYXRhYmFzZUVudHJpZXMobmFtZSwgbGluayk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGdlbmVyYXRlTmV0d29yazogZnVuY3Rpb24gZ2VuZXJhdGVOZXR3b3JrKGVkZ2VzLCBub2RlcykgewogICAgICB2YXIgdyA9IDEwMDA7CiAgICAgIHZhciBoID0gNjAwOwogICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCIjdmlzIikuYXBwZW5kKCJzdmciKS5hdHRyKCJ3aWR0aCIsIHcpLmF0dHIoImhlaWdodCIsIGgpLnN0eWxlKCJiYWNrZ3JvdW5kIiwgImJsYWNrIikuY2FsbChkMy56b29tKCkub24oJ3pvb20nLCBmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgICBzdmcuYXR0cigndHJhbnNmb3JtJywgZXZlbnQudHJhbnNmb3JtKS5zY2FsZUV4dGVudChbMSwgMjRdKTsKICAgICAgfSkpLmFwcGVuZCgnZycpOwogICAgICB2YXIgc2ltdWxhdGlvbiA9IGQzLmZvcmNlU2ltdWxhdGlvbihub2RlcykuZm9yY2UoImNoYXJnZSIsIGQzLmZvcmNlTWFueUJvZHkoKS5zdHJlbmd0aCgtNTApKS5mb3JjZSgibGluayIsIGQzLmZvcmNlTGluaygpLmlkKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQuZW1wbG95ZWVJRDsKICAgICAgfSkubGlua3MoZWRnZXMpKS5mb3JjZSgiY2VudGVyIiwgZDMuZm9yY2VDZW50ZXIodyAvIDIsIGggLyAyKSkub24oImVuZCIsIHRpY2tlZCk7CiAgICAgIHZhciBlZGdlID0gc3ZnLmFwcGVuZCgiZyIpLmF0dHIoImNsYXNzIiwgImxpbmtzIikuc2VsZWN0QWxsKCJsaW5lIikuZGF0YShlZGdlcykuZW50ZXIoKS5hcHBlbmQoImxpbmUiKS5zdHlsZSgic3Ryb2tlIiwgIiNhYWEiKTsKICAgICAgdmFyIG5vZGUgPSBzdmcuYXBwZW5kKCJnIikuYXR0cigiY2xhc3MiLCAibm9kZXMiKS5zZWxlY3RBbGwoImNpcmNsZSIpLmRhdGEobm9kZXMpLmpvaW4oImNpcmNsZSIpLmF0dHIoInIiLCA1KS5hdHRyKCJmaWxsIiwgZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiAiYmx1ZSI7CiAgICAgIH0pOyAvLy5jYWxsKGRyYWdOb2RlcyhzaW11bGF0aW9uKSk7CgogICAgICBmdW5jdGlvbiB0aWNrZWQoKSB7CiAgICAgICAgZWRnZS5hdHRyKCJ4MSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC5zb3VyY2UueDsKICAgICAgICB9KS5hdHRyKCJ5MSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC5zb3VyY2UueTsKICAgICAgICB9KS5hdHRyKCJ4MiIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC50YXJnZXQueDsKICAgICAgICB9KS5hdHRyKCJ5MiIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC50YXJnZXQueTsKICAgICAgICB9KTsKICAgICAgICBub2RlLmF0dHIoImN4IiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIHJldHVybiBkLng7CiAgICAgICAgfSkuYXR0cigiY3kiLCBmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGQueTsKICAgICAgICB9KTsKICAgICAgfQogICAgICAvKmZ1bmN0aW9uIGRyYWdOb2RlcyhzaW11bGF0aW9uKSB7IC8vIFRoaXMgbmVlZHMgYSBsb3QgbW9yZSBvcHRpbWl6YXRpb24sIHNvIGl0IGlzIGJlaW5nIGxlZnQgb3V0IGZvciB0aGUgcHJvdG90eXBlLgogICAgICAgIGZ1bmN0aW9uIGRyYWdTdGFydGVkKGV2ZW50KSB7CiAgICAgICAgICBpZiAoIWV2ZW50LmFjdGl2ZSkgc2ltdWxhdGlvbi5hbHBoYVRhcmdldCgwLjMpLnJlc3RhcnQoKTsKICAgICAgICAgIGV2ZW50LnN1YmplY3QuZnggPSBldmVudC5zdWJqZWN0Lng7CiAgICAgICAgICBldmVudC5zdWJqZWN0LmZ5ID0gZXZlbnQuc3ViamVjdC55OwogICAgICAgIH0KICAgICAgICAKICAgICAgICBmdW5jdGlvbiBkcmFnZ2VkKGV2ZW50KSB7CiAgICAgICAgICBldmVudC5zdWJqZWN0LmZ4ID0gZXZlbnQueDsKICAgICAgICAgIGV2ZW50LnN1YmplY3QuZnkgPSBldmVudC55OwogICAgICAgIH0KICAgICAgICAKICAgICAgICBmdW5jdGlvbiBkcmFnRW5kZWQoZXZlbnQpIHsKICAgICAgICAgIGlmICghZXZlbnQuYWN0aXZlKSBzaW11bGF0aW9uLmFscGhhVGFyZ2V0KDApOwogICAgICAgICAgZXZlbnQuc3ViamVjdC5meCA9IG51bGw7CiAgICAgICAgICBldmVudC5zdWJqZWN0LmZ5ID0gbnVsbDsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgcmV0dXJuIGQzLmRyYWcoKQogICAgICAgICAgICAub24oInN0YXJ0IiwgZHJhZ1N0YXJ0ZWQpCiAgICAgICAgICAgIC5vbigiZHJhZyIsIGRyYWdnZWQpCiAgICAgICAgICAgIC5vbigiZW5kIiwgZHJhZ0VuZGVkKTsKICAgICAgfSovCgoKICAgICAgY29uc29sZS5sb2coc2ltdWxhdGlvbik7CiAgICAgIHJldHVybiBzdmcubm9kZSgpOwogICAgfQogICAgLypnZW5lcmF0ZU5ldHdvcmtXaXRoQ2FudmFzKGVkZ2VzLCBub2RlcykgeyAvL1RyeWluZyB0byBvcHRpbWl6ZSBieSB1c2luZyBhIGNhbnZhcyBpbnN0ZWFkIG9mIHN2Zywgc2hvdWxkIGltcHJvdmUgcGVyZm9ybWFuY2Ugb2YgdGhlIGZ1bGwgZGF0YXNldCBxdWl0ZSBhIGJpdCwgYnV0IGp1c3QgdGVzdGluZyBhdG0uIE5vdCBpbmNsdWRlZCBpbiB0aGUgcHJvdG90eXBlLgogICAgICAgICAgdmFyIHcgPSAxMDAwOwogICAgICAgICAgdmFyIGggPSA2MDA7CiAgICAgICAgICB2YXIgciA9IDU7CiAgICAKICAgICAgICAgIHZhciBodG1sQ2FudmFzID0gZDMKICAgICAgICAgICAgLnNlbGVjdCgiI3ZpcyIpCiAgICAgICAgICAgIC5hcHBlbmQoImNhbnZhcyIpCiAgICAgICAgICAgIC5hdHRyKCJ3aWR0aCIsIHcpCiAgICAgICAgICAgIC5hdHRyKCJoZWlnaHQiLCBoKQogICAgICAgICAgICAuc3R5bGUoImJhY2tncm91bmQiLCAiYmxhY2siKTsKICAgICAgICAgIAogICAgICAgICAgdmFyIGNhbnZhc1Rvb2xib3ggPSBodG1sQ2FudmFzLm5vZGUoKS5nZXRDb250ZXh0KCcyZCcpOyAvL0NhbnZhcyB0b29sYm94LCBpdCBpcyBhbiBvYmplY3QgY2FycnlpbmcgYWxsIHRoZSBwcm9wZXJ0aWVzIGFuZCBtZXRob2RzIHdlIG5lZWQgdG8gZHJhdyBvbiB0aGUgY2FudmFzLgogICAgICAgICAgCiAgICAgICAgICAvL3ZhciBkaXYgPSBkMy5zZWxlY3QoImJvZHkiKS5hcHBlbmQoImRpdiIpLmF0dHIoImNsYXNzIiwgInRvb2x0aXAiKS5zdHlsZSgib3BhY2l0eSIsIDApOwogICAgICAgICAgCiAgICAgICAgICB2YXIgc2ltdWxhdGlvbiA9IGQzLmZvcmNlU2ltdWxhdGlvbihub2RlcykKICAgICAgICAgICAgICAuZm9yY2UoImNoYXJnZSIsIGQzLmZvcmNlTWFueUJvZHkoKS5zdHJlbmd0aCgtMzApKQogICAgICAgICAgICAgIC5mb3JjZSgieCIsIGQzLmZvcmNlWCh3IC8gMikuc3RyZW5ndGgoMC4xKSkKICAgICAgICAgICAgICAuZm9yY2UoInkiLCBkMy5mb3JjZVkoaCAvIDIpLnN0cmVuZ3RoKDAuMSkpCiAgICAgICAgICAgICAgLmZvcmNlKCJsaW5rIiwgZDMuZm9yY2VMaW5rKCkuaWQoZnVuY3Rpb24gKGQpIHtyZXR1cm4gZC5lbXBsb3llZUlEO30pLmxpbmtzKGVkZ2VzKSkKICAgICAgICAgICAgICAuZm9yY2UoImNlbnRlciIsIGQzLmZvcmNlQ2VudGVyKHcgLyAyLCBoIC8gMikpOwogICAgICAgICAgCiAgICAgICAgICB2YXIgdHJhbnNmb3JtID0gZDMuem9vbUlkZW50aXR5OwogICAgCiAgICAgICAgICBpbml0R3JhcGgoZWRnZXMsIG5vZGVzKTsKICAgIAogICAgICAgICAgZnVuY3Rpb24gaW5pdEdyYXBoKGVkZ2VzLCBub2RlcykgewogICAgICAgICAgICAKICAgICAgICAgICAgZnVuY3Rpb24gem9vbWVkKGV2ZW50KSB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coInpvb21pbmciKTsKICAgICAgICAgICAgICB0cmFuc2Zvcm0gPSBldmVudC50cmFuc2Zvcm07CiAgICAgICAgICAgICAgdGlja2VkKCkKICAgICAgICAgICAgfQogICAgICAgICAgICBjb25zb2xlLmxvZygiSGVsbG8iKQogICAgICAgICAgICBkMy5zZWxlY3QoaHRtbENhbnZhcykKICAgICAgICAgICAgICAgIC5jYWxsKGQzLmRyYWcoKS5zdWJqZWN0KGRyYWdzdWJqZWN0KS5vbigic3RhcnQiLCBkcmFnU3RhcnRlZCkub24oImRyYWciLCBkcmFnZ2VkKS5vbigiZW5kIixkcmFnRW5kZWQpKQogICAgICAgICAgICAgICAgLmNhbGwoZDMuem9vbSgpLnNjYWxlRXh0ZW50KFsxIC8gMTAsIDhdKS5vbigiem9vbSIsIHpvb21lZCkpOwogICAgICAgICAgICAKICAgICAgICAgICAgZnVuY3Rpb24gZHJhZ3N1YmplY3QoZXZlbnQpIHsKICAgICAgICAgICAgICB2YXIgaSwKICAgICAgICAgICAgICB4ID0gdHJhbnNmb3JtLmludmVydFgoZXZlbnQueCksCiAgICAgICAgICAgICAgeSA9IHRyYW5zZm9ybS5pbnZlcnRZKGV2ZW50LnkpLAogICAgICAgICAgICAgIGR4LAogICAgICAgICAgICAgIGR5OwogICAgICAgICAgICAgIGZvciAoaSA9IG5vZGVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7CiAgICAgICAgICAgICAgICB2YXIgbm9kZSA9IG5vZGVzW2ldOwogICAgICAgICAgICAgICAgZHggPSB4IC0gbm9kZS54OwogICAgICAgICAgICAgICAgZHkgPSB5IC0gbm9kZS55OwogICAgCiAgICAgICAgICAgICAgICBpZiAoZHggKiBkeCArIGR5ICogZHkgPCByICogcikgewogICAgCiAgICAgICAgICAgICAgICAgIG5vZGUueCA9ICB0cmFuc2Zvcm0uYXBwbHlYKG5vZGUueCk7CiAgICAgICAgICAgICAgICAgIG5vZGUueSA9IHRyYW5zZm9ybS5hcHBseVkobm9kZS55KTsKICAgIAogICAgICAgICAgICAgICAgICByZXR1cm4gbm9kZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZnVuY3Rpb24gZHJhZ1N0YXJ0ZWQoZXZlbnQpIHsKICAgICAgICAgICAgICAgIGlmICghZXZlbnQuYWN0aXZlKSBzaW11bGF0aW9uLmFscGhhVGFyZ2V0KDAuMykucmVzdGFydCgpOwogICAgICAgICAgICAgICAgZXZlbnQuc3ViamVjdC5meCA9IGV2ZW50LnN1YmplY3QueDsKICAgICAgICAgICAgICAgIGV2ZW50LnN1YmplY3QuZnkgPSBldmVudC5zdWJqZWN0Lnk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIAogICAgICAgICAgICAgIGZ1bmN0aW9uIGRyYWdnZWQoZXZlbnQpIHsKICAgICAgICAgICAgICAgIGV2ZW50LnN1YmplY3QuZnggPSBldmVudC54OwogICAgICAgICAgICAgICAgZXZlbnQuc3ViamVjdC5meSA9IGV2ZW50Lnk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIAogICAgICAgICAgICAgIGZ1bmN0aW9uIGRyYWdFbmRlZChldmVudCkgewogICAgICAgICAgICAgICAgaWYgKCFldmVudC5hY3RpdmUpIHNpbXVsYXRpb24uYWxwaGFUYXJnZXQoMCk7CiAgICAgICAgICAgICAgICBldmVudC5zdWJqZWN0LmZ4ID0gbnVsbDsKICAgICAgICAgICAgICAgIGV2ZW50LnN1YmplY3QuZnkgPSBudWxsOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBzaW11bGF0aW9uLm5vZGVzKG5vZGVzKS5vbigndGljaycsIHRpY2tlZCk7CiAgICAgICAgICAgICAgc2ltdWxhdGlvbi5mb3JjZSgibGluayIpLmxpbmtzKGVkZ2VzKTsKICAgICAgICAgICAgICAKICAgICAgICAgICAgICBmdW5jdGlvbiB0aWNrZWQoKSB7CiAgICAgICAgICAgICAgY2FudmFzVG9vbGJveC5zYXZlKCk7CiAgICAgICAgICAgICAgY2FudmFzVG9vbGJveC5jbGVhclJlY3QoMCwgMCwgdywgaCk7CiAgICAgICAgICAgICAgY2FudmFzVG9vbGJveC50cmFuc2xhdGUodHJhbnNmb3JtLngsIHRyYW5zZm9ybS55KTsKICAgICAgICAgICAgICBjYW52YXNUb29sYm94LnNjYWxlKHRyYW5zZm9ybS5rLCB0cmFuc2Zvcm0uayk7CiAgICAKICAgICAgICAgICAgICBlZGdlcy5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgICAgICBjYW52YXNUb29sYm94LmJlZ2luUGF0aCgpOwogICAgICAgICAgICAgICAgY2FudmFzVG9vbGJveC5tb3ZlVG8oZC5zb3VyY2UueCwgZC5zb3VyY2UueSk7CiAgICAgICAgICAgICAgICBjYW52YXNUb29sYm94LmxpbmVUbyhkLnRhcmdldC54LCBkLnRhcmdldC55KTsKICAgICAgICAgICAgICAgIGNhbnZhc1Rvb2xib3guc3Ryb2tlKCk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgbm9kZXMuZm9yRWFjaChmdW5jdGlvbiAoZCkgewogICAgICAgICAgICAgICAgY2FudmFzVG9vbGJveC5iZWdpblBhdGgoKTsKICAgICAgICAgICAgICAgIGNhbnZhc1Rvb2xib3guYXJjKGQueCwgZC55LCByLCAwLCAyICogTWF0aC5QSSwgdHJ1ZSk7CiAgICAgICAgICAgICAgICBjYW52YXNUb29sYm94LmZpbGxTdHlsZSA9IGQuY29sID8gInJlZCI6ImJsYWNrIgogICAgICAgICAgICAgICAgY2FudmFzVG9vbGJveC5maWxsKCk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgY2FudmFzVG9vbGJveC5yZXN0b3JlKCk7CiAgICAgICAgICAgIH0KICAgIAogICAgICAgICAgfQogICAgfSovCgogIH0KfTs="},{"version":3,"sources":["/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/views/fileUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"fileupload\" v-bind:style=\"{display:grid}\">\n    <h1>File Upload Page</h1>\n    <input type=\"text\" placeholder=\"Name of the Dataset\" v-model=datasets.dataName class=\"form-control\">\n    <p id=\"msg\"></p><br><br>\n    <input type=\"file\" accept=\".csv\" @change=\"selectFile\"><button @click=\"uploadFile\">Upload</button><br><br>\n  </div><br><br>\n  <div class=\"row\">\n  <ul id=\"list\" class=\"column\"> </ul>\n  <div id=\"vis\" class=\"column\"></div>\n  </div>\n</template>\n\n<script>\nimport firebase from 'firebase';\nimport * as d3 from 'd3';\nimport {db} from '../main'\n\nexport default {\n  name: 'fileUpload',\n  data () {\n      return {\n        datasets: {\n          fileLink: null,\n          dataName: null,\n        },\n          selectedFile: null,\n          datasetNo: 0\n      }\n  },\n  mounted() {\n    this.getAllDatabaseEntries(); //the mounted() lifecycle executes after all components of the page have finished loading, so after the page is ready\n                                  // the previous uploaded datasets are visible in the page.\n  },\n  methods: {\n      selectFile(event) {\n          this.selectedFile = event.target.files[0] //Selects the uploaded file and assigns it to the \"selectedFile\" variable.\n          //TODO: Add proper checks to ensure that the files given are csv files.\n      },\n      uploadFile() {\n          let fileName = `${this.selectedFile.name}`;\n          var storageRef = firebase.storage().ref(fileName);\n          let uploadTask = storageRef.put(this.selectedFile);\n          uploadTask.on('state_changed', () => {\n          }, (error) => {\n            //Handle unsuccessfull uploads.\n            console.log(error);\n          }, () => {\n            //Handle successfull uploads.\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n              this.datasets.fileLink = downloadURL;\n              this.saveDataToDB();\n            })\n          })\n          },\n      saveDataToDB() {\n          db.collection(\"datasets\").add(this.datasets).then((docRef) => {\n            var sucMsg = document.getElementById(\"msg\")\n            sucMsg.innerHTML = \"The dataset has been uploaded successfully.\"\n            console.log(\"Document written with ID: \", docRef.id);\n          })\n          .catch( (error) => {\n            console.error(\"Error adding document: \", error);\n          })\n          },\n      showDatabaseEntries(name, link) {\n          var ul = document.getElementById('list');\n          var header = document.createElement('h2');\n          var _name = document.createElement('li');\n          var _visualise = document.createElement('button');\n          var visDiv = document.getElementById('vis');\n         // var testParaghraph = document.createElement(\"h2\");\n          header.innerHTML = \"Dataset-\"+ (++this.datasetNo);\n          _name.innerHTML=\"Name of the dataset: \"+name;\n          _visualise.innerHTML = \"Visualise\";\n          _visualise.onclick = async () => {\n            visDiv.innerHTML=\"\";\n            const response = await fetch(link);\n            const data = d3.csvParse(await response.text(), d3.autoType);\n            var edges = [];\n            var nodes = [];\n            //console.log(data);\n            data.forEach((x) => {\n              var objEdges = {}\n              objEdges[\"source\"] = x.fromId;\n              objEdges[\"target\"] = x.toId;\n              edges.push(objEdges);\n              var objNodesTo = {}\n              var objNodesFrom = {}\n              var index = nodes.findIndex(o => o.employeeID == x.fromId)\n              if(index === -1) {\n                objNodesFrom[\"employeeID\"] = x.fromId;\n                nodes.push(objNodesFrom);\n              }\n              var index2 = nodes.findIndex(o => o.employeeID == x.toId)\n              if(index2 === -1) {\n                objNodesTo[\"employeeID\"] = x.toId;\n                nodes.push(objNodesTo);\n              }\n            })\n            console.log(edges);\n            console.log(nodes);\n            this.generateNetwork(edges, nodes);\n          }\n          ul.appendChild(header);\n          ul.appendChild(_name);\n          ul.appendChild(_visualise);\n        },\n      getAllDatabaseEntries() {\n          db.collection('datasets').get().then((snapshot) => {\n            snapshot.forEach((doc) => {\n              let name = doc.data().dataName;\n              let link = doc.data().fileLink;\n              this.showDatabaseEntries(name, link);\n            }\n            )\n          }\n          )\n        },\n    generateNetwork(edges, nodes) {\n      var w = 1000;\n      var h = 600;\n\n      var svg = d3\n        .select(\"#vis\")\n        .append(\"svg\")\n        .attr(\"width\", w)\n        .attr(\"height\", h)\n        .style(\"background\", \"black\")\n        .call(d3.zoom().on('zoom', (event) => {\n            svg.attr('transform', event.transform).scaleExtent([1,24]);}))\n        .append('g');\n      \n      var simulation = d3.forceSimulation(nodes)\n          .force(\"charge\", d3.forceManyBody().strength(-50))\n          .force(\"link\", d3.forceLink().id(function (d) {return d.employeeID;}).links(edges))\n          .force(\"center\", d3.forceCenter(w / 2, h / 2))\n          .on(\"end\", ticked);\n\n        var edge = svg\n          .append(\"g\")\n          .attr(\"class\", \"links\")\n          .selectAll(\"line\")\n          .data(edges)\n          .enter()\n          .append(\"line\")\n          .style(\"stroke\", \"#aaa\");\n\n        var node = svg\n          .append(\"g\")\n          .attr(\"class\", \"nodes\")\n          .selectAll(\"circle\")\n          .data(nodes)\n          .join(\"circle\")\n          .attr(\"r\", 5)\n          .attr(\"fill\", function() {return \"blue\";})\n          //.call(dragNodes(simulation));\n        \n        function ticked() {\n          edge\n            .attr(\"x1\", function(d) {\n              return d.source.x;\n            })\n            .attr(\"y1\", function(d) {\n              return d.source.y;\n            })\n            .attr(\"x2\", function(d) {\n              return d.target.x;\n            })\n            .attr(\"y2\", function(d) {\n              return d.target.y;\n            });\n            \n            node\n              .attr(\"cx\", function(d) {\n              return d.x;\n            })\n              .attr(\"cy\", function(d) {\n              return d.y;\n            });\n        }\n        /*function dragNodes(simulation) { // This needs a lot more optimization, so it is being left out for the prototype.\n          function dragStarted(event) {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            event.subject.fx = event.subject.x;\n            event.subject.fy = event.subject.y;\n          }\n          \n          function dragged(event) {\n            event.subject.fx = event.x;\n            event.subject.fy = event.y;\n          }\n          \n          function dragEnded(event) {\n            if (!event.active) simulation.alphaTarget(0);\n            event.subject.fx = null;\n            event.subject.fy = null;\n          }\n          \n          return d3.drag()\n              .on(\"start\", dragStarted)\n              .on(\"drag\", dragged)\n              .on(\"end\", dragEnded);\n        }*/\n      console.log(simulation)\n      return svg.node();\n}\n/*generateNetworkWithCanvas(edges, nodes) { //Trying to optimize by using a canvas instead of svg, should improve performance of the full dataset quite a bit, but just testing atm. Not included in the prototype.\n      var w = 1000;\n      var h = 600;\n      var r = 5;\n\n      var htmlCanvas = d3\n        .select(\"#vis\")\n        .append(\"canvas\")\n        .attr(\"width\", w)\n        .attr(\"height\", h)\n        .style(\"background\", \"black\");\n      \n      var canvasToolbox = htmlCanvas.node().getContext('2d'); //Canvas toolbox, it is an object carrying all the properties and methods we need to draw on the canvas.\n      \n      //var div = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n      \n      var simulation = d3.forceSimulation(nodes)\n          .force(\"charge\", d3.forceManyBody().strength(-30))\n          .force(\"x\", d3.forceX(w / 2).strength(0.1))\n          .force(\"y\", d3.forceY(h / 2).strength(0.1))\n          .force(\"link\", d3.forceLink().id(function (d) {return d.employeeID;}).links(edges))\n          .force(\"center\", d3.forceCenter(w / 2, h / 2));\n      \n      var transform = d3.zoomIdentity;\n\n      initGraph(edges, nodes);\n\n      function initGraph(edges, nodes) {\n        \n        function zoomed(event) {\n          console.log(\"zooming\");\n          transform = event.transform;\n          ticked()\n        }\n        console.log(\"Hello\")\n        d3.select(htmlCanvas)\n            .call(d3.drag().subject(dragsubject).on(\"start\", dragStarted).on(\"drag\", dragged).on(\"end\",dragEnded))\n            .call(d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed));\n        \n        function dragsubject(event) {\n          var i,\n          x = transform.invertX(event.x),\n          y = transform.invertY(event.y),\n          dx,\n          dy;\n          for (i = nodes.length - 1; i >= 0; --i) {\n            var node = nodes[i];\n            dx = x - node.x;\n            dy = y - node.y;\n\n            if (dx * dx + dy * dy < r * r) {\n\n              node.x =  transform.applyX(node.x);\n              node.y = transform.applyY(node.y);\n\n              return node;\n            }\n          }\n        }\n        function dragStarted(event) {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            event.subject.fx = event.subject.x;\n            event.subject.fy = event.subject.y;\n          }\n          \n          function dragged(event) {\n            event.subject.fx = event.x;\n            event.subject.fy = event.y;\n          }\n          \n          function dragEnded(event) {\n            if (!event.active) simulation.alphaTarget(0);\n            event.subject.fx = null;\n            event.subject.fy = null;\n          }\n          simulation.nodes(nodes).on('tick', ticked);\n          simulation.force(\"link\").links(edges);\n          \n          function ticked() {\n          canvasToolbox.save();\n          canvasToolbox.clearRect(0, 0, w, h);\n          canvasToolbox.translate(transform.x, transform.y);\n          canvasToolbox.scale(transform.k, transform.k);\n\n          edges.forEach(function (d) {\n            canvasToolbox.beginPath();\n            canvasToolbox.moveTo(d.source.x, d.source.y);\n            canvasToolbox.lineTo(d.target.x, d.target.y);\n            canvasToolbox.stroke();\n          });\n          nodes.forEach(function (d) {\n            canvasToolbox.beginPath();\n            canvasToolbox.arc(d.x, d.y, r, 0, 2 * Math.PI, true);\n            canvasToolbox.fillStyle = d.col ? \"red\":\"black\"\n            canvasToolbox.fill();\n          });\n          canvasToolbox.restore();\n        }\n\n      }\n}*/\n}\n}\n\n\n</script>\n<style scoped>\n  ul{\n    list-style-type: none;\n  }\n  .edges line {\n      stroke: rgb(255, 255, 255);\n      stroke-opacity: 0.6;\n    }\n\n    .nodes circle {\n      stroke: rgb(255, 255, 255);\n      stroke-width: 1.5px;\n    }\n    .row {\n      display: flex;\n    }\n    .column {\n      flex: 50%;\n    }\n</style>"],"sourceRoot":""}]}