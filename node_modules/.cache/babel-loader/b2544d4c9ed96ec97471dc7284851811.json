{"remainingRequest":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\src\\visualisations\\nodelinkv2.0.js","dependencies":[{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\src\\visualisations\\nodelinkv2.0.js","mtime":1624988585985},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/20202482/Documents/GitHub/DBL-Project/src/visualisations/nodelinkv2.0.js"],"names":["d3","generateNetworkCanvas","edges","nodes","edgeWeights","selectedNode","side","document","getElementById","value","canvas","createElement","w","clientWidth","h","clientHeight","minWidth","maxWidth","logCoefficient","Math","log10","maxWeight","logCoefficient2","log2","width","height","boundDistance","min","boundDistanceSquared","pow","appendChild","ctx","getContext","strokeStyle","lineWidth","transform","zoomIdentity","simulation","forceSimulation","force","forceManyBody","strength","distanceMax","forceLink","id","d","employeeID","links","edge","console","log","weight","forceCenter","on","ticked","clearRect","translate","x","y","scale","k","neighbours","prepareEdges","node","constrainNode","fillStyle","indexOf","beginPath","drawNode","color","fill","stroke","drawSelectionInformation","distanceFromCenterSquared","distanceFromCenter","sqrt","selectionEdges","normalEdges","drawAllEdges","source","push","target","strokeColor","forEach","drawEdge","moveTo","lineTo","arc","PI","drawNodeInformation","popupX","popupY","popupSize","measureText","email","fillRect","strokeRect","fillText","name","jobTitle","scaleOrdinal","schemeCategory10","group","zooming","event","onClick","subject","dragNodes","dragSubject","find","dragStarted","active","alphaTarget","restart","fx","fy","dragged","dragEnded","drag","select","call"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;;AAIA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsCC,KAAtC,EAA6CC,WAA7C,EAA0DC,YAA1D,EAAwE;AACpE,MAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwBD,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAAhE,CAAX;AACA,MAAIC,MAAM,GAAGH,QAAQ,CAACI,aAAT,CAAuB,QAAvB,CAAb;AACA,MAAIC,CAAC,GAAGL,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCK,WAA9C;AACA,MAAIC,CAAC,GAAGP,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCO,YAAtC,GAAqD,GAA7D,CAJoE,CAKpE;;AAEA,MAAMC,QAAQ,GAAG,CAAjB,CAPoE,CAOa;;AACjF,MAAMC,QAAQ,GAAG,CAAjB,CARoE,CAQe;;AACnF,MAAMC,cAAc,GAAG,CAACD,QAAQ,GAAGD,QAAZ,IAAwBG,IAAI,CAACC,KAAL,CAAWhB,WAAW,CAACiB,SAAvB,CAA/C;AACA,MAAMC,eAAe,GAAG,CAAC,KAAKN,QAAN,IAAkBG,IAAI,CAACI,IAAL,CAAUnB,WAAW,CAACiB,SAAtB,CAA1C,CAVoE,CAUQ;;AAE5EX,EAAAA,MAAM,CAACc,KAAP,GAAeZ,CAAf;AACAF,EAAAA,MAAM,CAACe,MAAP,GAAgBX,CAAhB,CAboE,CAcpE;;AACA,MAAIY,aAAa,GAAGP,IAAI,CAACQ,GAAL,CAASf,CAAC,GAAG,CAAb,EAAgBE,CAAC,GAAG,CAApB,CAApB;AACA,MAAIc,oBAAoB,GAAGT,IAAI,CAACU,GAAL,CAASH,aAAT,EAAwB,CAAxB,CAA3B;AAEApB,EAAAA,IAAI,CAACwB,WAAL,CAAiBpB,MAAjB;AAEA,MAAIqB,GAAG,GAAGrB,MAAM,CAACsB,UAAP,CAAkB,IAAlB,CAAV;AACAD,EAAAA,GAAG,CAACE,WAAJ,GAAkB,KAAlB;AACAF,EAAAA,GAAG,CAACG,SAAJ,GAAgB,GAAhB;AAEA,MAAIC,SAAS,GAAGnC,EAAE,CAACoC,YAAnB;AAEA,MAAIC,UAAU,GAAGrC,EAAE,CAAC;AAAD,GACdsC,eADY,CACInC,KADJ,EAEZoC,KAFY,CAGT,QAHS,EAITvC,EAAE,CAACwC,aAAH,GACKC,QADL,CACc,CAAC,EADf,EAEKC,WAFL,CAEiB,GAFjB,CAJS,EAOZH,KAPY,CAQT,MARS,EASTvC,EAAE,CACG2C,SADL,GAEKC,EAFL,CAEQ,UAAUC,CAAV,EAAa;AACb,WAAOA,CAAC,CAACC,UAAT;AACH,GAJL,EAKKC,KALL,CAKW7C,KALX,EAMKuC,QANL,CAMc,UAAUO,IAAV,EAAgB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAO,CAAE7B,IAAI,CAACI,IAAL,CAAUyB,IAAI,CAACG,MAAf,IAAyB7B,eAA1B,GAA6CN,QAA9C,IAA0DZ,WAAW,CAACiB,SAA7E;AACH,GATL,CATS,EAoBZkB,KApBY,CAoBN,QApBM,EAoBIvC,EAAE,CAACoD,WAAH,CAAexC,CAAC,GAAG,CAAnB,EAAsBE,CAAC,GAAG,CAA1B,CApBJ,EAqBZuC,EArBY,CAqBT,MArBS,EAqBDC,MArBC,CAAjB;;AAuBA,WAASA,MAAT,GAAkB;AACdvB,IAAAA,GAAG,CAACwB,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB7C,MAAM,CAACc,KAA3B,EAAkCd,MAAM,CAACe,MAAzC;AACAM,IAAAA,GAAG,CAACyB,SAAJ,CAAcrB,SAAS,CAACsB,CAAxB,EAA2BtB,SAAS,CAACuB,CAArC;AACA3B,IAAAA,GAAG,CAAC4B,KAAJ,CAAUxB,SAAS,CAACyB,CAApB,EAAuBzB,SAAS,CAACyB,CAAjC;AAEA,QAAIC,UAAU,GAAGC,YAAY,CAAC5D,KAAD,CAA7B;;AALc,+CAOKC,KAPL;AAAA;;AAAA;AAOd,0DAA0B;AAAA,YAAf4D,IAAe;AACtBC,QAAAA,aAAa,CAACD,IAAD,CAAb,CADsB,CAEtB;;AACA,YAAIA,IAAI,CAACjB,UAAL,IAAmBzC,YAAY,CAAC,CAAD,CAAnC,EAAwC;AACpC0B,UAAAA,GAAG,CAACE,WAAJ,GAAkB,MAAlB;AACAF,UAAAA,GAAG,CAACkC,SAAJ,GAAgB,SAAhB;AACH,SAHD,MAGO,IAAIJ,UAAU,CAACK,OAAX,CAAmBH,IAAnB,KAA4B,CAAhC,EAAmC;AACtChC,UAAAA,GAAG,CAACE,WAAJ,GAAkB,MAAlB;AACAF,UAAAA,GAAG,CAACkC,SAAJ,GAAgB,SAAhB;AACH,SAHM,MAGA;AACHlC,UAAAA,GAAG,CAACE,WAAJ,GAAkB,MAAlB;AACAF,UAAAA,GAAG,CAACkC,SAAJ,GAAgB,MAAhB;AACH;;AACDlC,QAAAA,GAAG,CAACoC,SAAJ;AACApC,QAAAA,GAAG,CAACG,SAAJ,GAAc,CAAd;AACAkC,QAAAA,QAAQ,CAACL,IAAD,CAAR;AACAhC,QAAAA,GAAG,CAACkC,SAAJ,GAAgBI,KAAK,CAACN,IAAD,CAArB;AACAhC,QAAAA,GAAG,CAACuC,IAAJ;AACAvC,QAAAA,GAAG,CAACwC,MAAJ;AACH;AA1Ba;AAAA;AAAA;AAAA;AAAA;;AA2BdC,IAAAA,wBAAwB,CAACnE,YAAY,CAAC,CAAD,CAAb,CAAxB;AACH;;AAGD,WAAS2D,aAAT,CAAuBD,IAAvB,EAA6B;AACzB,QAAIU,yBAAyB,GAAGtD,IAAI,CAACU,GAAL,CAASkC,IAAI,CAACN,CAAL,GAAS7C,CAAC,GAAG,CAAtB,EAAyB,CAAzB,IAA8BO,IAAI,CAACU,GAAL,CAASkC,IAAI,CAACL,CAAL,GAAS5C,CAAC,GAAG,CAAtB,EAAyB,CAAzB,CAA9D;;AACA,QAAI2D,yBAAyB,GAAG7C,oBAAhC,EAAsD;AAClD,UAAI8C,kBAAkB,GAAGvD,IAAI,CAACwD,IAAL,CAAUF,yBAAV,CAAzB;AACAV,MAAAA,IAAI,CAACN,CAAL,GAAU,CAACM,IAAI,CAACN,CAAL,GAAS7C,CAAC,GAAG,CAAd,IAAmB8D,kBAApB,GAA0ChD,aAA1C,GAA0Dd,CAAC,GAAG,CAAvE;AACAmD,MAAAA,IAAI,CAACL,CAAL,GAAU,CAACK,IAAI,CAACL,CAAL,GAAS5C,CAAC,GAAG,CAAd,IAAmB4D,kBAApB,GAA0ChD,aAA1C,GAA0DZ,CAAC,GAAG,CAAvE;AACH,KANwB,CAOzB;AACA;;AACH;;AAED,WAASgD,YAAT,CAAsB5D,KAAtB,EAA6B;AACzB,QAAI0E,cAAc,GAAG,EAArB;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIhB,UAAU,GAAG,EAAjB;;AAEA,QAAIxD,YAAY,CAAC,CAAD,CAAZ,IAAmB,IAAvB,EAA6B;AACzByE,MAAAA,YAAY,CAAC5E,KAAD,EAAQ,MAAR,CAAZ;AACH,KAFD,MAEO;AAAA,kDACgBA,KADhB;AAAA;;AAAA;AACH,+DAA0B;AAAA,cAAf8C,IAAe;;AACtB,cAAIA,IAAI,CAAC+B,MAAL,CAAYjC,UAAZ,IAA0BzC,YAAY,CAAC,CAAD,CAA1C,EAA+C;AAC3CuE,YAAAA,cAAc,CAACI,IAAf,CAAoBhC,IAApB;AACAa,YAAAA,UAAU,CAACmB,IAAX,CAAgBhC,IAAI,CAACiC,MAArB;AACH,WAHD,MAGO,IAAIjC,IAAI,CAACiC,MAAL,CAAYnC,UAAZ,IAA0BzC,YAAY,CAAC,CAAD,CAA1C,EAA+C;AAClDuE,YAAAA,cAAc,CAACI,IAAf,CAAoBhC,IAApB;AACAa,YAAAA,UAAU,CAACmB,IAAX,CAAgBhC,IAAI,CAAC+B,MAArB;AACH,WAHM,MAGA;AACHF,YAAAA,WAAW,CAACG,IAAZ,CAAiBhC,IAAjB;AACH;AACJ;AAXE;AAAA;AAAA;AAAA;AAAA;;AAYH8B,MAAAA,YAAY,CAACD,WAAD,EAAc,MAAd,CAAZ;AAEAC,MAAAA,YAAY,CAACF,cAAD,EAAiB,SAAjB,CAAZ;AACH;;AAED,WAAOf,UAAP;AACH;;AAED,WAASiB,YAAT,CAAsB5E,KAAtB,EAA6BgF,WAA7B,EAA0C;AACtCnD,IAAAA,GAAG,CAACE,WAAJ,GAAkBiD,WAAlB;AACAhF,IAAAA,KAAK,CAACiF,OAAN,CAAcC,QAAd;AACH;;AAED,WAASA,QAAT,CAAkBvC,CAAlB,EAAqB;AACjBd,IAAAA,GAAG,CAACoC,SAAJ;AACApC,IAAAA,GAAG,CAACsD,MAAJ,CAAWxC,CAAC,CAACkC,MAAF,CAAStB,CAApB,EAAuBZ,CAAC,CAACkC,MAAF,CAASrB,CAAhC;AACA3B,IAAAA,GAAG,CAACuD,MAAJ,CAAWzC,CAAC,CAACoC,MAAF,CAASxB,CAApB,EAAuBZ,CAAC,CAACoC,MAAF,CAASvB,CAAhC;AACA3B,IAAAA,GAAG,CAACG,SAAJ,GAAef,IAAI,CAACC,KAAL,CAAWyB,CAAC,CAACM,MAAb,IAAuBjC,cAAxB,GAA0CF,QAAxD,CAJiB,CAKjB;;AACAe,IAAAA,GAAG,CAACwC,MAAJ,GANiB,CAOjB;AACA;AACH;;AAED,WAASH,QAAT,CAAkBvB,CAAlB,EAAqB;AACjB;AACAd,IAAAA,GAAG,CAACsD,MAAJ,CAAWxC,CAAC,CAACY,CAAb,EAAgBZ,CAAC,CAACa,CAAlB;AACA3B,IAAAA,GAAG,CAACwD,GAAJ,CAAQ1C,CAAC,CAACY,CAAV,EAAaZ,CAAC,CAACa,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,IAAIvC,IAAI,CAACqE,EAAjC,EAHiB,CAIjB;AACA;AACA;AACA;AACH;;AAED,WAAShB,wBAAT,CAAkC5B,EAAlC,EAAsC;AAAA,gDACfzC,KADe;AAAA;;AAAA;AAClC,6DAA0B;AAAA,YAAf4D,IAAe;;AACtB,YAAInB,EAAE,IAAImB,IAAI,CAACjB,UAAf,EAA2B;AACvB2C,UAAAA,mBAAmB,CAAC1B,IAAD,CAAnB;AACA;AACH;AACJ;AANiC;AAAA;AAAA;AAAA;AAAA;AAOrC;;AACD,WAAS0B,mBAAT,CAA6B5C,CAA7B,EAAgC;AAC5B,QAAIA,CAAC,IAAI,IAAT,EAAe;AACX,UAAI6C,MAAM,GAAG7C,CAAC,CAACY,CAAF,GAAM,EAAnB;AACA,UAAIkC,MAAM,GAAG9C,CAAC,CAACa,CAAF,GAAM,EAAnB;AACA,UAAIkC,SAAS,GAAG7D,GAAG,CAAC8D,WAAJ,CAAgBhD,CAAC,CAACiD,KAAlB,EAAyBtE,KAAzB,GAAiC,CAAjD;AACAO,MAAAA,GAAG,CAACkC,SAAJ,GAAgB,MAAhB;AACAlC,MAAAA,GAAG,CAACgE,QAAJ,CAAaL,MAAb,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwC,EAAxC;AAEA7D,MAAAA,GAAG,CAACE,WAAJ,GAAkB,MAAlB;AACAF,MAAAA,GAAG,CAACiE,UAAJ,CAAeN,MAAf,EAAuBC,MAAvB,EAA+BC,SAA/B,EAA0C,EAA1C;AACA7D,MAAAA,GAAG,CAACkC,SAAJ,GAAgB,MAAhB;AACAlC,MAAAA,GAAG,CAACkE,QAAJ,CAAapD,CAAC,CAACqD,IAAF,GAAS,KAAT,GAAiBrD,CAAC,CAACC,UAAhC,EAA4C4C,MAAM,GAAG,CAArD,EAAwDC,MAAM,GAAG,EAAjE;AACA5D,MAAAA,GAAG,CAACkE,QAAJ,CAAapD,CAAC,CAACsD,QAAf,EAAyBT,MAAM,GAAG,CAAlC,EAAqCC,MAAM,GAAG,EAA9C;AACA5D,MAAAA,GAAG,CAACkE,QAAJ,CAAapD,CAAC,CAACiD,KAAf,EAAsBJ,MAAM,GAAG,CAA/B,EAAkCC,MAAM,GAAG,EAA3C;AACH;AACJ;;AAED,WAAStB,KAAT,GAAiB;AACb,QAAIV,KAAK,GAAG3D,EAAE,CAACoG,YAAH,CAAgBpG,EAAE,CAACqG,gBAAnB,CAAZ;AACA,WAAO,UAAAxD,CAAC;AAAA,aAAIc,KAAK,CAACd,CAAC,CAACyD,KAAH,CAAT;AAAA,KAAR;AACH,GA5KmE,CA8KpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpBrE,IAAAA,SAAS,GAAGqE,KAAK,CAACrE,SAAlB;AACAmB,IAAAA,MAAM;AACT;;AAED,WAASmD,OAAT,CAAiBD,KAAjB,EAAwB;AACpBvD,IAAAA,OAAO,CAACC,GAAR,CAAYsD,KAAK,CAACE,OAAlB;AACArG,IAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBmG,KAAK,CAACE,OAAN,CAAc5D,UAAhC;AACH;;AAED,WAAS6D,SAAT,CAAmBtE,UAAnB,EAA+B;AAC3B,aAASuE,WAAT,CAAqBJ,KAArB,EAA4B;AACxB,aAAOnE,UAAU,CAACwE,IAAX,CAAgBL,KAAK,CAAC/C,CAAtB,EAAyB+C,KAAK,CAAC9C,CAA/B,CAAP;AACH,KAH0B,CAK3B;;;AACA,aAASoD,WAAT,CAAqBN,KAArB,EAA4B;AACxBC,MAAAA,OAAO,CAACD,KAAD,CAAP;AAEA,UAAI,CAACA,KAAK,CAACO,MAAX,EAAmB1E,UAAU,CAAC2E,WAAX,CAAuB,GAAvB,EAA4BC,OAA5B;AACnBT,MAAAA,KAAK,CAACE,OAAN,CAAcQ,EAAd,GAAmBV,KAAK,CAACE,OAAN,CAAcjD,CAAjC;AACA+C,MAAAA,KAAK,CAACE,OAAN,CAAcS,EAAd,GAAmBX,KAAK,CAACE,OAAN,CAAchD,CAAjC;AACH;;AAED,aAAS0D,OAAT,CAAiBZ,KAAjB,EAAwB;AACpBA,MAAAA,KAAK,CAACE,OAAN,CAAcQ,EAAd,GAAmBV,KAAK,CAAC/C,CAAzB;AACA+C,MAAAA,KAAK,CAACE,OAAN,CAAcS,EAAd,GAAmBX,KAAK,CAAC9C,CAAzB;AACH;;AAED,aAAS2D,SAAT,CAAmBb,KAAnB,EAA0B;AACtB,UAAI,CAACA,KAAK,CAACO,MAAX,EAAmB1E,UAAU,CAAC2E,WAAX,CAAuB,CAAvB;AACnBR,MAAAA,KAAK,CAACE,OAAN,CAAcQ,EAAd,GAAmB,IAAnB;AACAV,MAAAA,KAAK,CAACE,OAAN,CAAcS,EAAd,GAAmB,IAAnB;AACH;;AAED,WAAOnH,EAAE,CAACsH,IAAH,GACFZ,OADE,CACME,WADN,EAEFvD,EAFE,CAEC,OAFD,EAEUyD,WAFV,EAGFzD,EAHE,CAGC,MAHD,EAGS+D,OAHT,EAIF/D,EAJE,CAIC,KAJD,EAIQgE,SAJR,CAAP;AAKH;;AAEDpE,EAAAA,OAAO,CAACC,GAAR,CAAYqD,OAAZ,EAjOoE,CAmOpE;;AACA,SAAOvG,EAAE,CAACuH,MAAH,CAAUxF,GAAG,CAACrB,MAAd,EAAsB8G,IAAtB,CAA2Bb,SAAS,CAACtE,UAAD,CAApC,EAAkD0B,IAAlD,EAAP;AACH;;AAGD,eAAe9D,qBAAf","sourcesContent":["import * as d3 from \"d3\";\r\n\r\n\r\n\r\nfunction generateNetworkCanvas(edges, nodes, edgeWeights, selectedNode) {\r\n    var side = document.getElementById(document.getElementById(\"testSelectNL\").value);\r\n    var canvas = document.createElement('canvas');\r\n    var w = document.getElementById(\"viscontent\").clientWidth;\r\n    var h = document.getElementById(\"viscontent\").clientHeight - 130;\r\n    //var oldSelection = null;\r\n\r\n    const minWidth = 1;                                                              // width of an edge with weight 1\r\n    const maxWidth = 2;                                                                // width of largest edge\r\n    const logCoefficient = (maxWidth - minWidth) / Math.log10(edgeWeights.maxWeight); \r\n    const logCoefficient2 = (10 - minWidth) / Math.log2(edgeWeights.maxWeight); // coeficient that is used to calculate opacity\r\n\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n    // Creates a circle bound with diameter of the smallest of either the width or height of the window.\r\n    var boundDistance = Math.min(w / 2, h / 2);\r\n    var boundDistanceSquared = Math.pow(boundDistance, 2);\r\n\r\n    side.appendChild(canvas);\r\n\r\n    var ctx = canvas.getContext(\"2d\");\r\n    ctx.strokeStyle = \"red\"\r\n    ctx.lineWidth = 0.1;\r\n\r\n    var transform = d3.zoomIdentity;\r\n\r\n    var simulation = d3 //done\r\n        .forceSimulation(nodes)\r\n        .force(\r\n            \"charge\",\r\n            d3.forceManyBody()\r\n                .strength(-50)\r\n                .distanceMax(200))\r\n        .force(\r\n            \"link\",\r\n            d3\r\n                .forceLink()\r\n                .id(function (d) {\r\n                    return d.employeeID;\r\n                })\r\n                .links(edges)\r\n                .strength(function (edge) {\r\n                    console.log(edge)\r\n                    return ((Math.log2(edge.weight) * logCoefficient2) + minWidth) / edgeWeights.maxWeight;\r\n                })\r\n        )\r\n        .force(\"center\", d3.forceCenter(w / 2, h / 2))\r\n        .on(\"tick\", ticked);\r\n\r\n    function ticked() {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.translate(transform.x, transform.y);\r\n        ctx.scale(transform.k, transform.k);\r\n\r\n        var neighbours = prepareEdges(edges);\r\n\r\n        for (const node of nodes) {\r\n            constrainNode(node);\r\n            // Change selected node to stand out\r\n            if (node.employeeID == selectedNode[0]) {\r\n                ctx.strokeStyle = \"#000\";\r\n                ctx.fillStyle = \"#ff0000\";\r\n            } else if (neighbours.indexOf(node) >= 0) {\r\n                ctx.strokeStyle = \"#000\";\r\n                ctx.fillStyle = \"#00ff00\";\r\n            } else {\r\n                ctx.strokeStyle = \"#fff\";\r\n                ctx.fillStyle = \"#000\";\r\n            }\r\n            ctx.beginPath();\r\n            ctx.lineWidth=1;\r\n            drawNode(node)\r\n            ctx.fillStyle = color(node);\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        }\r\n        drawSelectionInformation(selectedNode[0]);\r\n    }\r\n\r\n\r\n    function constrainNode(node) {\r\n        var distanceFromCenterSquared = Math.pow(node.x - w / 2, 2) + Math.pow(node.y - h / 2, 2);\r\n        if (distanceFromCenterSquared > boundDistanceSquared) {\r\n            var distanceFromCenter = Math.sqrt(distanceFromCenterSquared);\r\n            node.x = ((node.x - w / 2) / distanceFromCenter) * boundDistance + w / 2;\r\n            node.y = ((node.y - h / 2) / distanceFromCenter) * boundDistance + h / 2;\r\n        }\r\n        //node.x = Math.min(w-6, Math.max(2, node.x));\r\n        //node.y = Math.min(h-130, Math.max(2, node.y));\r\n    }\r\n\r\n    function prepareEdges(edges) {\r\n        var selectionEdges = [];\r\n        var normalEdges = [];\r\n        var neighbours = [];\r\n\r\n        if (selectedNode[0] == null) {\r\n            drawAllEdges(edges, '#aaa');\r\n        } else {\r\n            for (const edge of edges) {\r\n                if (edge.source.employeeID == selectedNode[0]) {\r\n                    selectionEdges.push(edge);\r\n                    neighbours.push(edge.target);\r\n                } else if (edge.target.employeeID == selectedNode[0]) {\r\n                    selectionEdges.push(edge);\r\n                    neighbours.push(edge.source);\r\n                } else {\r\n                    normalEdges.push(edge);\r\n                }\r\n            }\r\n            drawAllEdges(normalEdges, '#aaa');\r\n\r\n            drawAllEdges(selectionEdges, '#f58a2c');\r\n        }\r\n\r\n        return neighbours;\r\n    }\r\n\r\n    function drawAllEdges(edges, strokeColor) {\r\n        ctx.strokeStyle = strokeColor;\r\n        edges.forEach(drawEdge);\r\n    }\r\n\r\n    function drawEdge(d) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(d.source.x, d.source.y);\r\n        ctx.lineTo(d.target.x, d.target.y);\r\n        ctx.lineWidth=(Math.log10(d.weight) * logCoefficient) + minWidth;\r\n        // ctx.lineWidth = d.weight / edgeWeights.maxWeight;\r\n        ctx.stroke();\r\n        //ctx.fillText(d.sentiment, ((d.source.x + d.target.x) / 2) + 10 , ((d.source.y + d.target.y) / 2) + 3);\r\n        //console.log(d.sentiment)\r\n    }\r\n\r\n    function drawNode(d) {\r\n        // ctx.beginPath();\r\n        ctx.moveTo(d.x, d.y);\r\n        ctx.arc(d.x, d.y, 3, 0, 2 * Math.PI);\r\n        // ctx.fillStyle = color(d);\r\n        // ctx.fill();\r\n        // ctx.stroke();\r\n        //ctx.fillText(\"ID: \" + d.employeeID, d.x+10, d.y+3);\r\n    }\r\n\r\n    function drawSelectionInformation(id) {\r\n        for (const node of nodes) {\r\n            if (id == node.employeeID) {\r\n                drawNodeInformation(node);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    function drawNodeInformation(d) {\r\n        if (d != null) {\r\n            var popupX = d.x + 10;\r\n            var popupY = d.y + 10;\r\n            var popupSize = ctx.measureText(d.email).width + 4;\r\n            ctx.fillStyle = \"#fff\";\r\n            ctx.fillRect(popupX, popupY, popupSize, 36);\r\n\r\n            ctx.strokeStyle = \"#000\"\r\n            ctx.strokeRect(popupX, popupY, popupSize, 36);\r\n            ctx.fillStyle = \"#000\";\r\n            ctx.fillText(d.name + \" | \" + d.employeeID, popupX + 2, popupY + 10);\r\n            ctx.fillText(d.jobTitle, popupX + 2, popupY + 20);\r\n            ctx.fillText(d.email, popupX + 2, popupY + 30);\r\n        }\r\n    }\r\n\r\n    function color() {\r\n        var scale = d3.scaleOrdinal(d3.schemeCategory10);\r\n        return d => scale(d.group);\r\n    }\r\n\r\n    // Update loop seperate from the tick function, thus not controlled by D3\r\n    // function heartBeat() {\r\n    //     if (simulation.alpha() < 0.01 && oldSelection != selectedNode[0]) {\r\n    //         console.log(\"Attempting wakeup\");\r\n    //         simulation.alpha(0.01).restart();\r\n    //         oldSelection = selectedNode[0];\r\n    //     }\r\n    // }\r\n\r\n    function zooming(event) {\r\n        transform = event.transform;\r\n        ticked();\r\n    }\r\n\r\n    function onClick(event) {\r\n        console.log(event.subject);\r\n        selectedNode[0] = event.subject.employeeID;\r\n    }\r\n\r\n    function dragNodes(simulation) {\r\n        function dragSubject(event) {\r\n            return simulation.find(event.x, event.y);\r\n        }\r\n\r\n        // Use dragStart event to hack in clickability in HTML canvas\r\n        function dragStarted(event) {\r\n            onClick(event);\r\n\r\n            if (!event.active) simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n        }\r\n\r\n        function dragged(event) {\r\n            event.subject.fx = event.x;\r\n            event.subject.fy = event.y;\r\n        }\r\n\r\n        function dragEnded(event) {\r\n            if (!event.active) simulation.alphaTarget(0);\r\n            event.subject.fx = null;\r\n            event.subject.fy = null;\r\n        }\r\n\r\n        return d3.drag()\r\n            .subject(dragSubject)\r\n            .on(\"start\", dragStarted)\r\n            .on(\"drag\", dragged)\r\n            .on(\"end\", dragEnded)\r\n    }\r\n\r\n    console.log(zooming);\r\n\r\n    //setInterval(function () { heartBeat(); }, 50); // Check for updates every 500 ms\r\n    return d3.select(ctx.canvas).call(dragNodes(simulation)).node();\r\n}\r\n\r\n\r\nexport default generateNetworkCanvas"]}]}