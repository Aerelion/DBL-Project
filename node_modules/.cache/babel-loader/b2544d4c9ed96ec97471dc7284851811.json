{"remainingRequest":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\src\\visualisations\\nodelinkv2.0.js","dependencies":[{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\src\\visualisations\\nodelinkv2.0.js","mtime":1624958403669},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzLzIwMjAyNDgyL0RvY3VtZW50cy9HaXRIdWIvREJMLVByb2plY3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5tYXRoLmxvZzEwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAqIGFzIGQzIGZyb20gImQzIjsKCmZ1bmN0aW9uIGdlbmVyYXRlTmV0d29ya0NhbnZhcyhlZGdlcywgbm9kZXMsIGVkZ2VXZWlnaHRzLCBzZWxlY3RlZE5vZGUpIHsKICB2YXIgc2lkZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0ZXN0U2VsZWN0TkwiKS52YWx1ZSk7CiAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpOwogIHZhciB3ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInZpc2NvbnRlbnQiKS5jbGllbnRXaWR0aDsKICB2YXIgaCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ2aXNjb250ZW50IikuY2xpZW50SGVpZ2h0IC0gMTMwOwogIHZhciBvbGRTZWxlY3Rpb24gPSBudWxsOwogIHZhciBtaW5XaWR0aCA9IDAuMDE7IC8vIHdpZHRoIG9mIGFuIGVkZ2Ugd2l0aCB3ZWlnaHQgMQoKICB2YXIgbWF4V2lkdGggPSAyOyAvLyB3aWR0aCBvZiBsYXJnZXN0IGVkZ2UKCiAgdmFyIGxvZ0NvZWZmaWNpZW50ID0gKG1heFdpZHRoIC0gbWluV2lkdGgpIC8gTWF0aC5sb2cxMChlZGdlV2VpZ2h0cy5tYXhXZWlnaHQpOyAvLyBjb2VmaWNpZW50IHRoYXQgaXMgdXNlZCB0byBjYWxjdWxhdGUgb3BhY2l0eQoKICBjYW52YXMud2lkdGggPSB3OwogIGNhbnZhcy5oZWlnaHQgPSBoOyAvLyBDcmVhdGVzIGEgY2lyY2xlIGJvdW5kIHdpdGggZGlhbWV0ZXIgb2YgdGhlIHNtYWxsZXN0IG9mIGVpdGhlciB0aGUgd2lkdGggb3IgaGVpZ2h0IG9mIHRoZSB3aW5kb3cuCgogIHZhciBib3VuZERpc3RhbmNlID0gTWF0aC5taW4odyAvIDIsIGggLyAyKTsKICB2YXIgYm91bmREaXN0YW5jZVNxdWFyZWQgPSBNYXRoLnBvdyhib3VuZERpc3RhbmNlLCAyKTsKICBzaWRlLmFwcGVuZENoaWxkKGNhbnZhcyk7CiAgdmFyIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCIyZCIpOwogIGN0eC5zdHJva2VTdHlsZSA9ICJyZWQiOwogIGN0eC5saW5lV2lkdGggPSAwLjE7CiAgdmFyIHRyYW5zZm9ybSA9IGQzLnpvb21JZGVudGl0eTsKICB2YXIgc2ltdWxhdGlvbiA9IGQzIC8vZG9uZQogIC5mb3JjZVNpbXVsYXRpb24obm9kZXMpLmZvcmNlKCJjaGFyZ2UiLCBkMy5mb3JjZU1hbnlCb2R5KCkuc3RyZW5ndGgoLTUwKS5kaXN0YW5jZU1heCgyMDApKS5mb3JjZSgibGluayIsIGQzLmZvcmNlTGluaygpLmlkKGZ1bmN0aW9uIChkKSB7CiAgICByZXR1cm4gZC5lbXBsb3llZUlEOwogIH0pLmxpbmtzKGVkZ2VzKSkuZm9yY2UoImNlbnRlciIsIGQzLmZvcmNlQ2VudGVyKHcgLyAyLCBoIC8gMikpLm9uKCJ0aWNrIiwgdGlja2VkKTsKCiAgZnVuY3Rpb24gdGlja2VkKCkgewogICAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpOwogICAgY3R4LnRyYW5zbGF0ZSh0cmFuc2Zvcm0ueCwgdHJhbnNmb3JtLnkpOwogICAgY3R4LnNjYWxlKHRyYW5zZm9ybS5rLCB0cmFuc2Zvcm0uayk7CiAgICB2YXIgbmVpZ2hib3VycyA9IGRyYXdFZGdlcyhlZGdlcyk7CgogICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKG5vZGVzKSwKICAgICAgICBfc3RlcDsKCiAgICB0cnkgewogICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgIHZhciBub2RlID0gX3N0ZXAudmFsdWU7CiAgICAgICAgY29uc3RyYWluTm9kZShub2RlKTsgLy8gQ2hhbmdlIHNlbGVjdGVkIG5vZGUgdG8gc3RhbmQgb3V0CgogICAgICAgIGlmIChub2RlLmVtcGxveWVlSUQgPT0gc2VsZWN0ZWROb2RlWzBdKSB7CiAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSAiIzAwMCI7CiAgICAgICAgICBjdHguZmlsbFN0eWxlID0gIiNmZjAwMDAiOwogICAgICAgIH0gZWxzZSBpZiAobmVpZ2hib3Vycy5pbmRleE9mKG5vZGUpID49IDApIHsKICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICIjMDAwIjsKICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSAiIzAwZmYwMCI7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICIjZmZmIjsKICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSAiIzAwMCI7CiAgICAgICAgfQoKICAgICAgICBjdHguYmVnaW5QYXRoKCk7CiAgICAgICAgZHJhd05vZGUobm9kZSk7CiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IGNvbG9yKG5vZGUpOwogICAgICAgIGN0eC5maWxsKCk7CiAgICAgICAgY3R4LnN0cm9rZSgpOwogICAgICB9CiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgIH0gZmluYWxseSB7CiAgICAgIF9pdGVyYXRvci5mKCk7CiAgICB9CgogICAgZHJhd1NlbGVjdGlvbkluZm9ybWF0aW9uKHNlbGVjdGVkTm9kZVswXSk7CiAgfQoKICBmdW5jdGlvbiBjb25zdHJhaW5Ob2RlKG5vZGUpIHsKICAgIHZhciBkaXN0YW5jZUZyb21DZW50ZXJTcXVhcmVkID0gTWF0aC5wb3cobm9kZS54IC0gdyAvIDIsIDIpICsgTWF0aC5wb3cobm9kZS55IC0gaCAvIDIsIDIpOwoKICAgIGlmIChkaXN0YW5jZUZyb21DZW50ZXJTcXVhcmVkID4gYm91bmREaXN0YW5jZVNxdWFyZWQpIHsKICAgICAgdmFyIGRpc3RhbmNlRnJvbUNlbnRlciA9IE1hdGguc3FydChkaXN0YW5jZUZyb21DZW50ZXJTcXVhcmVkKTsKICAgICAgbm9kZS54ID0gKG5vZGUueCAtIHcgLyAyKSAvIGRpc3RhbmNlRnJvbUNlbnRlciAqIGJvdW5kRGlzdGFuY2UgKyB3IC8gMjsKICAgICAgbm9kZS55ID0gKG5vZGUueSAtIGggLyAyKSAvIGRpc3RhbmNlRnJvbUNlbnRlciAqIGJvdW5kRGlzdGFuY2UgKyBoIC8gMjsKICAgIH0gLy9ub2RlLnggPSBNYXRoLm1pbih3LTYsIE1hdGgubWF4KDIsIG5vZGUueCkpOwogICAgLy9ub2RlLnkgPSBNYXRoLm1pbihoLTEzMCwgTWF0aC5tYXgoMiwgbm9kZS55KSk7CgogIH0KCiAgZnVuY3Rpb24gZHJhd0VkZ2VzKGVkZ2VzKSB7CiAgICB2YXIgc2VsZWN0aW9uRWRnZXMgPSBbXTsKICAgIHZhciBub3JtYWxFZGdlcyA9IFtdOwogICAgdmFyIG5laWdoYm91cnMgPSBbXTsKCiAgICBpZiAoc2VsZWN0ZWROb2RlWzBdID09IG51bGwpIHsKICAgICAgLy8gY3R4LmJlZ2luUGF0aCgpOwogICAgICBlZGdlcy5mb3JFYWNoKGRyYXdFZGdlKTsgLy8gY3R4LnN0cm9rZVN0eWxlID0gIiNhYWEiOwogICAgICAvLyBjdHguc3Ryb2tlKCk7CiAgICB9IGVsc2UgewogICAgICB2YXIgX2l0ZXJhdG9yMiA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGVkZ2VzKSwKICAgICAgICAgIF9zdGVwMjsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IyLnMoKTsgIShfc3RlcDIgPSBfaXRlcmF0b3IyLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBlZGdlID0gX3N0ZXAyLnZhbHVlOwoKICAgICAgICAgIGlmIChlZGdlLnNvdXJjZS5lbXBsb3llZUlEID09IHNlbGVjdGVkTm9kZVswXSkgewogICAgICAgICAgICBzZWxlY3Rpb25FZGdlcy5wdXNoKGVkZ2UpOwogICAgICAgICAgICBuZWlnaGJvdXJzLnB1c2goZWRnZS50YXJnZXQpOwogICAgICAgICAgfSBlbHNlIGlmIChlZGdlLnRhcmdldC5lbXBsb3llZUlEID09IHNlbGVjdGVkTm9kZVswXSkgewogICAgICAgICAgICBzZWxlY3Rpb25FZGdlcy5wdXNoKGVkZ2UpOwogICAgICAgICAgICBuZWlnaGJvdXJzLnB1c2goZWRnZS5zb3VyY2UpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbm9ybWFsRWRnZXMucHVzaChlZGdlKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvcjIuZigpOwogICAgICB9CgogICAgICBjdHguYmVnaW5QYXRoKCk7CiAgICAgIG5vcm1hbEVkZ2VzLmZvckVhY2goZHJhd0VkZ2UpOwogICAgICBjdHguc3Ryb2tlU3R5bGUgPSAiI2FhYSI7CiAgICAgIGN0eC5zdHJva2UoKTsKICAgICAgY3R4LmJlZ2luUGF0aCgpOwogICAgICBzZWxlY3Rpb25FZGdlcy5mb3JFYWNoKGRyYXdFZGdlKTsKICAgICAgY3R4LnN0cm9rZVN0eWxlID0gIiNmNThhMmMiOwogICAgICBjdHguc3Ryb2tlKCk7CiAgICB9CgogICAgcmV0dXJuIG5laWdoYm91cnM7CiAgfQoKICBmdW5jdGlvbiBkcmF3RWRnZShkKSB7CiAgICBjdHguYmVnaW5QYXRoKCk7CiAgICBjdHgubW92ZVRvKGQuc291cmNlLngsIGQuc291cmNlLnkpOwogICAgY3R4LmxpbmVUbyhkLnRhcmdldC54LCBkLnRhcmdldC55KTsKICAgIGN0eC5saW5lV2lkdGggPSBNYXRoLmxvZzEwKGQud2VpZ2h0KSAqIGxvZ0NvZWZmaWNpZW50ICsgbWluV2lkdGg7IC8vIGN0eC5saW5lV2lkdGggPSBkLndlaWdodCAvIGVkZ2VXZWlnaHRzLm1heFdlaWdodDsKCiAgICBjdHguc3Ryb2tlU3R5bGUgPSAiI2FhYSI7CiAgICBjdHguc3Ryb2tlKCk7IC8vY3R4LmZpbGxUZXh0KGQuc2VudGltZW50LCAoKGQuc291cmNlLnggKyBkLnRhcmdldC54KSAvIDIpICsgMTAgLCAoKGQuc291cmNlLnkgKyBkLnRhcmdldC55KSAvIDIpICsgMyk7CiAgICAvL2NvbnNvbGUubG9nKGQuc2VudGltZW50KQogIH0KCiAgZnVuY3Rpb24gZHJhd05vZGUoZCkgewogICAgLy8gY3R4LmJlZ2luUGF0aCgpOwogICAgY3R4Lm1vdmVUbyhkLngsIGQueSk7CiAgICBjdHguYXJjKGQueCwgZC55LCAzLCAwLCAyICogTWF0aC5QSSk7IC8vIGN0eC5maWxsU3R5bGUgPSBjb2xvcihkKTsKICAgIC8vIGN0eC5maWxsKCk7CiAgICAvLyBjdHguc3Ryb2tlKCk7CiAgICAvL2N0eC5maWxsVGV4dCgiSUQ6ICIgKyBkLmVtcGxveWVlSUQsIGQueCsxMCwgZC55KzMpOwogIH0KCiAgZnVuY3Rpb24gZHJhd1NlbGVjdGlvbkluZm9ybWF0aW9uKGlkKSB7CiAgICB2YXIgX2l0ZXJhdG9yMyA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKG5vZGVzKSwKICAgICAgICBfc3RlcDM7CgogICAgdHJ5IHsKICAgICAgZm9yIChfaXRlcmF0b3IzLnMoKTsgIShfc3RlcDMgPSBfaXRlcmF0b3IzLm4oKSkuZG9uZTspIHsKICAgICAgICB2YXIgbm9kZSA9IF9zdGVwMy52YWx1ZTsKCiAgICAgICAgaWYgKGlkID09IG5vZGUuZW1wbG95ZWVJRCkgewogICAgICAgICAgZHJhd05vZGVJbmZvcm1hdGlvbihub2RlKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgfQogICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgIF9pdGVyYXRvcjMuZShlcnIpOwogICAgfSBmaW5hbGx5IHsKICAgICAgX2l0ZXJhdG9yMy5mKCk7CiAgICB9CiAgfQoKICBmdW5jdGlvbiBkcmF3Tm9kZUluZm9ybWF0aW9uKGQpIHsKICAgIGlmIChkICE9IG51bGwpIHsKICAgICAgdmFyIHBvcHVwWCA9IGQueCArIDEwOwogICAgICB2YXIgcG9wdXBZID0gZC55ICsgMTA7CiAgICAgIHZhciBwb3B1cFNpemUgPSBjdHgubWVhc3VyZVRleHQoZC5lbWFpbCkud2lkdGggKyA0OwogICAgICBjdHguZmlsbFN0eWxlID0gIiNmZmYiOwogICAgICBjdHguZmlsbFJlY3QocG9wdXBYLCBwb3B1cFksIHBvcHVwU2l6ZSwgMzYpOwogICAgICBjdHguc3Ryb2tlU3R5bGUgPSAiIzAwMCI7CiAgICAgIGN0eC5zdHJva2VSZWN0KHBvcHVwWCwgcG9wdXBZLCBwb3B1cFNpemUsIDM2KTsKICAgICAgY3R4LmZpbGxTdHlsZSA9ICIjMDAwIjsKICAgICAgY3R4LmZpbGxUZXh0KGQubmFtZSArICIgfCAiICsgZC5lbXBsb3llZUlELCBwb3B1cFggKyAyLCBwb3B1cFkgKyAxMCk7CiAgICAgIGN0eC5maWxsVGV4dChkLmpvYlRpdGxlLCBwb3B1cFggKyAyLCBwb3B1cFkgKyAyMCk7CiAgICAgIGN0eC5maWxsVGV4dChkLmVtYWlsLCBwb3B1cFggKyAyLCBwb3B1cFkgKyAzMCk7CiAgICB9CiAgfQoKICBmdW5jdGlvbiBjb2xvcigpIHsKICAgIHZhciBzY2FsZSA9IGQzLnNjYWxlT3JkaW5hbChkMy5zY2hlbWVDYXRlZ29yeTEwKTsKICAgIHJldHVybiBmdW5jdGlvbiAoZCkgewogICAgICByZXR1cm4gc2NhbGUoZC5ncm91cCk7CiAgICB9OwogIH0gLy8gVXBkYXRlIGxvb3Agc2VwZXJhdGUgZnJvbSB0aGUgdGljayBmdW5jdGlvbiwgdGh1cyBub3QgY29udHJvbGxlZCBieSBEMwoKCiAgZnVuY3Rpb24gaGVhcnRCZWF0KCkgewogICAgaWYgKHNpbXVsYXRpb24uYWxwaGEoKSA8IDAuMDEgJiYgb2xkU2VsZWN0aW9uICE9IHNlbGVjdGVkTm9kZVswXSkgewogICAgICBjb25zb2xlLmxvZygiQXR0ZW1wdGluZyB3YWtldXAiKTsKICAgICAgc2ltdWxhdGlvbi5hbHBoYSgwLjAxKS5yZXN0YXJ0KCk7CiAgICAgIG9sZFNlbGVjdGlvbiA9IHNlbGVjdGVkTm9kZVswXTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIHpvb21pbmcoZXZlbnQpIHsKICAgIHRyYW5zZm9ybSA9IGV2ZW50LnRyYW5zZm9ybTsKICAgIHRpY2tlZCgpOwogIH0KCiAgZnVuY3Rpb24gb25DbGljayhldmVudCkgewogICAgY29uc29sZS5sb2coZXZlbnQuc3ViamVjdCk7CiAgICBzZWxlY3RlZE5vZGVbMF0gPSBldmVudC5zdWJqZWN0LmVtcGxveWVlSUQ7CiAgfQoKICBmdW5jdGlvbiBkcmFnTm9kZXMoc2ltdWxhdGlvbikgewogICAgZnVuY3Rpb24gZHJhZ1N1YmplY3QoZXZlbnQpIHsKICAgICAgcmV0dXJuIHNpbXVsYXRpb24uZmluZChldmVudC54LCBldmVudC55KTsKICAgIH0gLy8gVXNlIGRyYWdTdGFydCBldmVudCB0byBoYWNrIGluIGNsaWNrYWJpbGl0eSBpbiBIVE1MIGNhbnZhcwoKCiAgICBmdW5jdGlvbiBkcmFnU3RhcnRlZChldmVudCkgewogICAgICBvbkNsaWNrKGV2ZW50KTsKICAgICAgaWYgKCFldmVudC5hY3RpdmUpIHNpbXVsYXRpb24uYWxwaGFUYXJnZXQoMC4zKS5yZXN0YXJ0KCk7CiAgICAgIGV2ZW50LnN1YmplY3QuZnggPSBldmVudC5zdWJqZWN0Lng7CiAgICAgIGV2ZW50LnN1YmplY3QuZnkgPSBldmVudC5zdWJqZWN0Lnk7CiAgICB9CgogICAgZnVuY3Rpb24gZHJhZ2dlZChldmVudCkgewogICAgICBldmVudC5zdWJqZWN0LmZ4ID0gZXZlbnQueDsKICAgICAgZXZlbnQuc3ViamVjdC5meSA9IGV2ZW50Lnk7CiAgICB9CgogICAgZnVuY3Rpb24gZHJhZ0VuZGVkKGV2ZW50KSB7CiAgICAgIGlmICghZXZlbnQuYWN0aXZlKSBzaW11bGF0aW9uLmFscGhhVGFyZ2V0KDApOwogICAgICBldmVudC5zdWJqZWN0LmZ4ID0gbnVsbDsKICAgICAgZXZlbnQuc3ViamVjdC5meSA9IG51bGw7CiAgICB9CgogICAgcmV0dXJuIGQzLmRyYWcoKS5zdWJqZWN0KGRyYWdTdWJqZWN0KS5vbigic3RhcnQiLCBkcmFnU3RhcnRlZCkub24oImRyYWciLCBkcmFnZ2VkKS5vbigiZW5kIiwgZHJhZ0VuZGVkKTsKICB9CgogIGNvbnNvbGUubG9nKHpvb21pbmcpOwogIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgIGhlYXJ0QmVhdCgpOwogIH0sIDUwKTsgLy8gQ2hlY2sgZm9yIHVwZGF0ZXMgZXZlcnkgNTAwIG1zCgogIHJldHVybiBkMy5zZWxlY3QoY3R4LmNhbnZhcykuY2FsbChkcmFnTm9kZXMoc2ltdWxhdGlvbikpLm5vZGUoKTsKfQoKZXhwb3J0IGRlZmF1bHQgZ2VuZXJhdGVOZXR3b3JrQ2FudmFzOw=="},{"version":3,"sources":["C:/Users/20202482/Documents/GitHub/DBL-Project/src/visualisations/nodelinkv2.0.js"],"names":["d3","generateNetworkCanvas","edges","nodes","edgeWeights","selectedNode","side","document","getElementById","value","canvas","createElement","w","clientWidth","h","clientHeight","oldSelection","minWidth","maxWidth","logCoefficient","Math","log10","maxWeight","width","height","boundDistance","min","boundDistanceSquared","pow","appendChild","ctx","getContext","strokeStyle","lineWidth","transform","zoomIdentity","simulation","forceSimulation","force","forceManyBody","strength","distanceMax","forceLink","id","d","employeeID","links","forceCenter","on","ticked","clearRect","translate","x","y","scale","k","neighbours","drawEdges","node","constrainNode","fillStyle","indexOf","beginPath","drawNode","color","fill","stroke","drawSelectionInformation","distanceFromCenterSquared","distanceFromCenter","sqrt","selectionEdges","normalEdges","forEach","drawEdge","edge","source","push","target","moveTo","lineTo","weight","arc","PI","drawNodeInformation","popupX","popupY","popupSize","measureText","email","fillRect","strokeRect","fillText","name","jobTitle","scaleOrdinal","schemeCategory10","group","heartBeat","alpha","console","log","restart","zooming","event","onClick","subject","dragNodes","dragSubject","find","dragStarted","active","alphaTarget","fx","fy","dragged","dragEnded","drag","setInterval","select","call"],"mappings":";;;;;;AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;;AAIA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsCC,KAAtC,EAA6CC,WAA7C,EAA0DC,YAA1D,EAAwE;AACpE,MAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwBD,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAAhE,CAAX;AACA,MAAIC,MAAM,GAAGH,QAAQ,CAACI,aAAT,CAAuB,QAAvB,CAAb;AACA,MAAIC,CAAC,GAAGL,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCK,WAA9C;AACA,MAAIC,CAAC,GAAGP,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCO,YAAtC,GAAqD,GAA7D;AACA,MAAIC,YAAY,GAAG,IAAnB;AAEA,MAAMC,QAAQ,GAAG,IAAjB,CAPoE,CAOgB;;AACpF,MAAMC,QAAQ,GAAG,CAAjB,CARoE,CAQe;;AACnF,MAAMC,cAAc,GAAG,CAACD,QAAQ,GAAGD,QAAZ,IAAwBG,IAAI,CAACC,KAAL,CAAWjB,WAAW,CAACkB,SAAvB,CAA/C,CAToE,CASe;;AAEnFZ,EAAAA,MAAM,CAACa,KAAP,GAAeX,CAAf;AACAF,EAAAA,MAAM,CAACc,MAAP,GAAgBV,CAAhB,CAZoE,CAapE;;AACA,MAAIW,aAAa,GAAGL,IAAI,CAACM,GAAL,CAASd,CAAC,GAAG,CAAb,EAAgBE,CAAC,GAAG,CAApB,CAApB;AACA,MAAIa,oBAAoB,GAAGP,IAAI,CAACQ,GAAL,CAASH,aAAT,EAAwB,CAAxB,CAA3B;AAEAnB,EAAAA,IAAI,CAACuB,WAAL,CAAiBnB,MAAjB;AAEA,MAAIoB,GAAG,GAAGpB,MAAM,CAACqB,UAAP,CAAkB,IAAlB,CAAV;AACAD,EAAAA,GAAG,CAACE,WAAJ,GAAkB,KAAlB;AACAF,EAAAA,GAAG,CAACG,SAAJ,GAAgB,GAAhB;AAEA,MAAIC,SAAS,GAAGlC,EAAE,CAACmC,YAAnB;AAEA,MAAIC,UAAU,GAAGpC,EAAE,CAAC;AAAD,GACdqC,eADY,CACIlC,KADJ,EAEZmC,KAFY,CAGT,QAHS,EAITtC,EAAE,CAACuC,aAAH,GACKC,QADL,CACc,CAAC,EADf,EAEKC,WAFL,CAEiB,GAFjB,CAJS,EAOZH,KAPY,CAQT,MARS,EASTtC,EAAE,CACG0C,SADL,GAEKC,EAFL,CAEQ,UAAUC,CAAV,EAAa;AACb,WAAOA,CAAC,CAACC,UAAT;AACH,GAJL,EAKKC,KALL,CAKW5C,KALX,CATS,EAgBZoC,KAhBY,CAgBN,QAhBM,EAgBItC,EAAE,CAAC+C,WAAH,CAAenC,CAAC,GAAG,CAAnB,EAAsBE,CAAC,GAAG,CAA1B,CAhBJ,EAiBZkC,EAjBY,CAiBT,MAjBS,EAiBDC,MAjBC,CAAjB;;AAmBA,WAASA,MAAT,GAAkB;AACdnB,IAAAA,GAAG,CAACoB,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBxC,MAAM,CAACa,KAA3B,EAAkCb,MAAM,CAACc,MAAzC;AACAM,IAAAA,GAAG,CAACqB,SAAJ,CAAcjB,SAAS,CAACkB,CAAxB,EAA2BlB,SAAS,CAACmB,CAArC;AACAvB,IAAAA,GAAG,CAACwB,KAAJ,CAAUpB,SAAS,CAACqB,CAApB,EAAuBrB,SAAS,CAACqB,CAAjC;AAEA,QAAIC,UAAU,GAAGC,SAAS,CAACvD,KAAD,CAA1B;;AALc,+CAOKC,KAPL;AAAA;;AAAA;AAOd,0DAA0B;AAAA,YAAfuD,IAAe;AACtBC,QAAAA,aAAa,CAACD,IAAD,CAAb,CADsB,CAEtB;;AACA,YAAIA,IAAI,CAACb,UAAL,IAAmBxC,YAAY,CAAC,CAAD,CAAnC,EAAwC;AACpCyB,UAAAA,GAAG,CAACE,WAAJ,GAAkB,MAAlB;AACAF,UAAAA,GAAG,CAAC8B,SAAJ,GAAgB,SAAhB;AACH,SAHD,MAGO,IAAIJ,UAAU,CAACK,OAAX,CAAmBH,IAAnB,KAA4B,CAAhC,EAAmC;AACtC5B,UAAAA,GAAG,CAACE,WAAJ,GAAkB,MAAlB;AACAF,UAAAA,GAAG,CAAC8B,SAAJ,GAAgB,SAAhB;AACH,SAHM,MAGA;AACH9B,UAAAA,GAAG,CAACE,WAAJ,GAAkB,MAAlB;AACAF,UAAAA,GAAG,CAAC8B,SAAJ,GAAgB,MAAhB;AACH;;AACD9B,QAAAA,GAAG,CAACgC,SAAJ;AACAC,QAAAA,QAAQ,CAACL,IAAD,CAAR;AACA5B,QAAAA,GAAG,CAAC8B,SAAJ,GAAgBI,KAAK,CAACN,IAAD,CAArB;AACA5B,QAAAA,GAAG,CAACmC,IAAJ;AACAnC,QAAAA,GAAG,CAACoC,MAAJ;AACH;AAzBa;AAAA;AAAA;AAAA;AAAA;;AA0BdC,IAAAA,wBAAwB,CAAC9D,YAAY,CAAC,CAAD,CAAb,CAAxB;AACH;;AAGD,WAASsD,aAAT,CAAuBD,IAAvB,EAA6B;AACzB,QAAIU,yBAAyB,GAAGhD,IAAI,CAACQ,GAAL,CAAS8B,IAAI,CAACN,CAAL,GAASxC,CAAC,GAAG,CAAtB,EAAyB,CAAzB,IAA8BQ,IAAI,CAACQ,GAAL,CAAS8B,IAAI,CAACL,CAAL,GAASvC,CAAC,GAAG,CAAtB,EAAyB,CAAzB,CAA9D;;AACA,QAAIsD,yBAAyB,GAAGzC,oBAAhC,EAAsD;AAClD,UAAI0C,kBAAkB,GAAGjD,IAAI,CAACkD,IAAL,CAAUF,yBAAV,CAAzB;AACAV,MAAAA,IAAI,CAACN,CAAL,GAAU,CAACM,IAAI,CAACN,CAAL,GAASxC,CAAC,GAAG,CAAd,IAAmByD,kBAApB,GAA0C5C,aAA1C,GAA0Db,CAAC,GAAG,CAAvE;AACA8C,MAAAA,IAAI,CAACL,CAAL,GAAU,CAACK,IAAI,CAACL,CAAL,GAASvC,CAAC,GAAG,CAAd,IAAmBuD,kBAApB,GAA0C5C,aAA1C,GAA0DX,CAAC,GAAG,CAAvE;AACH,KANwB,CAOzB;AACA;;AACH;;AAED,WAAS2C,SAAT,CAAmBvD,KAAnB,EAA0B;AACtB,QAAIqE,cAAc,GAAG,EAArB;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIhB,UAAU,GAAG,EAAjB;;AACA,QAAInD,YAAY,CAAC,CAAD,CAAZ,IAAmB,IAAvB,EAA6B;AACzB;AACAH,MAAAA,KAAK,CAACuE,OAAN,CAAcC,QAAd,EAFyB,CAGzB;AACA;AACH,KALD,MAKO;AAAA,kDACgBxE,KADhB;AAAA;;AAAA;AACH,+DAA0B;AAAA,cAAfyE,IAAe;;AACtB,cAAIA,IAAI,CAACC,MAAL,CAAY/B,UAAZ,IAA0BxC,YAAY,CAAC,CAAD,CAA1C,EAA+C;AAC3CkE,YAAAA,cAAc,CAACM,IAAf,CAAoBF,IAApB;AACAnB,YAAAA,UAAU,CAACqB,IAAX,CAAgBF,IAAI,CAACG,MAArB;AACH,WAHD,MAGO,IAAIH,IAAI,CAACG,MAAL,CAAYjC,UAAZ,IAA0BxC,YAAY,CAAC,CAAD,CAA1C,EAA+C;AAClDkE,YAAAA,cAAc,CAACM,IAAf,CAAoBF,IAApB;AACAnB,YAAAA,UAAU,CAACqB,IAAX,CAAgBF,IAAI,CAACC,MAArB;AACH,WAHM,MAGA;AACHJ,YAAAA,WAAW,CAACK,IAAZ,CAAiBF,IAAjB;AACH;AACJ;AAXE;AAAA;AAAA;AAAA;AAAA;;AAYH7C,MAAAA,GAAG,CAACgC,SAAJ;AACAU,MAAAA,WAAW,CAACC,OAAZ,CAAoBC,QAApB;AACA5C,MAAAA,GAAG,CAACE,WAAJ,GAAkB,MAAlB;AACAF,MAAAA,GAAG,CAACoC,MAAJ;AAEApC,MAAAA,GAAG,CAACgC,SAAJ;AACAS,MAAAA,cAAc,CAACE,OAAf,CAAuBC,QAAvB;AACA5C,MAAAA,GAAG,CAACE,WAAJ,GAAkB,SAAlB;AACAF,MAAAA,GAAG,CAACoC,MAAJ;AACH;;AAED,WAAOV,UAAP;AACH;;AAED,WAASkB,QAAT,CAAkB9B,CAAlB,EAAqB;AACjBd,IAAAA,GAAG,CAACgC,SAAJ;AACAhC,IAAAA,GAAG,CAACiD,MAAJ,CAAWnC,CAAC,CAACgC,MAAF,CAASxB,CAApB,EAAuBR,CAAC,CAACgC,MAAF,CAASvB,CAAhC;AACAvB,IAAAA,GAAG,CAACkD,MAAJ,CAAWpC,CAAC,CAACkC,MAAF,CAAS1B,CAApB,EAAuBR,CAAC,CAACkC,MAAF,CAASzB,CAAhC;AACAvB,IAAAA,GAAG,CAACG,SAAJ,GAAeb,IAAI,CAACC,KAAL,CAAWuB,CAAC,CAACqC,MAAb,IAAuB9D,cAAxB,GAA0CF,QAAxD,CAJiB,CAKjB;;AACAa,IAAAA,GAAG,CAACE,WAAJ,GAAkB,MAAlB;AACAF,IAAAA,GAAG,CAACoC,MAAJ,GAPiB,CAQjB;AACA;AACH;;AAED,WAASH,QAAT,CAAkBnB,CAAlB,EAAqB;AACjB;AACAd,IAAAA,GAAG,CAACiD,MAAJ,CAAWnC,CAAC,CAACQ,CAAb,EAAgBR,CAAC,CAACS,CAAlB;AACAvB,IAAAA,GAAG,CAACoD,GAAJ,CAAQtC,CAAC,CAACQ,CAAV,EAAaR,CAAC,CAACS,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,IAAIjC,IAAI,CAAC+D,EAAjC,EAHiB,CAIjB;AACA;AACA;AACA;AACH;;AAED,WAAShB,wBAAT,CAAkCxB,EAAlC,EAAsC;AAAA,gDACfxC,KADe;AAAA;;AAAA;AAClC,6DAA0B;AAAA,YAAfuD,IAAe;;AACtB,YAAIf,EAAE,IAAIe,IAAI,CAACb,UAAf,EAA2B;AACvBuC,UAAAA,mBAAmB,CAAC1B,IAAD,CAAnB;AACA;AACH;AACJ;AANiC;AAAA;AAAA;AAAA;AAAA;AAOrC;;AACD,WAAS0B,mBAAT,CAA6BxC,CAA7B,EAAgC;AAC5B,QAAIA,CAAC,IAAI,IAAT,EAAe;AACX,UAAIyC,MAAM,GAAGzC,CAAC,CAACQ,CAAF,GAAM,EAAnB;AACA,UAAIkC,MAAM,GAAG1C,CAAC,CAACS,CAAF,GAAM,EAAnB;AACA,UAAIkC,SAAS,GAAGzD,GAAG,CAAC0D,WAAJ,CAAgB5C,CAAC,CAAC6C,KAAlB,EAAyBlE,KAAzB,GAAiC,CAAjD;AACAO,MAAAA,GAAG,CAAC8B,SAAJ,GAAgB,MAAhB;AACA9B,MAAAA,GAAG,CAAC4D,QAAJ,CAAaL,MAAb,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwC,EAAxC;AAEAzD,MAAAA,GAAG,CAACE,WAAJ,GAAkB,MAAlB;AACAF,MAAAA,GAAG,CAAC6D,UAAJ,CAAeN,MAAf,EAAuBC,MAAvB,EAA+BC,SAA/B,EAA0C,EAA1C;AACAzD,MAAAA,GAAG,CAAC8B,SAAJ,GAAgB,MAAhB;AACA9B,MAAAA,GAAG,CAAC8D,QAAJ,CAAahD,CAAC,CAACiD,IAAF,GAAS,KAAT,GAAiBjD,CAAC,CAACC,UAAhC,EAA4CwC,MAAM,GAAG,CAArD,EAAwDC,MAAM,GAAG,EAAjE;AACAxD,MAAAA,GAAG,CAAC8D,QAAJ,CAAahD,CAAC,CAACkD,QAAf,EAAyBT,MAAM,GAAG,CAAlC,EAAqCC,MAAM,GAAG,EAA9C;AACAxD,MAAAA,GAAG,CAAC8D,QAAJ,CAAahD,CAAC,CAAC6C,KAAf,EAAsBJ,MAAM,GAAG,CAA/B,EAAkCC,MAAM,GAAG,EAA3C;AACH;AACJ;;AAED,WAAStB,KAAT,GAAiB;AACb,QAAIV,KAAK,GAAGtD,EAAE,CAAC+F,YAAH,CAAgB/F,EAAE,CAACgG,gBAAnB,CAAZ;AACA,WAAO,UAAApD,CAAC;AAAA,aAAIU,KAAK,CAACV,CAAC,CAACqD,KAAH,CAAT;AAAA,KAAR;AACH,GA1KmE,CA4KpE;;;AACA,WAASC,SAAT,GAAqB;AACjB,QAAI9D,UAAU,CAAC+D,KAAX,KAAqB,IAArB,IAA6BnF,YAAY,IAAIX,YAAY,CAAC,CAAD,CAA7D,EAAkE;AAC9D+F,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAjE,MAAAA,UAAU,CAAC+D,KAAX,CAAiB,IAAjB,EAAuBG,OAAvB;AACAtF,MAAAA,YAAY,GAAGX,YAAY,CAAC,CAAD,CAA3B;AACH;AACJ;;AAED,WAASkG,OAAT,CAAiBC,KAAjB,EAAwB;AACpBtE,IAAAA,SAAS,GAAGsE,KAAK,CAACtE,SAAlB;AACAe,IAAAA,MAAM;AACT;;AAED,WAASwD,OAAT,CAAiBD,KAAjB,EAAwB;AACpBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACE,OAAlB;AACArG,IAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBmG,KAAK,CAACE,OAAN,CAAc7D,UAAhC;AACH;;AAED,WAAS8D,SAAT,CAAmBvE,UAAnB,EAA+B;AAC3B,aAASwE,WAAT,CAAqBJ,KAArB,EAA4B;AACxB,aAAOpE,UAAU,CAACyE,IAAX,CAAgBL,KAAK,CAACpD,CAAtB,EAAyBoD,KAAK,CAACnD,CAA/B,CAAP;AACH,KAH0B,CAK3B;;;AACA,aAASyD,WAAT,CAAqBN,KAArB,EAA4B;AACxBC,MAAAA,OAAO,CAACD,KAAD,CAAP;AAEA,UAAI,CAACA,KAAK,CAACO,MAAX,EAAmB3E,UAAU,CAAC4E,WAAX,CAAuB,GAAvB,EAA4BV,OAA5B;AACnBE,MAAAA,KAAK,CAACE,OAAN,CAAcO,EAAd,GAAmBT,KAAK,CAACE,OAAN,CAActD,CAAjC;AACAoD,MAAAA,KAAK,CAACE,OAAN,CAAcQ,EAAd,GAAmBV,KAAK,CAACE,OAAN,CAAcrD,CAAjC;AACH;;AAED,aAAS8D,OAAT,CAAiBX,KAAjB,EAAwB;AACpBA,MAAAA,KAAK,CAACE,OAAN,CAAcO,EAAd,GAAmBT,KAAK,CAACpD,CAAzB;AACAoD,MAAAA,KAAK,CAACE,OAAN,CAAcQ,EAAd,GAAmBV,KAAK,CAACnD,CAAzB;AACH;;AAED,aAAS+D,SAAT,CAAmBZ,KAAnB,EAA0B;AACtB,UAAI,CAACA,KAAK,CAACO,MAAX,EAAmB3E,UAAU,CAAC4E,WAAX,CAAuB,CAAvB;AACnBR,MAAAA,KAAK,CAACE,OAAN,CAAcO,EAAd,GAAmB,IAAnB;AACAT,MAAAA,KAAK,CAACE,OAAN,CAAcQ,EAAd,GAAmB,IAAnB;AACH;;AAED,WAAOlH,EAAE,CAACqH,IAAH,GACFX,OADE,CACME,WADN,EAEF5D,EAFE,CAEC,OAFD,EAEU8D,WAFV,EAGF9D,EAHE,CAGC,MAHD,EAGSmE,OAHT,EAIFnE,EAJE,CAIC,KAJD,EAIQoE,SAJR,CAAP;AAKH;;AAEDhB,EAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AAEAe,EAAAA,WAAW,CAAC,YAAY;AAAEpB,IAAAA,SAAS;AAAK,GAA7B,EAA+B,EAA/B,CAAX,CAjOoE,CAiOrB;;AAC/C,SAAOlG,EAAE,CAACuH,MAAH,CAAUzF,GAAG,CAACpB,MAAd,EAAsB8G,IAAtB,CAA2Bb,SAAS,CAACvE,UAAD,CAApC,EAAkDsB,IAAlD,EAAP;AACH;;AAGD,eAAezD,qBAAf","sourcesContent":["import * as d3 from \"d3\";\r\n\r\n\r\n\r\nfunction generateNetworkCanvas(edges, nodes, edgeWeights, selectedNode) {\r\n    var side = document.getElementById(document.getElementById(\"testSelectNL\").value);\r\n    var canvas = document.createElement('canvas');\r\n    var w = document.getElementById(\"viscontent\").clientWidth;\r\n    var h = document.getElementById(\"viscontent\").clientHeight - 130;\r\n    var oldSelection = null;\r\n\r\n    const minWidth = 0.01;                                                              // width of an edge with weight 1\r\n    const maxWidth = 2;                                                                // width of largest edge\r\n    const logCoefficient = (maxWidth - minWidth) / Math.log10(edgeWeights.maxWeight);  // coeficient that is used to calculate opacity\r\n\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n    // Creates a circle bound with diameter of the smallest of either the width or height of the window.\r\n    var boundDistance = Math.min(w / 2, h / 2);\r\n    var boundDistanceSquared = Math.pow(boundDistance, 2);\r\n\r\n    side.appendChild(canvas);\r\n\r\n    var ctx = canvas.getContext(\"2d\");\r\n    ctx.strokeStyle = \"red\"\r\n    ctx.lineWidth = 0.1;\r\n\r\n    var transform = d3.zoomIdentity;\r\n\r\n    var simulation = d3 //done\r\n        .forceSimulation(nodes)\r\n        .force(\r\n            \"charge\",\r\n            d3.forceManyBody()\r\n                .strength(-50)\r\n                .distanceMax(200))\r\n        .force(\r\n            \"link\",\r\n            d3\r\n                .forceLink()\r\n                .id(function (d) {\r\n                    return d.employeeID;\r\n                })\r\n                .links(edges)\r\n        )\r\n        .force(\"center\", d3.forceCenter(w / 2, h / 2))\r\n        .on(\"tick\", ticked);\r\n\r\n    function ticked() {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.translate(transform.x, transform.y);\r\n        ctx.scale(transform.k, transform.k);\r\n\r\n        var neighbours = drawEdges(edges);\r\n\r\n        for (const node of nodes) {\r\n            constrainNode(node);\r\n            // Change selected node to stand out\r\n            if (node.employeeID == selectedNode[0]) {\r\n                ctx.strokeStyle = \"#000\";\r\n                ctx.fillStyle = \"#ff0000\";\r\n            } else if (neighbours.indexOf(node) >= 0) {\r\n                ctx.strokeStyle = \"#000\";\r\n                ctx.fillStyle = \"#00ff00\";\r\n            } else {\r\n                ctx.strokeStyle = \"#fff\";\r\n                ctx.fillStyle = \"#000\";\r\n            }\r\n            ctx.beginPath();\r\n            drawNode(node)\r\n            ctx.fillStyle = color(node);\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        }\r\n        drawSelectionInformation(selectedNode[0]);\r\n    }\r\n\r\n\r\n    function constrainNode(node) {\r\n        var distanceFromCenterSquared = Math.pow(node.x - w / 2, 2) + Math.pow(node.y - h / 2, 2);\r\n        if (distanceFromCenterSquared > boundDistanceSquared) {\r\n            var distanceFromCenter = Math.sqrt(distanceFromCenterSquared);\r\n            node.x = ((node.x - w / 2) / distanceFromCenter) * boundDistance + w / 2;\r\n            node.y = ((node.y - h / 2) / distanceFromCenter) * boundDistance + h / 2;\r\n        }\r\n        //node.x = Math.min(w-6, Math.max(2, node.x));\r\n        //node.y = Math.min(h-130, Math.max(2, node.y));\r\n    }\r\n\r\n    function drawEdges(edges) {\r\n        var selectionEdges = [];\r\n        var normalEdges = [];\r\n        var neighbours = [];\r\n        if (selectedNode[0] == null) {\r\n            // ctx.beginPath();\r\n            edges.forEach(drawEdge);\r\n            // ctx.strokeStyle = \"#aaa\";\r\n            // ctx.stroke();\r\n        } else {\r\n            for (const edge of edges) {\r\n                if (edge.source.employeeID == selectedNode[0]) {\r\n                    selectionEdges.push(edge);\r\n                    neighbours.push(edge.target);\r\n                } else if (edge.target.employeeID == selectedNode[0]) {\r\n                    selectionEdges.push(edge);\r\n                    neighbours.push(edge.source);\r\n                } else {\r\n                    normalEdges.push(edge);\r\n                }\r\n            }\r\n            ctx.beginPath();\r\n            normalEdges.forEach(drawEdge);\r\n            ctx.strokeStyle = \"#aaa\";\r\n            ctx.stroke();\r\n\r\n            ctx.beginPath();\r\n            selectionEdges.forEach(drawEdge);\r\n            ctx.strokeStyle = \"#f58a2c\";\r\n            ctx.stroke();\r\n        }\r\n\r\n        return neighbours;\r\n    }\r\n\r\n    function drawEdge(d) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(d.source.x, d.source.y);\r\n        ctx.lineTo(d.target.x, d.target.y);\r\n        ctx.lineWidth=(Math.log10(d.weight) * logCoefficient) + minWidth;\r\n        // ctx.lineWidth = d.weight / edgeWeights.maxWeight;\r\n        ctx.strokeStyle = \"#aaa\";\r\n        ctx.stroke();\r\n        //ctx.fillText(d.sentiment, ((d.source.x + d.target.x) / 2) + 10 , ((d.source.y + d.target.y) / 2) + 3);\r\n        //console.log(d.sentiment)\r\n    }\r\n\r\n    function drawNode(d) {\r\n        // ctx.beginPath();\r\n        ctx.moveTo(d.x, d.y);\r\n        ctx.arc(d.x, d.y, 3, 0, 2 * Math.PI);\r\n        // ctx.fillStyle = color(d);\r\n        // ctx.fill();\r\n        // ctx.stroke();\r\n        //ctx.fillText(\"ID: \" + d.employeeID, d.x+10, d.y+3);\r\n    }\r\n\r\n    function drawSelectionInformation(id) {\r\n        for (const node of nodes) {\r\n            if (id == node.employeeID) {\r\n                drawNodeInformation(node);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    function drawNodeInformation(d) {\r\n        if (d != null) {\r\n            var popupX = d.x + 10;\r\n            var popupY = d.y + 10;\r\n            var popupSize = ctx.measureText(d.email).width + 4;\r\n            ctx.fillStyle = \"#fff\";\r\n            ctx.fillRect(popupX, popupY, popupSize, 36);\r\n\r\n            ctx.strokeStyle = \"#000\"\r\n            ctx.strokeRect(popupX, popupY, popupSize, 36);\r\n            ctx.fillStyle = \"#000\";\r\n            ctx.fillText(d.name + \" | \" + d.employeeID, popupX + 2, popupY + 10);\r\n            ctx.fillText(d.jobTitle, popupX + 2, popupY + 20);\r\n            ctx.fillText(d.email, popupX + 2, popupY + 30);\r\n        }\r\n    }\r\n\r\n    function color() {\r\n        var scale = d3.scaleOrdinal(d3.schemeCategory10);\r\n        return d => scale(d.group);\r\n    }\r\n\r\n    // Update loop seperate from the tick function, thus not controlled by D3\r\n    function heartBeat() {\r\n        if (simulation.alpha() < 0.01 && oldSelection != selectedNode[0]) {\r\n            console.log(\"Attempting wakeup\");\r\n            simulation.alpha(0.01).restart();\r\n            oldSelection = selectedNode[0];\r\n        }\r\n    }\r\n\r\n    function zooming(event) {\r\n        transform = event.transform;\r\n        ticked();\r\n    }\r\n\r\n    function onClick(event) {\r\n        console.log(event.subject);\r\n        selectedNode[0] = event.subject.employeeID;\r\n    }\r\n\r\n    function dragNodes(simulation) {\r\n        function dragSubject(event) {\r\n            return simulation.find(event.x, event.y);\r\n        }\r\n\r\n        // Use dragStart event to hack in clickability in HTML canvas\r\n        function dragStarted(event) {\r\n            onClick(event);\r\n\r\n            if (!event.active) simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n        }\r\n\r\n        function dragged(event) {\r\n            event.subject.fx = event.x;\r\n            event.subject.fy = event.y;\r\n        }\r\n\r\n        function dragEnded(event) {\r\n            if (!event.active) simulation.alphaTarget(0);\r\n            event.subject.fx = null;\r\n            event.subject.fy = null;\r\n        }\r\n\r\n        return d3.drag()\r\n            .subject(dragSubject)\r\n            .on(\"start\", dragStarted)\r\n            .on(\"drag\", dragged)\r\n            .on(\"end\", dragEnded)\r\n    }\r\n\r\n    console.log(zooming);\r\n\r\n    setInterval(function () { heartBeat(); }, 50); // Check for updates every 500 ms\r\n    return d3.select(ctx.canvas).call(dragNodes(simulation)).node();\r\n}\r\n\r\n\r\nexport default generateNetworkCanvas"]}]}