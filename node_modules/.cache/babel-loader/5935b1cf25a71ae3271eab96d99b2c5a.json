{"remainingRequest":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/babel-loader/lib/index.js!/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/eslint-loader/index.js??ref--13-0!/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/visualisations/adjacencymatrix.js","dependencies":[{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/visualisations/adjacencymatrix.js","mtime":1623606022768},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5tYXRoLmxvZzIuanMiOwppbXBvcnQgKiBhcyBkMyBmcm9tICJkMyI7CgpmdW5jdGlvbiBnZW5lcmF0ZU1hdHJpeChlZGdlcywgbm9kZXMsIGVkZ2VXZWlnaHRzKSB7CiAgdmFyIHNpZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidGVzdFNlbGVjdCIpLnZhbHVlOwogIHZhciB3ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInZpc2NvbnRlbnQiKS5jbGllbnRXaWR0aDsKICB2YXIgaCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ2aXNjb250ZW50IikuY2xpZW50SGVpZ2h0OwogIHZhciBzcXVhcmVTaXplID0gTWF0aC5mbG9vcihoIC8gbm9kZXMubGVuZ3RoKSAtIDE7IC8vIG5vZGVQb3NpdGlvbnMgaXMgYW4gb2JqZWN0IHRoYXQgc3RvcmVzIHRoZSBwb3NpdGlvbnMgd2hlcmUgdGhlIG5vZGVzIHNob3VsZCBiZSBkaXNwbGF5ZWQgaW4gdGhlIGFkaiBtYXRyaXgKCiAgdmFyIG5vZGVQb3NpdGlvbnMgPSB7fTsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBub2Rlcy5sZW5ndGg7IGkrKykgewogICAgdmFyIHBvc2l0aW9uID0gbm9kZXNbaV0uZW1wbG95ZWVJRC50b1N0cmluZygpOwogICAgbm9kZVBvc2l0aW9uc1twb3NpdGlvbl0gPSBpOwogIH0KCiAgdmFyIG1pbk9wYWNpdHkgPSAwLjM7IC8vIG9wYWNpdHkgb2YgYW4gZWRnZSB3aXRoIHdlaWdodCAxCgogIHZhciBsb2dDb2VmZmljaWVudCA9ICgxIC0gbWluT3BhY2l0eSkgLyBNYXRoLmxvZzIoZWRnZVdlaWdodHMubWF4V2VpZ2h0KTsgLy8gY29lZmljaWVudCB0aGF0IGlzIHVzZWQgdG8gY2FsY3VsYXRlIG9wYWNpdHkKCiAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgnIycgKyBzaWRlKS5hcHBlbmQoInN2ZyIpLmF0dHIoImhlaWdodCIsIGgpLmF0dHIoIndpZHRoIiwgdykuc3R5bGUoImJhY2tncm91bmQiLCAiYmxhY2siKTsgLy8gc3ZnLmFwcGVuZCgicmVjdCIpCiAgLy8gLmF0dHIoImhlaWdodCIsIDMwKQogIC8vIC5hdHRyKCJ3aWR0aCIsIDMwKQogIC8vIC5hdHRyKCJmaWxsIiwgIndoaXRlIik7CgogIHN2Zy5zZWxlY3RBbGwoInJlY3QiKS5kYXRhKGVkZ2VzKS5lbnRlcigpLmFwcGVuZCgicmVjdCIpLmF0dHIoIngiLCBmdW5jdGlvbiAoZCkgewogICAgcmV0dXJuIG5vZGVQb3NpdGlvbnNbZC50YXJnZXQudG9TdHJpbmcoKV0gKiBzcXVhcmVTaXplOwogIH0pLmF0dHIoInkiLCBmdW5jdGlvbiAoZCkgewogICAgcmV0dXJuIG5vZGVQb3NpdGlvbnNbZC5zb3VyY2UudG9TdHJpbmcoKV0gKiBzcXVhcmVTaXplOwogIH0pLmF0dHIoImhlaWdodCIsIHNxdWFyZVNpemUpLmF0dHIoIndpZHRoIiwgc3F1YXJlU2l6ZSkuYXR0cigiZmlsbCIsICJ3aGl0ZSIpLnN0eWxlKCJvcGFjaXR5IiwgZnVuY3Rpb24gKGQpIHsKICAgIHJldHVybiBNYXRoLmxvZzIoZC53ZWlnaHQpICogbG9nQ29lZmZpY2llbnQgKyBtaW5PcGFjaXR5OwogIH0pOyAvLyB0aGlzIG1ha2VzIGl0IHNvIHRoYXQgb3ZlcmxheWVkIHJlY3RhbmdsZXMgY2FuIGJlIHNlZW4gKGtpbmQgb2YgYWRkcyB3ZWlnaHRzIHRvIHRoZSBlZGdlcykKfQoKZXhwb3J0IGRlZmF1bHQgZ2VuZXJhdGVNYXRyaXg7"},{"version":3,"sources":["/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/visualisations/adjacencymatrix.js"],"names":["d3","generateMatrix","edges","nodes","edgeWeights","side","document","getElementById","value","w","clientWidth","h","clientHeight","squareSize","Math","floor","length","nodePositions","i","position","employeeID","toString","minOpacity","logCoefficient","log2","maxWeight","svg","select","append","attr","style","selectAll","data","enter","d","target","source","weight"],"mappings":";;;AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,WAAtC,EAAmD;AAEjD,MAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAjD;AACA,MAAIC,CAAC,GAAGH,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCG,WAA9C;AACA,MAAIC,CAAC,GAAGL,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCK,YAA9C;AAEA,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAGR,KAAK,CAACa,MAArB,IAA+B,CAAlD,CANiD,CAQjD;;AACA,MAAIC,aAAa,GAAG,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,KAAK,CAACa,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;AACrC,QAAIC,QAAQ,GAAIhB,KAAK,CAACe,CAAD,CAAL,CAASE,UAAV,CAAsBC,QAAtB,EAAf;AACAJ,IAAAA,aAAa,CAACE,QAAD,CAAb,GAA0BD,CAA1B;AACD;;AAED,MAAMI,UAAU,GAAG,GAAnB,CAfiD,CAezB;;AACxB,MAAMC,cAAc,GAAG,CAAC,IAAID,UAAL,IAAmBR,IAAI,CAACU,IAAL,CAAUpB,WAAW,CAACqB,SAAtB,CAA1C,CAhBiD,CAgB2B;;AAE5E,MAAIC,GAAG,GAAG1B,EAAE,CACT2B,MADO,CACA,MAAMtB,IADN,EAEPuB,MAFO,CAEA,KAFA,EAGPC,IAHO,CAGF,QAHE,EAGQlB,CAHR,EAIPkB,IAJO,CAIF,OAJE,EAIOpB,CAJP,EAKPqB,KALO,CAKD,YALC,EAKa,OALb,CAAV,CAlBiD,CAyBjD;AACA;AACA;AACA;;AAEAJ,EAAAA,GAAG,CAACK,SAAJ,CAAc,MAAd,EACGC,IADH,CACQ9B,KADR,EAEG+B,KAFH,GAGGL,MAHH,CAGU,MAHV,EAIGC,IAJH,CAIQ,GAJR,EAIa,UAACK,CAAD,EAAO;AAChB,WAAOjB,aAAa,CAAEiB,CAAC,CAACC,MAAH,CAAWd,QAAX,EAAD,CAAb,GAAuCR,UAA9C;AACD,GANH,EAOGgB,IAPH,CAOQ,GAPR,EAOa,UAACK,CAAD,EAAO;AAChB,WAAOjB,aAAa,CAAEiB,CAAC,CAACE,MAAH,CAAWf,QAAX,EAAD,CAAb,GAAuCR,UAA9C;AACD,GATH,EAUGgB,IAVH,CAUQ,QAVR,EAUkBhB,UAVlB,EAWGgB,IAXH,CAWQ,OAXR,EAWiBhB,UAXjB,EAYGgB,IAZH,CAYQ,MAZR,EAYgB,OAZhB,EAaGC,KAbH,CAaS,SAbT,EAaqB,UAACI,CAAD,EAAO;AAAE,WAAQpB,IAAI,CAACU,IAAL,CAAUU,CAAC,CAACG,MAAZ,IAAsBd,cAAvB,GAAyCD,UAAhD;AAA4D,GAb1F,EA9BiD,CA2C8C;AAEhG;;AAED,eAAerB,cAAf","sourcesContent":["import * as d3 from \"d3\";\n\nfunction generateMatrix(edges, nodes, edgeWeights) {\n\n  var side = document.getElementById(\"testSelect\").value;\n  var w = document.getElementById(\"viscontent\").clientWidth;\n  var h = document.getElementById(\"viscontent\").clientHeight;\n\n  const squareSize = Math.floor(h / nodes.length) - 1;\n\n  // nodePositions is an object that stores the positions where the nodes should be displayed in the adj matrix\n  var nodePositions = {};\n  for (var i = 0; i < nodes.length; i++) {\n    let position = (nodes[i].employeeID).toString()\n    nodePositions[position] = i;\n  }\n\n  const minOpacity = 0.3; // opacity of an edge with weight 1\n  const logCoefficient = (1 - minOpacity) / Math.log2(edgeWeights.maxWeight); // coeficient that is used to calculate opacity\n\n  var svg = d3\n    .select('#' + side)\n    .append(\"svg\")\n    .attr(\"height\", h)\n    .attr(\"width\", w)\n    .style(\"background\", \"black\");\n\n  // svg.append(\"rect\")\n  // .attr(\"height\", 30)\n  // .attr(\"width\", 30)\n  // .attr(\"fill\", \"white\");\n\n  svg.selectAll(\"rect\")\n    .data(edges)\n    .enter()\n    .append(\"rect\")\n    .attr(\"x\", (d) => {\n      return nodePositions[(d.target).toString()] * squareSize;\n    })\n    .attr(\"y\", (d) => {\n      return nodePositions[(d.source).toString()] * squareSize;\n    })\n    .attr(\"height\", squareSize)\n    .attr(\"width\", squareSize)\n    .attr(\"fill\", \"white\")\n    .style(\"opacity\", ((d) => { return (Math.log2(d.weight) * logCoefficient) + minOpacity }));  // this makes it so that overlayed rectangles can be seen (kind of adds weights to the edges)\n\n}\n\nexport default generateMatrix"]}]}