{"remainingRequest":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/babel-loader/lib/index.js!/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/views/Home.vue?vue&type=template&id=fae5bece&scoped=true","dependencies":[{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/views/Home.vue","mtime":1623670289573},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCB2TW9kZWxUZXh0IGFzIF92TW9kZWxUZXh0LCB3aXRoRGlyZWN0aXZlcyBhcyBfd2l0aERpcmVjdGl2ZXMsIGNyZWF0ZVN0YXRpY1ZOb2RlIGFzIF9jcmVhdGVTdGF0aWNWTm9kZSwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi1mYWU1YmVjZSIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtZmFlNWJlY2UiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGlkOiAidGhlU2lkZWJhciIsCiAgY2xhc3M6ICJzaWRlYmFyIgp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBjbGFzczogImZpbGVVcGxvYWQiCn07Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInAiLCB7CiAgaWQ6ICJtc2ciCn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF80ID0gLyojX19QVVJFX18qL19jcmVhdGVTdGF0aWNWTm9kZSgiPGRpdiBjbGFzcz1cIndpbmRvd1NlbGVjdGlvblwiIGRhdGEtdi1mYWU1YmVjZT48aDMgZGF0YS12LWZhZTViZWNlPlNlbGVjdCB2aXN1YWxpc2F0aW9uIHdpbmRvdzwvaDM+PHNlbGVjdCBpZD1cInRlc3RTZWxlY3RcIiBkYXRhLXYtZmFlNWJlY2U+PG9wdGlvbiB2YWx1ZT1cImNhbnZhc0xlZnRcIiBkYXRhLXYtZmFlNWJlY2U+TGVmdDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9XCJ2aXNSaWdodFwiIGRhdGEtdi1mYWU1YmVjZT5SaWdodDwvb3B0aW9uPjwvc2VsZWN0PjxoMyBjbGFzcz1cInR5cGVcIiBkYXRhLXYtZmFlNWJlY2U+U2VsZWN0IHZpc3VhbGlzYXRpb24gdHlwZTwvaDM+PHNlbGVjdCBpZD1cInZpc1R5cGVcIiBkYXRhLXYtZmFlNWJlY2U+PG9wdGlvbiB2YWx1ZT1cIm5vZGVsaW5rXCIgZGF0YS12LWZhZTViZWNlPk5vZGUtTGluayBEaWFncmFtPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT1cIm1hdHJpeFwiIGRhdGEtdi1mYWU1YmVjZT5BZGphY2VuY3kgTWF0cml4PC9vcHRpb24+PC9zZWxlY3Q+PC9kaXY+PGRpdiBjbGFzcz1cImRhdGFMaXN0XCIgZGF0YS12LWZhZTViZWNlPjx1bCBpZD1cImxpc3RcIiBjbGFzcz1cImNvbHVtblwiIGRhdGEtdi1mYWU1YmVjZT48L3VsPjwvZGl2PiIsIDIpOwoKdmFyIF9ob2lzdGVkXzYgPSB7CiAgY2xhc3M6ICJzaWRlYmFyQnV0dG9uIgp9OwoKdmFyIF9ob2lzdGVkXzcgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVN0YXRpY1ZOb2RlKCI8ZGl2IGNsYXNzPVwidmlzR3JpZFwiIGRhdGEtdi1mYWU1YmVjZT48ZGl2IGlkPVwidmlzY29udGVudFwiIGRhdGEtdi1mYWU1YmVjZT48ZGl2IGlkPVwidmlzTGVmdFwiIGRhdGEtdi1mYWU1YmVjZT48Y2FudmFzIGlkPVwiY2FudmFzTGVmdFwiIGRhdGEtdi1mYWU1YmVjZT48L2NhbnZhcz48L2Rpdj48L2Rpdj48ZGl2IGlkPVwidmlzY29udGVudFwiIGRhdGEtdi1mYWU1YmVjZT48ZGl2IGlkPVwidmlzUmlnaHRcIiBkYXRhLXYtZmFlNWJlY2U+PC9kaXY+PC9kaXY+PC9kaXY+IiwgMSk7Cgp2YXIgX2hvaXN0ZWRfOCA9IHsKICBjbGFzczogInNsaWRlckxlZnQiCn07Cgp2YXIgX2hvaXN0ZWRfOSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInAiLCB7CiAgaWQ6ICJyYW5nZVZhbHVlTGVmdCIKfSwgInRlc3QiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTAgPSB7CiAgY2xhc3M6ICJzbGlkZXJSaWdodCIKfTsKCnZhciBfaG9pc3RlZF8xMSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInAiLCB7CiAgaWQ6ICJyYW5nZVZhbHVlUmlnaHQiCn0sICJ0ZXN0IiwgLTEKLyogSE9JU1RFRCAqLwopOwoKX3BvcFNjb3BlSWQoKTsKCmV4cG9ydCB2YXIgcmVuZGVyID0gLyojX19QVVJFX18qL193aXRoSWQoZnVuY3Rpb24gKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlVk5vZGUoImEiLCB7CiAgICBocmVmOiAiamF2YXNjcmlwdDp2b2lkKDApIiwKICAgIGNsYXNzOiAiY2xvc2VidG4iLAogICAgb25DbGljazogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5jbG9zZUJhciAmJiAkb3B0aW9ucy5jbG9zZUJhci5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgIsOXIiksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMiwgW193aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoImlucHV0IiwgewogICAgdHlwZTogInRleHQiLAogICAgcGxhY2Vob2xkZXI6ICJOYW1lIG9mIHRoZSBEYXRhc2V0IiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkZGF0YS5kYXRhc2V0cy5kYXRhTmFtZSA9ICRldmVudDsKICAgIH0pLAogICAgY2xhc3M6ICJmb3JtLWNvbnRyb2wiCiAgfSwgbnVsbCwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIFtbX3ZNb2RlbFRleHQsICRkYXRhLmRhdGFzZXRzLmRhdGFOYW1lXV0pLCBfaG9pc3RlZF8zLCBfY3JlYXRlVk5vZGUoImlucHV0IiwgewogICAgdHlwZTogImZpbGUiLAogICAgYWNjZXB0OiAiLmNzdiIsCiAgICBvbkNoYW5nZTogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5zZWxlY3RGaWxlICYmICRvcHRpb25zLnNlbGVjdEZpbGUuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KQogIH0sIG51bGwsIDMyCiAgLyogSFlEUkFURV9FVkVOVFMgKi8KICApLCBfY3JlYXRlVk5vZGUoImJ1dHRvbiIsIHsKICAgIG9uQ2xpY2s6IF9jYWNoZVs0XSB8fCAoX2NhY2hlWzRdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMudXBsb2FkRmlsZSAmJiAkb3B0aW9ucy51cGxvYWRGaWxlLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCAiIFVwbG9hZCAiKV0pLCBfaG9pc3RlZF80XSksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNiwgW19jcmVhdGVWTm9kZSgiYnV0dG9uIiwgewogICAgY2xhc3M6ICJvcGVuYnRuIiwKICAgIG9uQ2xpY2s6IF9jYWNoZVs1XSB8fCAoX2NhY2hlWzVdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMub3BlbkJhciAmJiAkb3B0aW9ucy5vcGVuQmFyLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCAi4piwIE9wdGlvbnMiKV0pLCBfaG9pc3RlZF83LCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzgsIFtfY3JlYXRlVk5vZGUoImlucHV0IiwgewogICAgdHlwZTogInJhbmdlIiwKICAgIG1pbjogIjEiLAogICAgbWF4OiAiMTAwIiwKICAgIHZhbHVlOiAiNTAiLAogICAgY2xhc3M6ICJzbGlkZXIiLAogICAgaWQ6ICJyYW5nZUxlZnQiLAogICAgb25JbnB1dDogX2NhY2hlWzZdIHx8IChfY2FjaGVbNl0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5zaG93UmFuZ2VWYWx1ZUxlZnQgJiYgJG9wdGlvbnMuc2hvd1JhbmdlVmFsdWVMZWZ0LmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCBudWxsLCAzMgogIC8qIEhZRFJBVEVfRVZFTlRTICovCiAgKSwgX2hvaXN0ZWRfOV0pLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEwLCBbX2NyZWF0ZVZOb2RlKCJpbnB1dCIsIHsKICAgIHR5cGU6ICJyYW5nZSIsCiAgICBtaW46ICIxIiwKICAgIG1heDogIjEwMCIsCiAgICB2YWx1ZTogIjUwIiwKICAgIGNsYXNzOiAic2xpZGVyIiwKICAgIGlkOiAicmFuZ2VSaWdodCIsCiAgICBvbklucHV0OiBfY2FjaGVbN10gfHwgKF9jYWNoZVs3XSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLnNob3dSYW5nZVZhbHVlUmlnaHQgJiYgJG9wdGlvbnMuc2hvd1JhbmdlVmFsdWVSaWdodC5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgbnVsbCwgMzIKICAvKiBIWURSQVRFX0VWRU5UUyAqLwogICksIF9ob2lzdGVkXzExXSldLCA2NAogIC8qIFNUQUJMRV9GUkFHTUVOVCAqLwogICk7Cn0pOw=="},{"version":3,"sources":["/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/views/Home.vue"],"names":[],"mappings":";;;;;;;AACO,EAAA,EAAE,EAAC,Y;AAAa,EAAA,KAAK,EAAC;;;AAGpB,EAAA,KAAK,EAAC;;;8BAOT,YAAA,CAAgB,GAAhB,EAAgB;AAAb,EAAA,EAAE,EAAC;AAAU,CAAhB,EAAW,IAAX,EAAW,CAAA;AAAA;AAAX,C;;;;;AA2BC,EAAA,KAAK,EAAC;;;;;;AAUN,EAAA,KAAK,EAAC;;;8BAUT,YAAA,CAA+B,GAA/B,EAA+B;AAA5B,EAAA,EAAE,EAAC;AAAyB,CAA/B,EAAuB,MAAvB,EAA2B,CAAA;AAAA;AAA3B,C;;;AAEG,EAAA,KAAK,EAAC;;;+BAUT,YAAA,CAAgC,GAAhC,EAAgC;AAA7B,EAAA,EAAE,EAAC;AAA0B,CAAhC,EAAwB,MAAxB,EAA4B,CAAA;AAAA;AAA5B,C;;;;;sDArEF,YAAA,CAmCM,KAnCN,EAAA,UAAA,EAmCM,CAlCJ,YAAA,CAA2E,GAA3E,EAA2E;AAAxE,IAAA,IAAI,EAAC,oBAAmE;AAA9C,IAAA,KAAK,EAAC,UAAwC;AAA5B,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,QAAA,IAAA,QAAA,CAAA,QAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAAuB,GAA3E,EAAgE,GAAhE,CAkCI,EAhCJ,YAAA,CAaM,KAbN,EAAA,UAAA,EAaM,C,gBAZJ,YAAA,CAKE,OALF,EAKE;AAJA,IAAA,IAAI,EAAC,MAIL;AAHA,IAAA,WAAW,EAAC,qBAGZ;;aAFS,KAAA,CAAA,QAAA,CAAS,QAAT,GAAiB,M;MAE1B;AADA,IAAA,KAAK,EAAC;AACN,GALF,E,IAAA,E;;AAAA,G,iBAGW,KAAA,CAAA,QAAA,CAAS,Q,GAShB,EANJ,UAMI,EALJ,YAAA,CAAwD,OAAxD,EAAwD;AAAjD,IAAA,IAAI,EAAC,MAA4C;AAArC,IAAA,MAAM,EAAC,MAA8B;AAAtB,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,UAAA,IAAA,QAAA,CAAA,UAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAAgB,GAAxD,E,IAAA,E;;AAAA,GAKI,EALoD,YAAA,CAI/C,QAJ+C,EAI/C;AAHN,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,UAAA,IAAA,QAAA,CAAA,UAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAGC,GAJ+C,EAEvD,UAFuD,CAKpD,CAbN,CAgCI,EAjBJ,UAiBI,CAnCN,C,EAqCA,YAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADJ,YAAA,CAAiE,QAAjE,EAAiE;AAAzD,IAAA,KAAK,EAAC,SAAmD;AAAxC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,OAAA,IAAA,QAAA,CAAA,OAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAAmC,GAAjE,EAAyC,WAAzC,CACI,CAFN,C,EAIA,U,EAMA,YAAA,CAWM,KAXN,EAAA,UAAA,EAWM,CAVJ,YAAA,CAQE,OARF,EAQE;AAPA,IAAA,IAAI,EAAC,OAOL;AANA,IAAA,GAAG,EAAC,GAMJ;AALA,IAAA,GAAG,EAAC,KAKJ;AAJA,IAAA,KAAK,EAAC,IAIN;AAHA,IAAA,KAAK,EAAC,QAGN;AAFA,IAAA,EAAE,EAAC,WAEH;AADC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,kBAAA,IAAA,QAAA,CAAA,kBAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AACN,GARF,E,IAAA,E;;AAAA,GAUI,EADJ,UACI,CAXN,C,EAYA,YAAA,CAWM,KAXN,EAAA,WAAA,EAWM,CAVJ,YAAA,CAQE,OARF,EAQE;AAPA,IAAA,IAAI,EAAC,OAOL;AANA,IAAA,GAAG,EAAC,GAMJ;AALA,IAAA,GAAG,EAAC,KAKJ;AAJA,IAAA,KAAK,EAAC,IAIN;AAHA,IAAA,KAAK,EAAC,QAGN;AAFA,IAAA,EAAE,EAAC,YAEH;AADC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,mBAAA,IAAA,QAAA,CAAA,mBAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AACN,GARF,E,IAAA,E;;AAAA,GAUI,EADJ,WACI,CAXN,C","sourcesContent":["<template>\n  <div id=\"theSidebar\" class=\"sidebar\">\n    <a href=\"javascript:void(0)\" class=\"closebtn\" @click=\"closeBar\">&times;</a>\n\n    <div class=\"fileUpload\">\n      <input\n        type=\"text\"\n        placeholder=\"Name of the Dataset\"\n        v-model=\"datasets.dataName\"\n        class=\"form-control\"\n      />\n      <p id=\"msg\"></p>\n      <input type=\"file\" accept=\".csv\" @change=\"selectFile\" /><button\n        @click=\"uploadFile\"\n      >\n        Upload\n      </button>\n    </div>\n\n    <div class=\"windowSelection\">\n      <h3>Select visualisation window</h3>\n      <select id=\"testSelect\">\n        <option value=\"canvasLeft\">Left</option>\n        <option value=\"visRight\">Right</option>\n      </select>\n\n      <h3 class=\"type\">Select visualisation type</h3>\n      <select id=\"visType\">\n        <option value=\"nodelink\">Node-Link Diagram</option>\n        <option value=\"matrix\">Adjacency Matrix</option>\n      </select>\n    </div>\n\n    <div class=\"dataList\">\n      <ul id=\"list\" class=\"column\"></ul>\n    </div>\n  </div>\n\n  <div class=\"sidebarButton\">\n    <button class=\"openbtn\" @click=\"openBar\">&#9776; Options</button>\n  </div>\n\n  <div class=\"visGrid\">\n    <div id=\"viscontent\">\n      <div id=\"visLeft\"><canvas id=\"canvasLeft\"></canvas></div>\n    </div>\n    <div id=\"viscontent\"><div id=\"visRight\"></div></div>\n  </div>\n  <div class=\"sliderLeft\">\n    <input\n      type=\"range\"\n      min=\"1\"\n      max=\"100\"\n      value=\"50\"\n      class=\"slider\"\n      id=\"rangeLeft\"\n      @input=\"showRangeValueLeft\"\n    />\n    <p id=\"rangeValueLeft\">test</p>\n  </div>\n  <div class=\"sliderRight\">\n    <input\n      type=\"range\"\n      min=\"1\"\n      max=\"100\"\n      value=\"50\"\n      class=\"slider\"\n      id=\"rangeRight\"\n      @input=\"showRangeValueRight\"\n    />\n    <p id=\"rangeValueRight\">test</p>\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase\";\nimport * as d3 from \"d3\";\nimport { db } from \"../main\";\n//import generateNetwork from \"../visualisations/nodelink\";\nimport generateMatrix from \"../visualisations/adjacencymatrix\";\nimport generateNetworkCanvas from \"../visualisations/nodelinkv2.0\";\n\nexport default {\n  name: \"Home\",\n  components: {},\n  data() {\n    return {\n      datasets: {\n        fileLink: null,\n        dataName: null,\n      },\n      selectedFile: null,\n      datasetNo: 0,\n    };\n  },\n  mounted() {\n    this.getAllDatabaseEntries(); //the mounted() lifecycle executes after all components of the page have finished loading, so after the page is ready\n    // the previous uploaded datasets are visible in the page.\n  },\n\n  methods: {\n    showRangeValueLeft() {\n      var x = document.getElementById(\"rangeLeft\").value;\n      document.getElementById(\"rangeValueLeft\").innerHTML = x;\n    },\n\n    showRangeValueRight() {\n      var x = document.getElementById(\"rangeRight\").value;\n      document.getElementById(\"rangeValueRight\").innerHTML = x;\n    },\n    showDatabaseEntries(name, link) {\n      var ul = document.getElementById(\"list\");\n      var header = document.createElement(\"h2\");\n\n      var selection = null;\n\n      var _name = document.createElement(\"li\");\n      var _visualise = document.createElement(\"button\");\n      header.innerHTML = \"Dataset-\" + ++this.datasetNo;\n      _name.innerHTML = \"Name of the dataset: \" + name;\n      _visualise.innerHTML = \"Visualise\";\n      _visualise.onclick = async () => {\n        var visDiv = document.getElementById(\n          document.getElementById(\"testSelect\").value\n        );\n        visDiv.innerHTML = \"\";\n        const response = await fetch(link);\n        const data = d3.csvParse(await response.text(), d3.autoType);\n\n        var edges = [];\n        var nodes = [];\n\n        // \"edgeWeights.weight[source][target]\" can be used to get the weight of the source-target edge\n        // \"edgeWeights.maxWeight\" is the largest edge weight in the dataset\n        // this is used as an intermediary variable to calculate wEdges (weighted edges)\n        var edgeWeights = {\n          weight: {},\n          maxWeight: 0,\n        };\n\n        // weighted edges (maybe we will replace edges with this, as it adds weights to edges and also should improve performance)\n        var wEdges = [];\n\n        var maxDate = new Date(-3155692597470);\n        var minDate = new Date(3155692597470);\n\n        // this function auto-executes whenever visualise is clicked\n        // the purpose of this function is to calculate the minDate and the maxDate of the given dataset\n        (function () {\n          data.forEach((x) => {\n            // check if current date is larger than maxDate\n            if (x.date > maxDate) {\n              maxDate = x.date;\n            }\n\n            // check if current date is smaller than minDate\n            if (x.date < minDate) {\n              minDate = x.date;\n            }\n          });\n        })();\n\n        data.forEach((x) => {\n          var objNodesTo = {};\n          var objNodesFrom = {};\n\n          var index = nodes.findIndex((o) => o.employeeID == x.fromId);\n          if (index === -1) {\n            objNodesFrom[\"employeeID\"] = x.fromId;\n            objNodesFrom[\"email\"] = x.fromEmail;\n            objNodesFrom[\"jobTitle\"] = x.fromJobtitle;\n            nodes.push(objNodesFrom);\n\n            // add missing node ID to edgeWeights\n            edgeWeights.weight[x.fromId] = {};\n          }\n\n          var index2 = nodes.findIndex((o) => o.employeeID == x.toId);\n          if (index2 === -1) {\n            objNodesTo[\"employeeID\"] = x.toId;\n            objNodesTo[\"email\"] = x.toEmail;\n            objNodesTo[\"jobTitle\"] = x.toJobtitle;\n            nodes.push(objNodesTo);\n\n            // add missing node ID to edgeWeights\n            edgeWeights.weight[x.toId] = {};\n          }\n\n          // init current edge with weight 0\n          edgeWeights.weight[x.fromId][x.toId] = 0;\n          let temp = ++edgeWeights.weight[x.fromId][x.toId];\n\n          if (temp > edgeWeights.maxWeight) {\n            edgeWeights.maxWeight = temp;\n          }\n          \n        });\n\n        // calculate edgeWeight values\n        data.forEach((x) => {\n          let temp = ++edgeWeights.weight[x.fromId][x.toId];\n\n          if (temp > edgeWeights.maxWeight) {\n            edgeWeights.maxWeight = temp;\n          }\n          \n          // add the edges to the edges array.\n          var objEdges = {};\n          objEdges[\"source\"] = x.fromId;\n          objEdges[\"target\"] = x.toId;\n          objEdges[\"sentiment\"] = x.sentiment;\n          objEdges[\"messageType\"] = x.messageType;\n          objEdges[\"date\"] = x.date;\n          objEdges[\"weight\"] = edgeWeights.weight[x.fromId][x.toId];\n          edges.push(objEdges);\n        });\n\n        // create array of weighted edges\n        Object.keys(edgeWeights.weight).forEach((fromId) => {\n          Object.keys(edgeWeights.weight[fromId]).forEach((toId) => {\n            let objEdges = {};\n            objEdges[\"source\"] = {\"employeeID\": fromId};\n            objEdges[\"target\"] = {\"employeeID\": toId};\n            objEdges[\"weight\"] = edgeWeights.weight[fromId][toId];\n            wEdges.push(objEdges);\n          });\n        });\n\n        if (document.getElementById(\"visType\").value == \"nodelink\") {\n          var canvas;\n          generateNetworkCanvas(edges, nodes, canvas, selection);\n        } else if (document.getElementById(\"visType\").value == \"matrix\") {\n          generateMatrix(wEdges, nodes, edgeWeights);\n        }\n      };\n      ul.appendChild(header);\n      ul.appendChild(_name);\n      ul.appendChild(_visualise);\n    },\n\n    getAllDatabaseEntries() {\n      db.collection(\"datasets\")\n        .get()\n        .then((snapshot) => {\n          snapshot.forEach((doc) => {\n            let name = doc.data().dataName;\n            let link = doc.data().fileLink;\n            this.showDatabaseEntries(name, link);\n          });\n        });\n    },\n\n    openBar() {\n      document.getElementById(\"theSidebar\").style.width = \"300px\";\n      document.getElementById(\"visLeft\").style.marginLeft = \"300px\";\n    },\n\n    closeBar() {\n      document.getElementById(\"theSidebar\").style.width = \"0\";\n      document.getElementById(\"visLeft\").style.marginLeft = \"0\";\n    },\n\n    selectFile(event) {\n      this.selectedFile = event.target.files[0]; //Selects the uploaded file and assigns it to the \"selectedFile\" variable.\n      //TODO: Add proper checks to ensure that the files given are csv files.\n    },\n\n    uploadFile() {\n      let fileName = `${this.selectedFile.name}`;\n      var storageRef = firebase.storage().ref(fileName);\n      let uploadTask = storageRef.put(this.selectedFile);\n      uploadTask.on(\n        \"state_changed\",\n        () => {},\n        (error) => {\n          //Handle unsuccessfull uploads.\n          console.log(error);\n        },\n        () => {\n          //Handle successfull uploads.\n          uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n            this.datasets.fileLink = downloadURL;\n            this.saveDataToDB();\n          });\n        }\n      );\n    },\n\n    saveDataToDB() {\n      db.collection(\"datasets\")\n        .add(this.datasets)\n        .then((docRef) => {\n          var sucMsg = document.getElementById(\"msg\");\n          sucMsg.innerHTML = \"The dataset has been uploaded successfully.\";\n          console.log(\"Document written with ID: \", docRef.id);\n        })\n        .catch((error) => {\n          console.error(\"Error adding document: \", error);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.visGrid {\n  position: absolute;\n  display: grid;\n  width: 100%;\n  height: 100%;\n  background-color: #3f3f3f;\n  grid-template-columns: 1fr 1fr;\n  color: white;\n  z-index: -10;\n  transition: margin-left 0.5s;\n}\n\n#viscontent {\n  position: relative;\n  height: 100%;\n  width: 100%;\n  transition: margin-left 0.5s;\n}\n\n.sidebar {\n  height: 100%;\n  width: 0;\n  position: fixed;\n  z-index: 2;\n  top: 0;\n  left: 0;\n  background-color: black;\n  color: white;\n  overflow-x: hidden;\n  padding-top: 60px;\n  transition: 0.5s; /* 0.5 second transition effect to slide in the sidebar */\n  float: left;\n}\n\n.sidebar a:hover {\n  color: #f1f1f1;\n}\n\n.sidebar .closebtn {\n  position: absolute;\n  top: 0;\n  right: 25px;\n  font-size: 36px;\n  margin-left: 50px;\n  padding: 8px 8px 8px 32px;\n  text-decoration: none;\n  color: #818181;\n  display: block;\n  transition: 0.3s;\n}\n\n.openbtn {\n  font-size: 20px;\n  cursor: pointer;\n  background-color: black;\n  color: white;\n  padding: 10px 15px;\n  border: none;\n}\n\n.openbtn:hover {\n  color: black;\n  background-color: #42b983;\n}\n\n/* Push page content to the right */\n.sidebarButton {\n  position: absolute;\n  transition: margin-left 0.5s;\n  text-align: left;\n  z-index: 1;\n}\n\n.dataList {\n  height: 50%;\n  overflow-y: auto;\n}\n\n.fileUpload {\n  border-bottom: 2px solid white;\n}\n\n.windowSelection {\n  padding: 30px;\n  border-bottom: 2px solid white;\n}\n\n.type {\n  margin-top: 0.5cm;\n}\n\n#visLeft {\n  transition: margin-left 0.5s;\n  border-right: 3px solid white;\n}\n\n#visRight {\n  transition: margin-left 0.5s;\n}\n\n.sliderLeft {\n  position: absolute;\n  bottom: 0;\n  width: 50%;\n  background-color: #2c3e50;\n  height: 40px;\n}\n\n.sliderRight {\n  position: absolute;\n  bottom: 0;\n  width: 50%;\n  background-color: #2c3e50;\n  height: 40px;\n  display: inline;\n}\n\n.slider {\n  width: 80%;\n}\n\n#rangeValueLeft {\n  color: white;\n}\n\n#rangeValueRight {\n  color: white;\n}\n</style>\n"],"sourceRoot":""}]}