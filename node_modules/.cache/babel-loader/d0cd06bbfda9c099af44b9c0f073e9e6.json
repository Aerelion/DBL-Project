{"remainingRequest":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\src\\views\\Home.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\src\\views\\Home.vue","mtime":1624452538670},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\src\\views\\Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"theSidebar\" class=\"sidebar\">\r\n    <a href=\"javascript:void(0)\" class=\"closebtn\" @click=\"closeBar\">&times;</a>\r\n\r\n    <div class=\"fileUpload\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Name of the Dataset\"\r\n        v-model=\"datasets.dataName\"\r\n        class=\"form-control\"\r\n      />\r\n      <p id=\"msg\"></p>\r\n      <input type=\"file\" accept=\".csv\" @change=\"selectFile\" /><button\r\n        @click=\"uploadFile\"\r\n      >\r\n        Upload\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"windowSelection\">\r\n      <h3>Node-Link Diagram Window</h3>\r\n      <select id=\"testSelectNL\">\r\n        <option value=\"visLeft\">Left</option>\r\n        <option value=\"visRight\">Right</option>\r\n      </select>\r\n\r\n      <h3>Adjacency Matrix Window</h3>\r\n      <select id=\"testSelectAM\">\r\n        <option value=\"visRight\">Right</option>\r\n        <option value=\"visLeft\">Left</option>\r\n      </select>\r\n\r\n      <!--\r\n      <h3 class=\"type\">Select visualisation type</h3>\r\n      <select id=\"visType\">\r\n        <option value=\"nodelink\">Node-Link Diagram</option>\r\n        <option value=\"matrix\">Adjacency Matrix</option>\r\n      </select>\r\n    </div>\r\n    --></div>\r\n\r\n    <div class=\"dataList\">\r\n      <ul id=\"list\" class=\"column\"></ul>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"sidebarButton\">\r\n    <button class=\"openbtn\" @click=\"openBar\">&#9776; Options</button>\r\n  </div>\r\n\r\n  <div class=\"visGrid\">\r\n    <div id=\"viscontent\">\r\n      <div id=\"visLeft\"></div>\r\n    </div>\r\n    <div id=\"viscontent\"><div id=\"visRight\"></div></div>\r\n  </div>\r\n  <div class=\"sliderDiv\">\r\n    <input\r\n      type=\"range\"\r\n      min=\"1\"\r\n      max=\"100\"\r\n      value=\"0\"\r\n      class=\"slider\"\r\n      id=\"range\"\r\n      style=\"display: none;\"\r\n      @input=\"showRangeValue\"\r\n      @change=\"update\"\r\n    />\r\n    <p id=\"rangeValue\"></p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport firebase from \"firebase\";\r\nimport * as d3 from \"d3\";\r\nimport { db } from \"../main\";\r\n//import generateNetwork from \"../visualisations/nodelink\";\r\nimport generateMatrix from \"../visualisations/adjacencymatrix\";\r\nimport generateNetworkCanvas from \"../visualisations/nodelinkv2.0\";\r\n\r\nvar link = [];\r\nvar linkEntry = -1;\r\nvar visLink;\r\nvar minDate;\r\nvar maxDate;\r\nvar selectedNodes = {};\r\n\r\nexport default {\r\n  name: \"Home\",\r\n  components: {},\r\n  data() {\r\n    return {\r\n      datasets: {\r\n        fileLink: null,\r\n        dataName: null,\r\n      },\r\n      selectedFile: null,\r\n      datasetNo: 0,\r\n      months: [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getAllDatabaseEntries(); //the mounted() lifecycle executes after all components of the page have finished loading, so after the page is ready\r\n    // the previous uploaded datasets are visible in the page.\r\n  },\r\n\r\n  methods: {\r\n    showRangeValue() {\r\n      var x = document.getElementById(\"range\").value;\r\n      var dateValue = new Date(parseInt(x));\r\n\r\n      var displayDate =\r\n        this.months[dateValue.getMonth()] +\r\n        \" \" +\r\n        dateValue.getDate() +\r\n        \", \" +\r\n        dateValue.getFullYear();\r\n\r\n      document.getElementById(\"rangeValue\").innerHTML = displayDate;\r\n    },\r\n\r\n    extractName(email) {\r\n        // Splice off the email server\r\n        var nameBuilder = email.substring(0, email.indexOf(\"@\"));\r\n        // Split mail into seperate names\r\n        nameBuilder = nameBuilder.split(\".\");\r\n        // Initialize surnames and capitalize\r\n        var name = \"\";\r\n        for (var i = 0; i < nameBuilder.length; i++) {\r\n            if (nameBuilder[i] != null && nameBuilder[i].length > 0) {\r\n                if (i < nameBuilder.length-1) {\r\n                    name = name + nameBuilder[i][0].toUpperCase() + \".\";\r\n                } else {\r\n                    name = name + \" \" + nameBuilder[i][0].toUpperCase() + nameBuilder[i].substring(1);\r\n                }\r\n            }\r\n        }\r\n        return name\r\n    },\r\n    showDatabaseEntries(name) {\r\n      var ul = document.getElementById(\"list\");\r\n      var header = document.createElement(\"h2\");\r\n      var _name = document.createElement(\"li\");\r\n      var _visualise = document.createElement(\"button\");\r\n      header.innerHTML = \"Dataset-\" + ++this.datasetNo;\r\n      _name.innerHTML = \"Name of the dataset: \" + name;\r\n      _visualise.innerHTML = \"Visualise\";\r\n      _visualise.onclick = async () => {\r\n        visLink = link[linkEntry];\r\n        console.log(visLink);\r\n        console.log(link);\r\n        document.getElementById(\"range\").style.display = \"inline\"\r\n        this.update()\r\n        //this.animate()\r\n      };\r\n      ul.appendChild(header);\r\n      ul.appendChild(_name);\r\n      ul.appendChild(_visualise);\r\n    },\r\n\r\n    getAllDatabaseEntries() {\r\n      db.collection(\"datasets\")\r\n        .get()\r\n        .then((snapshot) => {\r\n          snapshot.forEach((doc) => {\r\n            linkEntry++;\r\n            let name = doc.data().dataName;\r\n            link[linkEntry] = doc.data().fileLink;\r\n            this.showDatabaseEntries(name);\r\n          });\r\n        });\r\n    },\r\n\r\n    // async animate() {\r\n    //   function sleep(ms) {\r\n    //     return new Promise(\r\n    //       resolve => setTimeout(resolve, ms)\r\n    //     );\r\n    //   }\r\n    //   var skip = 7 // how many days per step\r\n    //   for (var d = new Date(1999, 0, 1); d <= document.getElementById(\"range\").max; d.setDate(d.getDate() + skip)) {\r\n    //     document.getElementById(\"range\").value = d.getTime()\r\n    //     await this.update();\r\n    //     await sleep(2000);\r\n    //   }\r\n    // },\r\n\r\n    async update() {\r\n      var visDiv = document.getElementById(\r\n          document.getElementById(\"testSelectNL\").value\r\n        );\r\n        visDiv.innerHTML = \"\";\r\n\r\n        visDiv = document.getElementById(\r\n          document.getElementById(\"testSelectAM\").value\r\n        );\r\n        visDiv.innerHTML = \"\";\r\n        const response = await fetch(visLink);\r\n        var data = d3.csvParse(await response.text(), d3.autoType);\r\n\r\n        var edges = [];\r\n        var nodes = [];\r\n\r\n        // \"edgeWeights.weight[source][target]\" can be used to get the weight of the source-target edge\r\n        // \"edgeWeights.maxWeight\" is the largest edge weight in the dataset\r\n        // this is used as an intermediary variable to calculate wEdges (weighted edges)\r\n        var edgeWeights = {\r\n          weight: {},\r\n          maxWeight: 0,\r\n        };\r\n\r\n        // weighted edges (maybe we will replace edges with this, as it adds weights to edges and also should improve performance)\r\n        var wEdges = [];\r\n\r\n        // this function auto-executes whenever visualise is clicked\r\n        // the purpose of this function is to calculate the minDate and the maxDate of the given dataset\r\n        (function () {\r\n\r\n          maxDate = new Date(-3155692597470);\r\n          minDate = new Date(3155692597470);\r\n\r\n          data.forEach((x) => {\r\n            // check if current date is larger than maxDate\r\n            if (x.date > maxDate) {\r\n              maxDate = x.date;\r\n            }\r\n\r\n            // check if current date is smaller than minDate\r\n            if (x.date < minDate) {\r\n              minDate = x.date;\r\n            }\r\n          });\r\n\r\n          document.getElementById(\"range\").max = maxDate.getTime();\r\n          document.getElementById(\"range\").min = minDate.getTime();\r\n          // document.getElementById(\"range\").value = (maxDate.getTime()+minDate.getTime())/2;\r\n\r\n        })();\r\n\r\n        this.showRangeValue();  // display date right after pressing visualise\r\n\r\n        data=data.filter((x) => {return x.date<=document.getElementById(\"range\").value;});  // filter out datapoints given the slider\r\n\r\n        data.forEach((x) => {\r\n          var objNodesTo = {};\r\n          var objNodesFrom = {};\r\n\r\n          var index = nodes.findIndex((o) => o.employeeID == x.fromId);\r\n          if (index === -1) {\r\n            objNodesFrom[\"employeeID\"] = x.fromId;\r\n            objNodesFrom[\"email\"] = x.fromEmail;\r\n            objNodesFrom[\"name\"]=this.extractName(x.fromEmail);\r\n            objNodesFrom[\"jobTitle\"] = x.fromJobtitle;\r\n            nodes.push(objNodesFrom);\r\n\r\n            // add missing node ID to edgeWeights\r\n            edgeWeights.weight[x.fromId] = {};\r\n          }\r\n\r\n          var index2 = nodes.findIndex((o) => o.employeeID == x.toId);\r\n          if (index2 === -1) {\r\n            objNodesTo[\"employeeID\"] = x.toId;\r\n            objNodesTo[\"email\"] = x.toEmail;\r\n            objNodesTo[\"name\"]=this.extractName(x.toEmail);\r\n            objNodesTo[\"jobTitle\"] = x.toJobtitle;\r\n            nodes.push(objNodesTo);\r\n\r\n            // add missing node ID to edgeWeights\r\n            edgeWeights.weight[x.toId] = {};\r\n          }\r\n\r\n          // init current edge with weight 0\r\n          edgeWeights.weight[x.fromId][x.toId] = 0;\r\n          let temp = ++edgeWeights.weight[x.fromId][x.toId];\r\n\r\n          if (temp > edgeWeights.maxWeight) {\r\n            edgeWeights.maxWeight = temp;\r\n          }\r\n        });\r\n\r\n        // calculate edgeWeight values\r\n        data.forEach((x) => {\r\n          let temp = ++edgeWeights.weight[x.fromId][x.toId];\r\n\r\n          if (temp > edgeWeights.maxWeight) {\r\n            edgeWeights.maxWeight = temp;\r\n          }\r\n\r\n          // add the edges to the edges array.\r\n          var objEdges = {};\r\n          objEdges[\"source\"] = x.fromId;\r\n          objEdges[\"target\"] = x.toId;\r\n          objEdges[\"sentiment\"] = x.sentiment;\r\n          objEdges[\"messageType\"] = x.messageType;\r\n          objEdges[\"date\"] = x.date;\r\n          objEdges[\"weight\"] = edgeWeights.weight[x.fromId][x.toId];\r\n          edges.push(objEdges);\r\n        });\r\n\r\n        // create array of weighted edges\r\n        Object.keys(edgeWeights.weight).forEach((fromId) => {\r\n          Object.keys(edgeWeights.weight[fromId]).forEach((toId) => {\r\n            let objEdges = {};\r\n            objEdges[\"source\"] = fromId;\r\n            objEdges[\"target\"] = toId;\r\n            objEdges[\"weight\"] = edgeWeights.weight[fromId][toId];\r\n            wEdges.push(objEdges);\r\n          });\r\n        });\r\n        \r\n        generateNetworkCanvas(edges, nodes, selectedNodes);\r\n        generateMatrix(wEdges, nodes, edgeWeights);\r\n    },\r\n\r\n    openBar() {\r\n      document.getElementById(\"theSidebar\").style.width = \"300px\";\r\n      document.getElementById(\"visLeft\").style.marginLeft = \"300px\";\r\n    },\r\n\r\n    closeBar() {\r\n      document.getElementById(\"theSidebar\").style.width = \"0\";\r\n      document.getElementById(\"visLeft\").style.marginLeft = \"0\";\r\n    },\r\n\r\n    selectFile(event) {\r\n      this.selectedFile = event.target.files[0]; //Selects the uploaded file and assigns it to the \"selectedFile\" variable.\r\n      //TODO: Add proper checks to ensure that the files given are csv files.\r\n    },\r\n\r\n    uploadFile() {\r\n      let fileName = `${this.selectedFile.name}`;\r\n      var storageRef = firebase.storage().ref(fileName);\r\n      let uploadTask = storageRef.put(this.selectedFile);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        () => {},\r\n        (error) => {\r\n          //Handle unsuccessfull uploads.\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          //Handle successfull uploads.\r\n          uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n            this.datasets.fileLink = downloadURL;\r\n            this.saveDataToDB();\r\n          });\r\n        }\r\n      );\r\n    },\r\n\r\n    saveDataToDB() {\r\n      db.collection(\"datasets\")\r\n        .add(this.datasets)\r\n        .then((docRef) => {\r\n          var sucMsg = document.getElementById(\"msg\");\r\n          sucMsg.innerHTML = \"The dataset has been uploaded successfully.\";\r\n          console.log(\"Document written with ID: \", docRef.id);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding document: \", error);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.visGrid {\r\n  position: absolute;\r\n  display: grid;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #3f3f3f;\r\n  grid-template-columns: 1fr 1fr;\r\n  color: white;\r\n  z-index: -10;\r\n  transition: margin-left 0.5s;\r\n}\r\n\r\n#viscontent {\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  transition: margin-left 0.5s;\r\n}\r\n\r\n.sidebar {\r\n  height: 100%;\r\n  width: 0;\r\n  position: fixed;\r\n  z-index: 2;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: black;\r\n  color: white;\r\n  overflow-x: hidden;\r\n  padding-top: 60px;\r\n  transition: 0.5s; /* 0.5 second transition effect to slide in the sidebar */\r\n  float: left;\r\n}\r\n\r\n.sidebar a:hover {\r\n  color: #f1f1f1;\r\n}\r\n\r\n.sidebar .closebtn {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 25px;\r\n  font-size: 35px;\r\n  margin-left: 50px;\r\n  padding: 8px;\r\n  text-decoration: none;\r\n  color: #818181;\r\n  display: block;\r\n  transition: 0.3s;\r\n}\r\n\r\n.openbtn {\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  background-color: black;\r\n  color: white;\r\n  padding: 10px 15px;\r\n  border: none;\r\n}\r\n\r\n.openbtn:hover {\r\n  color: black;\r\n  background-color: #42b983;\r\n  transition: 0.3s;\r\n}\r\n\r\n.sidebarButton {\r\n  position: absolute;\r\n  transition: margin-left 0.5s;\r\n  text-align: left;\r\n  z-index: 1;\r\n}\r\n\r\n.dataList {\r\n  height: 50%;\r\n  overflow-y: auto;\r\n}\r\n\r\n.fileUpload {\r\n  border-bottom: 2px solid white;\r\n}\r\n\r\n.windowSelection {\r\n  padding: 30px;\r\n  border-bottom: 2px solid white;\r\n}\r\n\r\n.type {\r\n  margin-top: 0.5cm;\r\n}\r\n\r\n#visLeft {\r\n  transition: margin-left 0.5s;\r\n  border-right: 3px solid white;\r\n}\r\n\r\n#visRight {\r\n  transition: margin-left 0.5s;\r\n}\r\n\r\n.sliderDiv {\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  background-color: #2c3e50;\r\n  height: 40px;\r\n}\r\n\r\n.slider {\r\n  width: 80%;\r\n}\r\n\r\n#rangeValue {\r\n  color: white;\r\n}\r\n</style>\r\n"],"sourceRoot":""}]}