{"remainingRequest":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\src\\views\\Home.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\src\\views\\Home.vue","mtime":1622190312776},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzLzIwMjAyNDgyL0RvY3VtZW50cy9HaXRIdWIvREJMLVByb2plY3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luLmpzIjsKaW1wb3J0IFNpZGViYXIgZnJvbSAnLi9TaWRlYmFyLnZ1ZSc7CmltcG9ydCBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZSc7CmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJzsKaW1wb3J0IHsgZGIgfSBmcm9tICcuLi9tYWluJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdIb21lJywKICBjb21wb25lbnRzOiB7CiAgICBTaWRlYmFyOiBTaWRlYmFyCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YXNldHM6IHsKICAgICAgICBmaWxlTGluazogbnVsbCwKICAgICAgICBkYXRhTmFtZTogbnVsbAogICAgICB9LAogICAgICBzZWxlY3RlZEZpbGU6IG51bGwsCiAgICAgIGRhdGFzZXRObzogMAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldEFsbERhdGFiYXNlRW50cmllcygpOyAvL3RoZSBtb3VudGVkKCkgbGlmZWN5Y2xlIGV4ZWN1dGVzIGFmdGVyIGFsbCBjb21wb25lbnRzIG9mIHRoZSBwYWdlIGhhdmUgZmluaXNoZWQgbG9hZGluZywgc28gYWZ0ZXIgdGhlIHBhZ2UgaXMgcmVhZHkKICAgIC8vIHRoZSBwcmV2aW91cyB1cGxvYWRlZCBkYXRhc2V0cyBhcmUgdmlzaWJsZSBpbiB0aGUgcGFnZS4KICB9LAogIG1ldGhvZHM6IHsKICAgIHNlbGVjdEZpbGU6IGZ1bmN0aW9uIHNlbGVjdEZpbGUoZXZlbnQpIHsKICAgICAgdGhpcy5zZWxlY3RlZEZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbMF07IC8vU2VsZWN0cyB0aGUgdXBsb2FkZWQgZmlsZSBhbmQgYXNzaWducyBpdCB0byB0aGUgInNlbGVjdGVkRmlsZSIgdmFyaWFibGUuCiAgICAgIC8vVE9ETzogQWRkIHByb3BlciBjaGVja3MgdG8gZW5zdXJlIHRoYXQgdGhlIGZpbGVzIGdpdmVuIGFyZSBjc3YgZmlsZXMuCiAgICB9LAogICAgdXBsb2FkRmlsZTogZnVuY3Rpb24gdXBsb2FkRmlsZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBmaWxlTmFtZSA9ICIiLmNvbmNhdCh0aGlzLnNlbGVjdGVkRmlsZS5uYW1lKTsKICAgICAgdmFyIHN0b3JhZ2VSZWYgPSBmaXJlYmFzZS5zdG9yYWdlKCkucmVmKGZpbGVOYW1lKTsKICAgICAgdmFyIHVwbG9hZFRhc2sgPSBzdG9yYWdlUmVmLnB1dCh0aGlzLnNlbGVjdGVkRmlsZSk7CiAgICAgIHVwbG9hZFRhc2sub24oJ3N0YXRlX2NoYW5nZWQnLCBmdW5jdGlvbiAoKSB7fSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgLy9IYW5kbGUgdW5zdWNjZXNzZnVsbCB1cGxvYWRzLgogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSwgZnVuY3Rpb24gKCkgewogICAgICAgIC8vSGFuZGxlIHN1Y2Nlc3NmdWxsIHVwbG9hZHMuCiAgICAgICAgdXBsb2FkVGFzay5zbmFwc2hvdC5yZWYuZ2V0RG93bmxvYWRVUkwoKS50aGVuKGZ1bmN0aW9uIChkb3dubG9hZFVSTCkgewogICAgICAgICAgX3RoaXMuZGF0YXNldHMuZmlsZUxpbmsgPSBkb3dubG9hZFVSTDsKCiAgICAgICAgICBfdGhpcy5zYXZlRGF0YVRvREIoKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgc2F2ZURhdGFUb0RCOiBmdW5jdGlvbiBzYXZlRGF0YVRvREIoKSB7CiAgICAgIGRiLmNvbGxlY3Rpb24oImRhdGFzZXRzIikuYWRkKHRoaXMuZGF0YXNldHMpLnRoZW4oZnVuY3Rpb24gKGRvY1JlZikgewogICAgICAgIHZhciBzdWNNc2cgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibXNnIik7CiAgICAgICAgc3VjTXNnLmlubmVySFRNTCA9ICJUaGUgZGF0YXNldCBoYXMgYmVlbiB1cGxvYWRlZCBzdWNjZXNzZnVsbHkuIjsKICAgICAgICBjb25zb2xlLmxvZygiRG9jdW1lbnQgd3JpdHRlbiB3aXRoIElEOiAiLCBkb2NSZWYuaWQpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCJFcnJvciBhZGRpbmcgZG9jdW1lbnQ6ICIsIGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgc2hvd0RhdGFiYXNlRW50cmllczogZnVuY3Rpb24gc2hvd0RhdGFiYXNlRW50cmllcyhuYW1lLCBsaW5rKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIHVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xpc3QnKTsKICAgICAgdmFyIGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7CgogICAgICB2YXIgX25hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwoKICAgICAgdmFyIF92aXN1YWxpc2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTsKCiAgICAgIHZhciB2aXNEaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmlzUmlnaHQnKTsgLy8gdmFyIHRlc3RQYXJhZ2hyYXBoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaDIiKTsKCiAgICAgIGhlYWRlci5pbm5lckhUTUwgPSAiRGF0YXNldC0iICsgKyt0aGlzLmRhdGFzZXRObzsKICAgICAgX25hbWUuaW5uZXJIVE1MID0gIk5hbWUgb2YgdGhlIGRhdGFzZXQ6ICIgKyBuYW1lOwogICAgICBfdmlzdWFsaXNlLmlubmVySFRNTCA9ICJWaXN1YWxpc2UiOwogICAgICBfdmlzdWFsaXNlLm9uY2xpY2sgPSAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZSwgZGF0YSwgZWRnZXMsIG5vZGVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHZpc0Rpdi5pbm5lckhUTUwgPSAiIjsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKGxpbmspOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IGQzOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UudGV4dCgpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfY29udGV4dC50MSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MiA9IGQzLmF1dG9UeXBlOwogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnQwLmNzdlBhcnNlLmNhbGwoX2NvbnRleHQudDAsIF9jb250ZXh0LnQxLCBfY29udGV4dC50Mik7CiAgICAgICAgICAgICAgICBlZGdlcyA9IFtdOwogICAgICAgICAgICAgICAgbm9kZXMgPSBbXTsgLy9jb25zb2xlLmxvZyhkYXRhKTsKCiAgICAgICAgICAgICAgICBkYXRhLmZvckVhY2goZnVuY3Rpb24gKHgpIHsKICAgICAgICAgICAgICAgICAgdmFyIG9iakVkZ2VzID0ge307CiAgICAgICAgICAgICAgICAgIG9iakVkZ2VzWyJzb3VyY2UiXSA9IHguZnJvbUlkOwogICAgICAgICAgICAgICAgICBvYmpFZGdlc1sidGFyZ2V0Il0gPSB4LnRvSWQ7CiAgICAgICAgICAgICAgICAgIGVkZ2VzLnB1c2gob2JqRWRnZXMpOwogICAgICAgICAgICAgICAgICB2YXIgb2JqTm9kZXNUbyA9IHt9OwogICAgICAgICAgICAgICAgICB2YXIgb2JqTm9kZXNGcm9tID0ge307CiAgICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IG5vZGVzLmZpbmRJbmRleChmdW5jdGlvbiAobykgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBvLmVtcGxveWVlSUQgPT0geC5mcm9tSWQ7CiAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgaWYgKGluZGV4ID09PSAtMSkgewogICAgICAgICAgICAgICAgICAgIG9iak5vZGVzRnJvbVsiZW1wbG95ZWVJRCJdID0geC5mcm9tSWQ7CiAgICAgICAgICAgICAgICAgICAgbm9kZXMucHVzaChvYmpOb2Rlc0Zyb20pOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICB2YXIgaW5kZXgyID0gbm9kZXMuZmluZEluZGV4KGZ1bmN0aW9uIChvKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG8uZW1wbG95ZWVJRCA9PSB4LnRvSWQ7CiAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgaWYgKGluZGV4MiA9PT0gLTEpIHsKICAgICAgICAgICAgICAgICAgICBvYmpOb2Rlc1RvWyJlbXBsb3llZUlEIl0gPSB4LnRvSWQ7CiAgICAgICAgICAgICAgICAgICAgbm9kZXMucHVzaChvYmpOb2Rlc1RvKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlZGdlcyk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhub2Rlcyk7CgogICAgICAgICAgICAgICAgX3RoaXMyLmdlbmVyYXRlTmV0d29yayhlZGdlcywgbm9kZXMpOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKICAgICAgdWwuYXBwZW5kQ2hpbGQoaGVhZGVyKTsKICAgICAgdWwuYXBwZW5kQ2hpbGQoX25hbWUpOwogICAgICB1bC5hcHBlbmRDaGlsZChfdmlzdWFsaXNlKTsKICAgIH0sCiAgICBnZXRBbGxEYXRhYmFzZUVudHJpZXM6IGZ1bmN0aW9uIGdldEFsbERhdGFiYXNlRW50cmllcygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICBkYi5jb2xsZWN0aW9uKCdkYXRhc2V0cycpLmdldCgpLnRoZW4oZnVuY3Rpb24gKHNuYXBzaG90KSB7CiAgICAgICAgc25hcHNob3QuZm9yRWFjaChmdW5jdGlvbiAoZG9jKSB7CiAgICAgICAgICB2YXIgbmFtZSA9IGRvYy5kYXRhKCkuZGF0YU5hbWU7CiAgICAgICAgICB2YXIgbGluayA9IGRvYy5kYXRhKCkuZmlsZUxpbms7CgogICAgICAgICAgX3RoaXMzLnNob3dEYXRhYmFzZUVudHJpZXMobmFtZSwgbGluayk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGdlbmVyYXRlTmV0d29yazogZnVuY3Rpb24gZ2VuZXJhdGVOZXR3b3JrKGVkZ2VzLCBub2RlcykgewogICAgICB2YXIgdyA9IDAuNSAqIHdpbmRvdy5pbm5lcldpZHRoOwogICAgICB2YXIgaCA9IDAuOSAqIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3Zpc0dyaWQnKS5jbGllbnRIZWlnaHQ7CiAgICAgIHZhciBzdmcgPSBkMy5zZWxlY3QoIiN2aXNSaWdodCIpLmFwcGVuZCgic3ZnIikuYXR0cigid2lkdGgiLCB3KS5hdHRyKCJoZWlnaHQiLCBoKS5zdHlsZSgiYmFja2dyb3VuZCIsICJibGFjayIpLmNhbGwoZDMuem9vbSgpLm9uKCd6b29tJywgZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgc3ZnLmF0dHIoJ3RyYW5zZm9ybScsIGV2ZW50LnRyYW5zZm9ybSkuc2NhbGVFeHRlbnQoWzEsIDI0XSk7CiAgICAgIH0pKS5hcHBlbmQoJ2cnKTsKICAgICAgdmFyIHNpbXVsYXRpb24gPSBkMy5mb3JjZVNpbXVsYXRpb24obm9kZXMpLmZvcmNlKCJjaGFyZ2UiLCBkMy5mb3JjZU1hbnlCb2R5KCkuc3RyZW5ndGgoLTUwKSkuZm9yY2UoImxpbmsiLCBkMy5mb3JjZUxpbmsoKS5pZChmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmVtcGxveWVlSUQ7CiAgICAgIH0pLmxpbmtzKGVkZ2VzKSkuZm9yY2UoImNlbnRlciIsIGQzLmZvcmNlQ2VudGVyKHcgLyAyLCBoIC8gMikpLm9uKCJlbmQiLCB0aWNrZWQpOwogICAgICB2YXIgZWRnZSA9IHN2Zy5hcHBlbmQoImciKS5hdHRyKCJjbGFzcyIsICJsaW5rcyIpLnNlbGVjdEFsbCgibGluZSIpLmRhdGEoZWRnZXMpLmVudGVyKCkuYXBwZW5kKCJsaW5lIikuc3R5bGUoInN0cm9rZSIsICIjYWFhIik7CiAgICAgIHZhciBub2RlID0gc3ZnLmFwcGVuZCgiZyIpLmF0dHIoImNsYXNzIiwgIm5vZGVzIikuc2VsZWN0QWxsKCJjaXJjbGUiKS5kYXRhKG5vZGVzKS5qb2luKCJjaXJjbGUiKS5hdHRyKCJyIiwgNSkuYXR0cigiZmlsbCIsIGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gImJsdWUiOwogICAgICB9KTsgLy8uY2FsbChkcmFnTm9kZXMoc2ltdWxhdGlvbikpOwoKICAgICAgZnVuY3Rpb24gdGlja2VkKCkgewogICAgICAgIGVkZ2UuYXR0cigieDEiLCBmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGQuc291cmNlLng7CiAgICAgICAgfSkuYXR0cigieTEiLCBmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGQuc291cmNlLnk7CiAgICAgICAgfSkuYXR0cigieDIiLCBmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGQudGFyZ2V0Lng7CiAgICAgICAgfSkuYXR0cigieTIiLCBmdW5jdGlvbiAoZCkgewogICAgICAgICAgcmV0dXJuIGQudGFyZ2V0Lnk7CiAgICAgICAgfSk7CiAgICAgICAgbm9kZS5hdHRyKCJjeCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC54OwogICAgICAgIH0pLmF0dHIoImN5IiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICAgIHJldHVybiBkLnk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgICAgLypmdW5jdGlvbiBkcmFnTm9kZXMoc2ltdWxhdGlvbikgeyAvLyBUaGlzIG5lZWRzIGEgbG90IG1vcmUgb3B0aW1pemF0aW9uLCBzbyBpdCBpcyBiZWluZyBsZWZ0IG91dCBmb3IgdGhlIHByb3RvdHlwZS4NCiAgICAgICAgZnVuY3Rpb24gZHJhZ1N0YXJ0ZWQoZXZlbnQpIHsNCiAgICAgICAgICBpZiAoIWV2ZW50LmFjdGl2ZSkgc2ltdWxhdGlvbi5hbHBoYVRhcmdldCgwLjMpLnJlc3RhcnQoKTsNCiAgICAgICAgICBldmVudC5zdWJqZWN0LmZ4ID0gZXZlbnQuc3ViamVjdC54Ow0KICAgICAgICAgIGV2ZW50LnN1YmplY3QuZnkgPSBldmVudC5zdWJqZWN0Lnk7DQogICAgICAgIH0NCiAgICAgICAgDQogICAgICAgIGZ1bmN0aW9uIGRyYWdnZWQoZXZlbnQpIHsNCiAgICAgICAgICBldmVudC5zdWJqZWN0LmZ4ID0gZXZlbnQueDsNCiAgICAgICAgICBldmVudC5zdWJqZWN0LmZ5ID0gZXZlbnQueTsNCiAgICAgICAgfQ0KICAgICAgICANCiAgICAgICAgZnVuY3Rpb24gZHJhZ0VuZGVkKGV2ZW50KSB7DQogICAgICAgICAgaWYgKCFldmVudC5hY3RpdmUpIHNpbXVsYXRpb24uYWxwaGFUYXJnZXQoMCk7DQogICAgICAgICAgZXZlbnQuc3ViamVjdC5meCA9IG51bGw7DQogICAgICAgICAgZXZlbnQuc3ViamVjdC5meSA9IG51bGw7DQogICAgICAgIH0NCiAgICAgICAgDQogICAgICAgIHJldHVybiBkMy5kcmFnKCkNCiAgICAgICAgICAgIC5vbigic3RhcnQiLCBkcmFnU3RhcnRlZCkNCiAgICAgICAgICAgIC5vbigiZHJhZyIsIGRyYWdnZWQpDQogICAgICAgICAgICAub24oImVuZCIsIGRyYWdFbmRlZCk7DQogICAgICB9Ki8KCgogICAgICBjb25zb2xlLmxvZyhzaW11bGF0aW9uKTsKICAgICAgcmV0dXJuIHN2Zy5ub2RlKCk7CiAgICB9CiAgICAvKmdlbmVyYXRlTmV0d29ya1dpdGhDYW52YXMoZWRnZXMsIG5vZGVzKSB7IC8vVHJ5aW5nIHRvIG9wdGltaXplIGJ5IHVzaW5nIGEgY2FudmFzIGluc3RlYWQgb2Ygc3ZnLCBzaG91bGQgaW1wcm92ZSBwZXJmb3JtYW5jZSBvZiB0aGUgZnVsbCBkYXRhc2V0IHF1aXRlIGEgYml0LCBidXQganVzdCB0ZXN0aW5nIGF0bS4gTm90IGluY2x1ZGVkIGluIHRoZSBwcm90b3R5cGUuDQogICAgICAgICAgdmFyIHcgPSAxMDAwOw0KICAgICAgICAgIHZhciBoID0gNjAwOw0KICAgICAgICAgIHZhciByID0gNTsNCiAgICANCiAgICAgICAgICB2YXIgaHRtbENhbnZhcyA9IGQzDQogICAgICAgICAgICAuc2VsZWN0KCIjdmlzIikNCiAgICAgICAgICAgIC5hcHBlbmQoImNhbnZhcyIpDQogICAgICAgICAgICAuYXR0cigid2lkdGgiLCB3KQ0KICAgICAgICAgICAgLmF0dHIoImhlaWdodCIsIGgpDQogICAgICAgICAgICAuc3R5bGUoImJhY2tncm91bmQiLCAiYmxhY2siKTsNCiAgICAgICAgICANCiAgICAgICAgICB2YXIgY2FudmFzVG9vbGJveCA9IGh0bWxDYW52YXMubm9kZSgpLmdldENvbnRleHQoJzJkJyk7IC8vQ2FudmFzIHRvb2xib3gsIGl0IGlzIGFuIG9iamVjdCBjYXJyeWluZyBhbGwgdGhlIHByb3BlcnRpZXMgYW5kIG1ldGhvZHMgd2UgbmVlZCB0byBkcmF3IG9uIHRoZSBjYW52YXMuDQogICAgICAgICAgDQogICAgICAgICAgLy92YXIgZGl2ID0gZDMuc2VsZWN0KCJib2R5IikuYXBwZW5kKCJkaXYiKS5hdHRyKCJjbGFzcyIsICJ0b29sdGlwIikuc3R5bGUoIm9wYWNpdHkiLCAwKTsNCiAgICAgICAgICANCiAgICAgICAgICB2YXIgc2ltdWxhdGlvbiA9IGQzLmZvcmNlU2ltdWxhdGlvbihub2RlcykNCiAgICAgICAgICAgICAgLmZvcmNlKCJjaGFyZ2UiLCBkMy5mb3JjZU1hbnlCb2R5KCkuc3RyZW5ndGgoLTMwKSkNCiAgICAgICAgICAgICAgLmZvcmNlKCJ4IiwgZDMuZm9yY2VYKHcgLyAyKS5zdHJlbmd0aCgwLjEpKQ0KICAgICAgICAgICAgICAuZm9yY2UoInkiLCBkMy5mb3JjZVkoaCAvIDIpLnN0cmVuZ3RoKDAuMSkpDQogICAgICAgICAgICAgIC5mb3JjZSgibGluayIsIGQzLmZvcmNlTGluaygpLmlkKGZ1bmN0aW9uIChkKSB7cmV0dXJuIGQuZW1wbG95ZWVJRDt9KS5saW5rcyhlZGdlcykpDQogICAgICAgICAgICAgIC5mb3JjZSgiY2VudGVyIiwgZDMuZm9yY2VDZW50ZXIodyAvIDIsIGggLyAyKSk7DQogICAgICAgICAgDQogICAgICAgICAgdmFyIHRyYW5zZm9ybSA9IGQzLnpvb21JZGVudGl0eTsNCiAgICANCiAgICAgICAgICBpbml0R3JhcGgoZWRnZXMsIG5vZGVzKTsNCiAgICANCiAgICAgICAgICBmdW5jdGlvbiBpbml0R3JhcGgoZWRnZXMsIG5vZGVzKSB7DQogICAgICAgICAgICANCiAgICAgICAgICAgIGZ1bmN0aW9uIHpvb21lZChldmVudCkgew0KICAgICAgICAgICAgICBjb25zb2xlLmxvZygiem9vbWluZyIpOw0KICAgICAgICAgICAgICB0cmFuc2Zvcm0gPSBldmVudC50cmFuc2Zvcm07DQogICAgICAgICAgICAgIHRpY2tlZCgpDQogICAgICAgICAgICB9DQogICAgICAgICAgICBjb25zb2xlLmxvZygiSGVsbG8iKQ0KICAgICAgICAgICAgZDMuc2VsZWN0KGh0bWxDYW52YXMpDQogICAgICAgICAgICAgICAgLmNhbGwoZDMuZHJhZygpLnN1YmplY3QoZHJhZ3N1YmplY3QpLm9uKCJzdGFydCIsIGRyYWdTdGFydGVkKS5vbigiZHJhZyIsIGRyYWdnZWQpLm9uKCJlbmQiLGRyYWdFbmRlZCkpDQogICAgICAgICAgICAgICAgLmNhbGwoZDMuem9vbSgpLnNjYWxlRXh0ZW50KFsxIC8gMTAsIDhdKS5vbigiem9vbSIsIHpvb21lZCkpOw0KICAgICAgICAgICAgDQogICAgICAgICAgICBmdW5jdGlvbiBkcmFnc3ViamVjdChldmVudCkgew0KICAgICAgICAgICAgICB2YXIgaSwNCiAgICAgICAgICAgICAgeCA9IHRyYW5zZm9ybS5pbnZlcnRYKGV2ZW50LngpLA0KICAgICAgICAgICAgICB5ID0gdHJhbnNmb3JtLmludmVydFkoZXZlbnQueSksDQogICAgICAgICAgICAgIGR4LA0KICAgICAgICAgICAgICBkeTsNCiAgICAgICAgICAgICAgZm9yIChpID0gbm9kZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHsNCiAgICAgICAgICAgICAgICB2YXIgbm9kZSA9IG5vZGVzW2ldOw0KICAgICAgICAgICAgICAgIGR4ID0geCAtIG5vZGUueDsNCiAgICAgICAgICAgICAgICBkeSA9IHkgLSBub2RlLnk7DQogICAgDQogICAgICAgICAgICAgICAgaWYgKGR4ICogZHggKyBkeSAqIGR5IDwgciAqIHIpIHsNCiAgICANCiAgICAgICAgICAgICAgICAgIG5vZGUueCA9ICB0cmFuc2Zvcm0uYXBwbHlYKG5vZGUueCk7DQogICAgICAgICAgICAgICAgICBub2RlLnkgPSB0cmFuc2Zvcm0uYXBwbHlZKG5vZGUueSk7DQogICAgDQogICAgICAgICAgICAgICAgICByZXR1cm4gbm9kZTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGZ1bmN0aW9uIGRyYWdTdGFydGVkKGV2ZW50KSB7DQogICAgICAgICAgICAgICAgaWYgKCFldmVudC5hY3RpdmUpIHNpbXVsYXRpb24uYWxwaGFUYXJnZXQoMC4zKS5yZXN0YXJ0KCk7DQogICAgICAgICAgICAgICAgZXZlbnQuc3ViamVjdC5meCA9IGV2ZW50LnN1YmplY3QueDsNCiAgICAgICAgICAgICAgICBldmVudC5zdWJqZWN0LmZ5ID0gZXZlbnQuc3ViamVjdC55Ow0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgIA0KICAgICAgICAgICAgICBmdW5jdGlvbiBkcmFnZ2VkKGV2ZW50KSB7DQogICAgICAgICAgICAgICAgZXZlbnQuc3ViamVjdC5meCA9IGV2ZW50Lng7DQogICAgICAgICAgICAgICAgZXZlbnQuc3ViamVjdC5meSA9IGV2ZW50Lnk7DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgDQogICAgICAgICAgICAgIGZ1bmN0aW9uIGRyYWdFbmRlZChldmVudCkgew0KICAgICAgICAgICAgICAgIGlmICghZXZlbnQuYWN0aXZlKSBzaW11bGF0aW9uLmFscGhhVGFyZ2V0KDApOw0KICAgICAgICAgICAgICAgIGV2ZW50LnN1YmplY3QuZnggPSBudWxsOw0KICAgICAgICAgICAgICAgIGV2ZW50LnN1YmplY3QuZnkgPSBudWxsOw0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgIHNpbXVsYXRpb24ubm9kZXMobm9kZXMpLm9uKCd0aWNrJywgdGlja2VkKTsNCiAgICAgICAgICAgICAgc2ltdWxhdGlvbi5mb3JjZSgibGluayIpLmxpbmtzKGVkZ2VzKTsNCiAgICAgICAgICAgICAgDQogICAgICAgICAgICAgIGZ1bmN0aW9uIHRpY2tlZCgpIHsNCiAgICAgICAgICAgICAgY2FudmFzVG9vbGJveC5zYXZlKCk7DQogICAgICAgICAgICAgIGNhbnZhc1Rvb2xib3guY2xlYXJSZWN0KDAsIDAsIHcsIGgpOw0KICAgICAgICAgICAgICBjYW52YXNUb29sYm94LnRyYW5zbGF0ZSh0cmFuc2Zvcm0ueCwgdHJhbnNmb3JtLnkpOw0KICAgICAgICAgICAgICBjYW52YXNUb29sYm94LnNjYWxlKHRyYW5zZm9ybS5rLCB0cmFuc2Zvcm0uayk7DQogICAgDQogICAgICAgICAgICAgIGVkZ2VzLmZvckVhY2goZnVuY3Rpb24gKGQpIHsNCiAgICAgICAgICAgICAgICBjYW52YXNUb29sYm94LmJlZ2luUGF0aCgpOw0KICAgICAgICAgICAgICAgIGNhbnZhc1Rvb2xib3gubW92ZVRvKGQuc291cmNlLngsIGQuc291cmNlLnkpOw0KICAgICAgICAgICAgICAgIGNhbnZhc1Rvb2xib3gubGluZVRvKGQudGFyZ2V0LngsIGQudGFyZ2V0LnkpOw0KICAgICAgICAgICAgICAgIGNhbnZhc1Rvb2xib3guc3Ryb2tlKCk7DQogICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICBub2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7DQogICAgICAgICAgICAgICAgY2FudmFzVG9vbGJveC5iZWdpblBhdGgoKTsNCiAgICAgICAgICAgICAgICBjYW52YXNUb29sYm94LmFyYyhkLngsIGQueSwgciwgMCwgMiAqIE1hdGguUEksIHRydWUpOw0KICAgICAgICAgICAgICAgIGNhbnZhc1Rvb2xib3guZmlsbFN0eWxlID0gZC5jb2wgPyAicmVkIjoiYmxhY2siDQogICAgICAgICAgICAgICAgY2FudmFzVG9vbGJveC5maWxsKCk7DQogICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICBjYW52YXNUb29sYm94LnJlc3RvcmUoKTsNCiAgICAgICAgICAgIH0NCiAgICANCiAgICAgICAgICB9DQogICAgfSovCgogIH0KfTs="},{"version":3,"sources":["C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\src\\views\\Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"test\">\r\n    <div class=\"side\">\r\n      <Sidebar/>\r\n    </div>\r\n    <div class=\"visGrid\">\r\n      <div id=\"visLeft\">\r\n      </div>\r\n\r\n      <div id=\"visRight\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Sidebar from './Sidebar.vue'\r\nimport firebase from 'firebase';\r\nimport * as d3 from 'd3';\r\nimport {db} from '../main'\r\n\r\nexport default {\r\n  name: 'Home',\r\n  components: {\r\n    Sidebar\r\n  },\r\n    data () {\r\n      return {\r\n        datasets: {\r\n          fileLink: null,\r\n          dataName: null,\r\n        },\r\n          selectedFile: null,\r\n          datasetNo: 0\r\n      }\r\n  },\r\n  mounted() {\r\n    this.getAllDatabaseEntries(); //the mounted() lifecycle executes after all components of the page have finished loading, so after the page is ready\r\n                                  // the previous uploaded datasets are visible in the page.\r\n  },\r\n  methods: {\r\n      selectFile(event) {\r\n          this.selectedFile = event.target.files[0] //Selects the uploaded file and assigns it to the \"selectedFile\" variable.\r\n          //TODO: Add proper checks to ensure that the files given are csv files.\r\n      },\r\n      uploadFile() {\r\n          let fileName = `${this.selectedFile.name}`;\r\n          var storageRef = firebase.storage().ref(fileName);\r\n          let uploadTask = storageRef.put(this.selectedFile);\r\n          uploadTask.on('state_changed',() => {\r\n          }, (error) => {\r\n            //Handle unsuccessfull uploads.\r\n            console.log(error);\r\n          }, () => {\r\n            //Handle successfull uploads.\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n              this.datasets.fileLink = downloadURL;\r\n              this.saveDataToDB();\r\n            })\r\n          })\r\n          },\r\n      saveDataToDB() {\r\n          db.collection(\"datasets\").add(this.datasets).then((docRef) => {\r\n            var sucMsg = document.getElementById(\"msg\")\r\n            sucMsg.innerHTML = \"The dataset has been uploaded successfully.\"\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n          })\r\n          .catch( (error) => {\r\n            console.error(\"Error adding document: \", error);\r\n          })\r\n          },\r\n      showDatabaseEntries(name, link) {\r\n          var ul = document.getElementById('list');\r\n          var header = document.createElement('h2');\r\n          var _name = document.createElement('li');\r\n          var _visualise = document.createElement('button');\r\n          var visDiv = document.getElementById('visRight');\r\n         // var testParaghraph = document.createElement(\"h2\");\r\n          header.innerHTML = \"Dataset-\"+ (++this.datasetNo);\r\n          _name.innerHTML=\"Name of the dataset: \"+name;\r\n          _visualise.innerHTML = \"Visualise\";\r\n          _visualise.onclick = async () => {\r\n            visDiv.innerHTML=\"\";\r\n            const response = await fetch(link);\r\n            const data = d3.csvParse(await response.text(), d3.autoType);\r\n            var edges = [];\r\n            var nodes = [];\r\n            //console.log(data);\r\n            data.forEach((x) => {\r\n              var objEdges = {}\r\n              objEdges[\"source\"] = x.fromId;\r\n              objEdges[\"target\"] = x.toId;\r\n              edges.push(objEdges);\r\n              var objNodesTo = {}\r\n              var objNodesFrom = {}\r\n              var index = nodes.findIndex(o => o.employeeID == x.fromId)\r\n              if(index === -1) {\r\n                objNodesFrom[\"employeeID\"] = x.fromId;\r\n                nodes.push(objNodesFrom);\r\n              }\r\n              var index2 = nodes.findIndex(o => o.employeeID == x.toId)\r\n              if(index2 === -1) {\r\n                objNodesTo[\"employeeID\"] = x.toId;\r\n                nodes.push(objNodesTo);\r\n              }\r\n            })\r\n            console.log(edges);\r\n            console.log(nodes);\r\n            this.generateNetwork(edges, nodes);\r\n          }\r\n          ul.appendChild(header);\r\n          ul.appendChild(_name);\r\n          ul.appendChild(_visualise);\r\n        },\r\n      getAllDatabaseEntries() {\r\n          db.collection('datasets').get().then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n              let name = doc.data().dataName;\r\n              let link = doc.data().fileLink;\r\n              this.showDatabaseEntries(name, link);\r\n            }\r\n            )\r\n          }\r\n          )\r\n        },\r\n    generateNetwork(edges, nodes) {\r\n      var w = 0.5 * window.innerWidth;\r\n      var h = 0.9 * document.querySelector('visGrid').clientHeight;\r\n\r\n      var svg = d3\r\n        .select(\"#visRight\")\r\n        .append(\"svg\")\r\n        .attr(\"width\", w)\r\n        .attr(\"height\", h)\r\n        .style(\"background\", \"black\")\r\n        .call(d3.zoom().on('zoom', (event) => {\r\n            svg.attr('transform', event.transform).scaleExtent([1,24]);}))\r\n        .append('g');\r\n      \r\n      var simulation = d3.forceSimulation(nodes)\r\n          .force(\"charge\", d3.forceManyBody().strength(-50))\r\n          .force(\"link\", d3.forceLink().id(function (d) {return d.employeeID;}).links(edges))\r\n          .force(\"center\", d3.forceCenter(w / 2, h / 2))\r\n          .on(\"end\", ticked);\r\n\r\n        var edge = svg\r\n          .append(\"g\")\r\n          .attr(\"class\", \"links\")\r\n          .selectAll(\"line\")\r\n          .data(edges)\r\n          .enter()\r\n          .append(\"line\")\r\n          .style(\"stroke\", \"#aaa\");\r\n\r\n        var node = svg\r\n          .append(\"g\")\r\n          .attr(\"class\", \"nodes\")\r\n          .selectAll(\"circle\")\r\n          .data(nodes)\r\n          .join(\"circle\")\r\n          .attr(\"r\", 5)\r\n          .attr(\"fill\", function() {return \"blue\";})\r\n          //.call(dragNodes(simulation));\r\n        \r\n        function ticked() {\r\n          edge\r\n            .attr(\"x1\", function(d) {\r\n              return d.source.x;\r\n            })\r\n            .attr(\"y1\", function(d) {\r\n              return d.source.y;\r\n            })\r\n            .attr(\"x2\", function(d) {\r\n              return d.target.x;\r\n            })\r\n            .attr(\"y2\", function(d) {\r\n              return d.target.y;\r\n            });\r\n            \r\n            node\r\n              .attr(\"cx\", function(d) {\r\n              return d.x;\r\n            })\r\n              .attr(\"cy\", function(d) {\r\n              return d.y;\r\n            });\r\n        }\r\n        /*function dragNodes(simulation) { // This needs a lot more optimization, so it is being left out for the prototype.\r\n          function dragStarted(event) {\r\n            if (!event.active) simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n          }\r\n          \r\n          function dragged(event) {\r\n            event.subject.fx = event.x;\r\n            event.subject.fy = event.y;\r\n          }\r\n          \r\n          function dragEnded(event) {\r\n            if (!event.active) simulation.alphaTarget(0);\r\n            event.subject.fx = null;\r\n            event.subject.fy = null;\r\n          }\r\n          \r\n          return d3.drag()\r\n              .on(\"start\", dragStarted)\r\n              .on(\"drag\", dragged)\r\n              .on(\"end\", dragEnded);\r\n        }*/\r\n      console.log(simulation)\r\n      return svg.node();\r\n}\r\n/*generateNetworkWithCanvas(edges, nodes) { //Trying to optimize by using a canvas instead of svg, should improve performance of the full dataset quite a bit, but just testing atm. Not included in the prototype.\r\n      var w = 1000;\r\n      var h = 600;\r\n      var r = 5;\r\n\r\n      var htmlCanvas = d3\r\n        .select(\"#vis\")\r\n        .append(\"canvas\")\r\n        .attr(\"width\", w)\r\n        .attr(\"height\", h)\r\n        .style(\"background\", \"black\");\r\n      \r\n      var canvasToolbox = htmlCanvas.node().getContext('2d'); //Canvas toolbox, it is an object carrying all the properties and methods we need to draw on the canvas.\r\n      \r\n      //var div = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\r\n      \r\n      var simulation = d3.forceSimulation(nodes)\r\n          .force(\"charge\", d3.forceManyBody().strength(-30))\r\n          .force(\"x\", d3.forceX(w / 2).strength(0.1))\r\n          .force(\"y\", d3.forceY(h / 2).strength(0.1))\r\n          .force(\"link\", d3.forceLink().id(function (d) {return d.employeeID;}).links(edges))\r\n          .force(\"center\", d3.forceCenter(w / 2, h / 2));\r\n      \r\n      var transform = d3.zoomIdentity;\r\n\r\n      initGraph(edges, nodes);\r\n\r\n      function initGraph(edges, nodes) {\r\n        \r\n        function zoomed(event) {\r\n          console.log(\"zooming\");\r\n          transform = event.transform;\r\n          ticked()\r\n        }\r\n        console.log(\"Hello\")\r\n        d3.select(htmlCanvas)\r\n            .call(d3.drag().subject(dragsubject).on(\"start\", dragStarted).on(\"drag\", dragged).on(\"end\",dragEnded))\r\n            .call(d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed));\r\n        \r\n        function dragsubject(event) {\r\n          var i,\r\n          x = transform.invertX(event.x),\r\n          y = transform.invertY(event.y),\r\n          dx,\r\n          dy;\r\n          for (i = nodes.length - 1; i >= 0; --i) {\r\n            var node = nodes[i];\r\n            dx = x - node.x;\r\n            dy = y - node.y;\r\n\r\n            if (dx * dx + dy * dy < r * r) {\r\n\r\n              node.x =  transform.applyX(node.x);\r\n              node.y = transform.applyY(node.y);\r\n\r\n              return node;\r\n            }\r\n          }\r\n        }\r\n        function dragStarted(event) {\r\n            if (!event.active) simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n          }\r\n          \r\n          function dragged(event) {\r\n            event.subject.fx = event.x;\r\n            event.subject.fy = event.y;\r\n          }\r\n          \r\n          function dragEnded(event) {\r\n            if (!event.active) simulation.alphaTarget(0);\r\n            event.subject.fx = null;\r\n            event.subject.fy = null;\r\n          }\r\n          simulation.nodes(nodes).on('tick', ticked);\r\n          simulation.force(\"link\").links(edges);\r\n          \r\n          function ticked() {\r\n          canvasToolbox.save();\r\n          canvasToolbox.clearRect(0, 0, w, h);\r\n          canvasToolbox.translate(transform.x, transform.y);\r\n          canvasToolbox.scale(transform.k, transform.k);\r\n\r\n          edges.forEach(function (d) {\r\n            canvasToolbox.beginPath();\r\n            canvasToolbox.moveTo(d.source.x, d.source.y);\r\n            canvasToolbox.lineTo(d.target.x, d.target.y);\r\n            canvasToolbox.stroke();\r\n          });\r\n          nodes.forEach(function (d) {\r\n            canvasToolbox.beginPath();\r\n            canvasToolbox.arc(d.x, d.y, r, 0, 2 * Math.PI, true);\r\n            canvasToolbox.fillStyle = d.col ? \"red\":\"black\"\r\n            canvasToolbox.fill();\r\n          });\r\n          canvasToolbox.restore();\r\n        }\r\n\r\n      }\r\n}*/\r\n}\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n  .visGrid {\r\n    position: absolute;\r\n    display: grid;\r\n    width: 100%;\r\n    height: 90.5%;\r\n    background-color: #3f3f3f;\r\n    grid-template-columns: 1fr 1fr;\r\n    color: white;\r\n    z-index: -10;\r\n    transition: margin-left .5s;\r\n  }\r\n  \r\n  .side {\r\n    position: absolute;\r\n  }\r\n\r\n  #visLeft {\r\n    border-right: 3px solid white;\r\n    transition: margin-left .5s;\r\n  }\r\n\r\n  #visRight {\r\n    transition: margin-left .5s;\r\n  }\r\n</style>\r\n"],"sourceRoot":""}]}