{"remainingRequest":"/Users/berkaykosebay/Documents/GitHub/brkosebay/node_modules/babel-loader/lib/index.js!/Users/berkaykosebay/Documents/GitHub/brkosebay/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/berkaykosebay/Documents/GitHub/brkosebay/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/berkaykosebay/Documents/GitHub/brkosebay/src/views/fileUpload.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/berkaykosebay/Documents/GitHub/brkosebay/src/views/fileUpload.vue","mtime":1620236561638},{"path":"/Users/berkaykosebay/Documents/GitHub/brkosebay/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berkaykosebay/Documents/GitHub/brkosebay/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/berkaykosebay/Documents/GitHub/brkosebay/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berkaykosebay/Documents/GitHub/brkosebay/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9iZXJrYXlrb3NlYmF5L0RvY3VtZW50cy9HaXRIdWIvYnJrb3NlYmF5L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgZmlyZWJhc2UgZnJvbSAnZmlyZWJhc2UnOwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMy1kc3YnOwppbXBvcnQgeyBkYiB9IGZyb20gJy4uL21haW4nOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2ZpbGVVcGxvYWQnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhc2V0czogewogICAgICAgIGZpbGVMaW5rOiBudWxsLAogICAgICAgIGRhdGFOYW1lOiBudWxsCiAgICAgIH0sCiAgICAgIHNlbGVjdGVkRmlsZTogbnVsbCwKICAgICAgZGF0YXNldE5vOiAwCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0QWxsRGF0YWJhc2VFbnRyaWVzKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZWxlY3RGaWxlOiBmdW5jdGlvbiBzZWxlY3RGaWxlKGV2ZW50KSB7CiAgICAgIGNvbnNvbGUubG9nKGV2ZW50KTsKICAgICAgdGhpcy5zZWxlY3RlZEZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbMF07CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2VsZWN0ZWRGaWxlLm5hbWUpOwogICAgfSwKICAgIHVwbG9hZEZpbGU6IGZ1bmN0aW9uIHVwbG9hZEZpbGUoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgZmlsZU5hbWUgPSAiIi5jb25jYXQodGhpcy5zZWxlY3RlZEZpbGUubmFtZSk7CiAgICAgIHZhciBzdG9yYWdlUmVmID0gZmlyZWJhc2Uuc3RvcmFnZSgpLnJlZihmaWxlTmFtZSk7CiAgICAgIHZhciB1cGxvYWRUYXNrID0gc3RvcmFnZVJlZi5wdXQodGhpcy5zZWxlY3RlZEZpbGUpOwogICAgICB1cGxvYWRUYXNrLm9uKCdzdGF0ZV9jaGFuZ2VkJywgZnVuY3Rpb24gKCkge30sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIC8vSGFuZGxlIHVuc3VjY2Vzc2Z1bGwgdXBsb2Fkcy4KICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIH0sIGZ1bmN0aW9uICgpIHsKICAgICAgICAvL0hhbmRsZSBzdWNjZXNzZnVsbCB1cGxvYWRzLgogICAgICAgIHVwbG9hZFRhc2suc25hcHNob3QucmVmLmdldERvd25sb2FkVVJMKCkudGhlbihmdW5jdGlvbiAoZG93bmxvYWRVUkwpIHsKICAgICAgICAgIF90aGlzLmRhdGFzZXRzLmZpbGVMaW5rID0gZG93bmxvYWRVUkw7CgogICAgICAgICAgX3RoaXMuc2F2ZURhdGFUb0RCKCk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIHNhdmVEYXRhVG9EQjogZnVuY3Rpb24gc2F2ZURhdGFUb0RCKCkgewogICAgICBkYi5jb2xsZWN0aW9uKCJkYXRhc2V0cyIpLmFkZCh0aGlzLmRhdGFzZXRzKS50aGVuKGZ1bmN0aW9uIChkb2NSZWYpIHsKICAgICAgICBjb25zb2xlLmxvZygiRG9jdW1lbnQgd3JpdHRlbiB3aXRoIElEOiAiLCBkb2NSZWYuaWQpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCJFcnJvciBhZGRpbmcgZG9jdW1lbnQ6ICIsIGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgc2hvd0RhdGFiYXNlRW50cmllczogZnVuY3Rpb24gc2hvd0RhdGFiYXNlRW50cmllcyhuYW1lLCBsaW5rKSB7CiAgICAgIHZhciB1bCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsaXN0Jyk7CiAgICAgIHZhciBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpOwoKICAgICAgdmFyIF9uYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTsKCiAgICAgIHZhciBfdmlzdWFsaXNlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CgogICAgICBoZWFkZXIuaW5uZXJIVE1MID0gIkRhdGFzZXQtIiArICsrdGhpcy5kYXRhc2V0Tm87CiAgICAgIF9uYW1lLmlubmVySFRNTCA9ICJOYW1lIG9mIHRoZSBkYXRhc2V0OiAiICsgbmFtZTsKICAgICAgX3Zpc3VhbGlzZS5pbm5lckhUTUwgPSAiVmlzdWFsaXNlIjsKICAgICAgX3Zpc3VhbGlzZS5vbmNsaWNrID0gLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzcG9uc2UsIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2gobGluayk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gZDM7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS50ZXh0KCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQxID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQyID0gZDMuYXV0b1R5cGU7CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQudDAuY3N2UGFyc2UuY2FsbChfY29udGV4dC50MCwgX2NvbnRleHQudDEsIF9jb250ZXh0LnQyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKICAgICAgdWwuYXBwZW5kQ2hpbGQoaGVhZGVyKTsKICAgICAgdWwuYXBwZW5kQ2hpbGQoX25hbWUpOwogICAgICB1bC5hcHBlbmRDaGlsZChfdmlzdWFsaXNlKTsKICAgIH0sCiAgICBnZXRBbGxEYXRhYmFzZUVudHJpZXM6IGZ1bmN0aW9uIGdldEFsbERhdGFiYXNlRW50cmllcygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBkYi5jb2xsZWN0aW9uKCdkYXRhc2V0cycpLmdldCgpLnRoZW4oZnVuY3Rpb24gKHNuYXBzaG90KSB7CiAgICAgICAgc25hcHNob3QuZm9yRWFjaChmdW5jdGlvbiAoZG9jKSB7CiAgICAgICAgICB2YXIgbmFtZSA9IGRvYy5kYXRhKCkuZGF0YU5hbWU7CiAgICAgICAgICB2YXIgbGluayA9IGRvYy5kYXRhKCkuZmlsZUxpbms7CgogICAgICAgICAgX3RoaXMyLnNob3dEYXRhYmFzZUVudHJpZXMobmFtZSwgbGluayk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/berkaykosebay/Documents/GitHub/brkosebay/src/views/fileUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"fileupload\" v-bind:style=\"{display:grid}\">\n    <h1>File Upload Page</h1>\n    <input type=\"text\" placeholder=\"Name of the Dataset\" v-model=datasets.dataName class=\"form-control\"><br><br>\n    <input type=\"file\" @change=\"selectFile\"><button @click=\"uploadFile\">Upload</button><br><br>\n    <ul id=\"list\"> </ul>\n  </div>\n</template>\n\n<script>\nimport firebase from 'firebase';\nimport * as d3 from 'd3-dsv';\nimport {db} from '../main'\n\nexport default {\n  name: 'fileUpload',\n  data () {\n      return {\n        datasets: {\n          fileLink: null,\n          dataName: null,\n        },\n          selectedFile: null,\n          datasetNo: 0\n      }\n  },\n  mounted() {\n    this.getAllDatabaseEntries();\n  },\n  methods: {\n      selectFile(event) {\n          console.log(event)\n          this.selectedFile = event.target.files[0]\n          console.log(this.selectedFile.name)\n      },\n      uploadFile() {\n          let fileName = `${this.selectedFile.name}`;\n          var storageRef = firebase.storage().ref(fileName);\n          let uploadTask = storageRef.put(this.selectedFile);\n          uploadTask.on('state_changed', () => {\n          }, (error) => {\n            //Handle unsuccessfull uploads.\n            console.log(error);\n          }, () => {\n            //Handle successfull uploads.\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n              this.datasets.fileLink = downloadURL;\n              this.saveDataToDB();\n            })\n          })\n          },\n        saveDataToDB() {\n          db.collection(\"datasets\").add(this.datasets).then((docRef) => {\n            console.log(\"Document written with ID: \", docRef.id);\n          })\n          .catch( (error) => {\n            console.error(\"Error adding document: \", error);\n          })\n          },\n        showDatabaseEntries(name, link) {\n          var ul = document.getElementById('list');\n          var header = document.createElement('h2');\n          var _name = document.createElement('li');\n          var _visualise = document.createElement('button');\n          header.innerHTML = \"Dataset-\"+ (++this.datasetNo);\n          _name.innerHTML=\"Name of the dataset: \"+name;\n          _visualise.innerHTML = \"Visualise\";\n          _visualise.onclick = async () => {\n            const response = await fetch(link);\n            const data = d3.csvParse(await response.text(), d3.autoType);\n            console.log(data);\n          }\n          ul.appendChild(header);\n          ul.appendChild(_name);\n          ul.appendChild(_visualise);\n        },\n        getAllDatabaseEntries() {\n          db.collection('datasets').get().then((snapshot) => {\n            snapshot.forEach((doc) => {\n              let name = doc.data().dataName;\n              let link = doc.data().fileLink;\n              this.showDatabaseEntries(name, link);\n            }\n            )\n          }\n          )\n        },\n        }\n      }\n</script>\n\n"],"sourceRoot":""}]}