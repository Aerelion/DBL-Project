{"remainingRequest":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/babel-loader/lib/index.js!/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/eslint-loader/index.js??ref--13-0!/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/visualisations/d3-ForceEdgeBundling.js","dependencies":[{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/visualisations/d3-ForceEdgeBundling.js","mtime":1622373473821},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/berkaykosebay/Documents/GitHub/DBL-Project/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/berkaykosebay/Documents/GitHub/DBL-Project/src/visualisations/d3-ForceEdgeBundling.js"],"names":["d3","ForceEdgeBundling","data_nodes","data_edges","compatibility_list_for_edge","subdivision_points_for_edge","K","S_initial","P_initial","P_rate","C","I_initial","I_rate","compatibility_threshold","eps","vector_dot_product","p","q","x","y","edge_as_vector","P","target","source","edge_length","e","Math","abs","sqrt","pow","custom_edge_length","edge_midpoint","middle_x","middle_y","compute_divided_edge_length","e_idx","length","i","segment_length","euclidean_distance","project_point_on_line","Q","L","r","initialize_edge_subdivisions","push","initialize_compatibility_lists","filter_self_loops","edgelist","filtered_edge_list","apply_spring_force","kP","prev","next","crnt","apply_electrostatic_force","sum_of_forces","compatible_edges_list","oe","force","diff","apply_resulting_forces_on_subdivision_points","S","resulting_forces_for_subdivision_points","resulting_force","spring_force","electrostatic_force","update_edge_divisions","divided_edge_length","current_segment_length","new_subdivision_points","old_segment_length","percent_position","new_subdivision_point_x","new_subdivision_point_y","angle_compatibility","scale_compatibility","lavg","min","max","position_compatibility","midP","midQ","edge_visibility","I0","I1","midI","visibility_compatibility","compatibility_score","are_compatible","compute_compatibility_lists","forcebundle","I","cycle","iteration","forces","edge","nodes","nl","arguments","edges","ll","bundling_stiffness","k","step_size","step","cycles","c","iterations","iterations_rate","subdivision_points_seed","subdivision_rate","t"],"mappings":"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","sourcesContent":["/* \n FDEB algorithm implementation [www.win.tue.nl/~dholten/papers/forcebundles_eurovis.pdf].\n\n Author: Corneliu S. (github.com/upphiminn)\n 2013\n\n */\n(function () {\n\td3.ForceEdgeBundling = function () {\n\t\tvar data_nodes = {}, // {'nodeid':{'x':,'y':},..}\n\t\t\tdata_edges = [], // [{'source':'nodeid1', 'target':'nodeid2'},..]\n\t\t\tcompatibility_list_for_edge = [],\n\t\t\tsubdivision_points_for_edge = [],\n\t\t\tK = 0.1, // global bundling constant controlling edge stiffness\n\t\t\tS_initial = 0.1, // init. distance to move points\n\t\t\tP_initial = 1, // init. subdivision number\n\t\t\tP_rate = 2, // subdivision rate increase\n\t\t\tC = 6, // number of cycles to perform\n\t\t\tI_initial = 90, // init. number of iterations for cycle\n\t\t\tI_rate = 0.6666667, // rate at which iteration number decreases i.e. 2/3\n\t\t\tcompatibility_threshold = 0.6,\n\t\t\teps = 1e-6;\n\n\n\t\t/*** Geometry Helper Methods ***/\n\t\tfunction vector_dot_product(p, q) {\n\t\t\treturn p.x * q.x + p.y * q.y;\n\t\t}\n\n\t\tfunction edge_as_vector(P) {\n\t\t\treturn {\n\t\t\t\t'x': data_nodes[P.target].x - data_nodes[P.source].x,\n\t\t\t\t'y': data_nodes[P.target].y - data_nodes[P.source].y\n\t\t\t}\n\t\t}\n\n\t\tfunction edge_length(e) {\n\t\t\t// handling nodes that are on the same location, so that K/edge_length != Inf\n\t\t\tif (Math.abs(data_nodes[e.source].x - data_nodes[e.target].x) < eps &&\n\t\t\t\tMath.abs(data_nodes[e.source].y - data_nodes[e.target].y) < eps) {\n\t\t\t\treturn eps;\n\t\t\t}\n\n\t\t\treturn Math.sqrt(Math.pow(data_nodes[e.source].x - data_nodes[e.target].x, 2) +\n\t\t\t\tMath.pow(data_nodes[e.source].y - data_nodes[e.target].y, 2));\n\t\t}\n\n\t\tfunction custom_edge_length(e) {\n\t\t\treturn Math.sqrt(Math.pow(e.source.x - e.target.x, 2) + Math.pow(e.source.y - e.target.y, 2));\n\t\t}\n\n\t\tfunction edge_midpoint(e) {\n\t\t\tvar middle_x = (data_nodes[e.source].x + data_nodes[e.target].x) / 2.0;\n\t\t\tvar middle_y = (data_nodes[e.source].y + data_nodes[e.target].y) / 2.0;\n\n\t\t\treturn {\n\t\t\t\t'x': middle_x,\n\t\t\t\t'y': middle_y\n\t\t\t};\n\t\t}\n\n\t\tfunction compute_divided_edge_length(e_idx) {\n\t\t\tvar length = 0;\n\n\t\t\tfor (var i = 1; i < subdivision_points_for_edge[e_idx].length; i++) {\n\t\t\t\tvar segment_length = euclidean_distance(subdivision_points_for_edge[e_idx][i], subdivision_points_for_edge[e_idx][i - 1]);\n\t\t\t\tlength += segment_length;\n\t\t\t}\n\n\t\t\treturn length;\n\t\t}\n\n\t\tfunction euclidean_distance(p, q) {\n\t\t\treturn Math.sqrt(Math.pow(p.x - q.x, 2) + Math.pow(p.y - q.y, 2));\n\t\t}\n\n\t\tfunction project_point_on_line(p, Q) {\n\t\t\tvar L = Math.sqrt((Q.target.x - Q.source.x) * (Q.target.x - Q.source.x) + (Q.target.y - Q.source.y) * (Q.target.y - Q.source.y));\n\t\t\tvar r = ((Q.source.y - p.y) * (Q.source.y - Q.target.y) - (Q.source.x - p.x) * (Q.target.x - Q.source.x)) / (L * L);\n\n\t\t\treturn {\n\t\t\t\t'x': (Q.source.x + r * (Q.target.x - Q.source.x)),\n\t\t\t\t'y': (Q.source.y + r * (Q.target.y - Q.source.y))\n\t\t\t};\n\t\t}\n\n\t\t/*** ********************** ***/\n\n\t\t/*** Initialization Methods ***/\n\t\tfunction initialize_edge_subdivisions() {\n\t\t\tfor (var i = 0; i < data_edges.length; i++) {\n\t\t\t\tif (P_initial === 1) {\n\t\t\t\t\tsubdivision_points_for_edge[i] = []; //0 subdivisions\n\t\t\t\t} else {\n\t\t\t\t\tsubdivision_points_for_edge[i] = [];\n\t\t\t\t\tsubdivision_points_for_edge[i].push(data_nodes[data_edges[i].source]);\n\t\t\t\t\tsubdivision_points_for_edge[i].push(data_nodes[data_edges[i].target]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction initialize_compatibility_lists() {\n\t\t\tfor (var i = 0; i < data_edges.length; i++) {\n\t\t\t\tcompatibility_list_for_edge[i] = []; //0 compatible edges.\n\t\t\t}\n\t\t}\n\n\t\tfunction filter_self_loops(edgelist) {\n\t\t\tvar filtered_edge_list = [];\n\n\t\t\tfor (var e = 0; e < edgelist.length; e++) {\n\t\t\t\tif (data_nodes[edgelist[e].source].x != data_nodes[edgelist[e].target].x ||\n\t\t\t\t\tdata_nodes[edgelist[e].source].y != data_nodes[edgelist[e].target].y) { //or smaller than eps\n\t\t\t\t\tfiltered_edge_list.push(edgelist[e]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn filtered_edge_list;\n\t\t}\n\n\t\t/*** ********************** ***/\n\n\t\t/*** Force Calculation Methods ***/\n\t\tfunction apply_spring_force(e_idx, i, kP) {\n\t\t\tvar prev = subdivision_points_for_edge[e_idx][i - 1];\n\t\t\tvar next = subdivision_points_for_edge[e_idx][i + 1];\n\t\t\tvar crnt = subdivision_points_for_edge[e_idx][i];\n\t\t\tvar x = prev.x - crnt.x + next.x - crnt.x;\n\t\t\tvar y = prev.y - crnt.y + next.y - crnt.y;\n\n\t\t\tx *= kP;\n\t\t\ty *= kP;\n\n\t\t\treturn {\n\t\t\t\t'x': x,\n\t\t\t\t'y': y\n\t\t\t};\n\t\t}\n\n\t\tfunction apply_electrostatic_force(e_idx, i) {\n\t\t\tvar sum_of_forces = {\n\t\t\t\t'x': 0,\n\t\t\t\t'y': 0\n\t\t\t};\n\t\t\tvar compatible_edges_list = compatibility_list_for_edge[e_idx];\n\n\t\t\tfor (var oe = 0; oe < compatible_edges_list.length; oe++) {\n\t\t\t\tvar force = {\n\t\t\t\t\t'x': subdivision_points_for_edge[compatible_edges_list[oe]][i].x - subdivision_points_for_edge[e_idx][i].x,\n\t\t\t\t\t'y': subdivision_points_for_edge[compatible_edges_list[oe]][i].y - subdivision_points_for_edge[e_idx][i].y\n\t\t\t\t};\n\n\t\t\t\tif ((Math.abs(force.x) > eps) || (Math.abs(force.y) > eps)) {\n\t\t\t\t\tvar diff = (1 / Math.pow(custom_edge_length({\n\t\t\t\t\t\t'source': subdivision_points_for_edge[compatible_edges_list[oe]][i],\n\t\t\t\t\t\t'target': subdivision_points_for_edge[e_idx][i]\n\t\t\t\t\t}), 1));\n\n\t\t\t\t\tsum_of_forces.x += force.x * diff;\n\t\t\t\t\tsum_of_forces.y += force.y * diff;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn sum_of_forces;\n\t\t}\n\n\n\t\tfunction apply_resulting_forces_on_subdivision_points(e_idx, P, S) {\n\t\t\tvar kP = K / (edge_length(data_edges[e_idx]) * (P + 1)); // kP=K/|P|(number of segments), where |P| is the initial length of edge P.\n\t\t\t// (length * (num of sub division pts - 1))\n\t\t\tvar resulting_forces_for_subdivision_points = [{\n\t\t\t\t'x': 0,\n\t\t\t\t'y': 0\n\t\t\t}];\n\n\t\t\tfor (var i = 1; i < P + 1; i++) { // exclude initial end points of the edge 0 and P+1\n\t\t\t\tvar resulting_force = {\n\t\t\t\t\t'x': 0,\n\t\t\t\t\t'y': 0\n\t\t\t\t};\n\n\t\t\t\tspring_force = apply_spring_force(e_idx, i, kP);\n\t\t\t\telectrostatic_force = apply_electrostatic_force(e_idx, i, S);\n\n\t\t\t\tresulting_force.x = S * (spring_force.x + electrostatic_force.x);\n\t\t\t\tresulting_force.y = S * (spring_force.y + electrostatic_force.y);\n\n\t\t\t\tresulting_forces_for_subdivision_points.push(resulting_force);\n\t\t\t}\n\n\t\t\tresulting_forces_for_subdivision_points.push({\n\t\t\t\t'x': 0,\n\t\t\t\t'y': 0\n\t\t\t});\n\n\t\t\treturn resulting_forces_for_subdivision_points;\n\t\t}\n\n\t\t/*** ********************** ***/\n\n\t\t/*** Edge Division Calculation Methods ***/\n\t\tfunction update_edge_divisions(P) {\n\t\t\tfor (var e_idx = 0; e_idx < data_edges.length; e_idx++) {\n\t\t\t\tif (P === 1) {\n\t\t\t\t\tsubdivision_points_for_edge[e_idx].push(data_nodes[data_edges[e_idx].source]); // source\n\t\t\t\t\tsubdivision_points_for_edge[e_idx].push(edge_midpoint(data_edges[e_idx])); // mid point\n\t\t\t\t\tsubdivision_points_for_edge[e_idx].push(data_nodes[data_edges[e_idx].target]); // target\n\t\t\t\t} else {\n\t\t\t\t\tvar divided_edge_length = compute_divided_edge_length(e_idx);\n\t\t\t\t\tvar segment_length = divided_edge_length / (P + 1);\n\t\t\t\t\tvar current_segment_length = segment_length;\n\t\t\t\t\tvar new_subdivision_points = [];\n\t\t\t\t\tnew_subdivision_points.push(data_nodes[data_edges[e_idx].source]); //source\n\n\t\t\t\t\tfor (var i = 1; i < subdivision_points_for_edge[e_idx].length; i++) {\n\t\t\t\t\t\tvar old_segment_length = euclidean_distance(subdivision_points_for_edge[e_idx][i], subdivision_points_for_edge[e_idx][i - 1]);\n\n\t\t\t\t\t\twhile (old_segment_length > current_segment_length) {\n\t\t\t\t\t\t\tvar percent_position = current_segment_length / old_segment_length;\n\t\t\t\t\t\t\tvar new_subdivision_point_x = subdivision_points_for_edge[e_idx][i - 1].x;\n\t\t\t\t\t\t\tvar new_subdivision_point_y = subdivision_points_for_edge[e_idx][i - 1].y;\n\n\t\t\t\t\t\t\tnew_subdivision_point_x += percent_position * (subdivision_points_for_edge[e_idx][i].x - subdivision_points_for_edge[e_idx][i - 1].x);\n\t\t\t\t\t\t\tnew_subdivision_point_y += percent_position * (subdivision_points_for_edge[e_idx][i].y - subdivision_points_for_edge[e_idx][i - 1].y);\n\t\t\t\t\t\t\tnew_subdivision_points.push({\n\t\t\t\t\t\t\t\t'x': new_subdivision_point_x,\n\t\t\t\t\t\t\t\t'y': new_subdivision_point_y\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\told_segment_length -= current_segment_length;\n\t\t\t\t\t\t\tcurrent_segment_length = segment_length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrent_segment_length -= old_segment_length;\n\t\t\t\t\t}\n\t\t\t\t\tnew_subdivision_points.push(data_nodes[data_edges[e_idx].target]); //target\n\t\t\t\t\tsubdivision_points_for_edge[e_idx] = new_subdivision_points;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/*** ********************** ***/\n\n\t\t/*** Edge compatibility measures ***/\n\t\tfunction angle_compatibility(P, Q) {\n\t\t\treturn Math.abs(vector_dot_product(edge_as_vector(P), edge_as_vector(Q)) / (edge_length(P) * edge_length(Q)));\n\t\t}\n\n\t\tfunction scale_compatibility(P, Q) {\n\t\t\tvar lavg = (edge_length(P) + edge_length(Q)) / 2.0;\n\t\t\treturn 2.0 / (lavg / Math.min(edge_length(P), edge_length(Q)) + Math.max(edge_length(P), edge_length(Q)) / lavg);\n\t\t}\n\n\t\tfunction position_compatibility(P, Q) {\n\t\t\tvar lavg = (edge_length(P) + edge_length(Q)) / 2.0;\n\t\t\tvar midP = {\n\t\t\t\t'x': (data_nodes[P.source].x + data_nodes[P.target].x) / 2.0,\n\t\t\t\t'y': (data_nodes[P.source].y + data_nodes[P.target].y) / 2.0\n\t\t\t};\n\t\t\tvar midQ = {\n\t\t\t\t'x': (data_nodes[Q.source].x + data_nodes[Q.target].x) / 2.0,\n\t\t\t\t'y': (data_nodes[Q.source].y + data_nodes[Q.target].y) / 2.0\n\t\t\t};\n\n\t\t\treturn lavg / (lavg + euclidean_distance(midP, midQ));\n\t\t}\n\n\t\tfunction edge_visibility(P, Q) {\n\t\t\tvar I0 = project_point_on_line(data_nodes[Q.source], {\n\t\t\t\t'source': data_nodes[P.source],\n\t\t\t\t'target': data_nodes[P.target]\n\t\t\t});\n\t\t\tvar I1 = project_point_on_line(data_nodes[Q.target], {\n\t\t\t\t'source': data_nodes[P.source],\n\t\t\t\t'target': data_nodes[P.target]\n\t\t\t}); //send actual edge points positions\n\t\t\tvar midI = {\n\t\t\t\t'x': (I0.x + I1.x) / 2.0,\n\t\t\t\t'y': (I0.y + I1.y) / 2.0\n\t\t\t};\n\t\t\tvar midP = {\n\t\t\t\t'x': (data_nodes[P.source].x + data_nodes[P.target].x) / 2.0,\n\t\t\t\t'y': (data_nodes[P.source].y + data_nodes[P.target].y) / 2.0\n\t\t\t};\n\n\t\t\treturn Math.max(0, 1 - 2 * euclidean_distance(midP, midI) / euclidean_distance(I0, I1));\n\t\t}\n\n\t\tfunction visibility_compatibility(P, Q) {\n\t\t\treturn Math.min(edge_visibility(P, Q), edge_visibility(Q, P));\n\t\t}\n\n\t\tfunction compatibility_score(P, Q) {\n\t\t\treturn (angle_compatibility(P, Q) * scale_compatibility(P, Q) * position_compatibility(P, Q) * visibility_compatibility(P, Q));\n\t\t}\n\n\t\tfunction are_compatible(P, Q) {\n\t\t\treturn (compatibility_score(P, Q) >= compatibility_threshold);\n\t\t}\n\n\t\tfunction compute_compatibility_lists() {\n\t\t\tfor (var e = 0; e < data_edges.length - 1; e++) {\n\t\t\t\tfor (var oe = e + 1; oe < data_edges.length; oe++) { // don't want any duplicates\n\t\t\t\t\tif (are_compatible(data_edges[e], data_edges[oe])) {\n\t\t\t\t\t\tcompatibility_list_for_edge[e].push(oe);\n\t\t\t\t\t\tcompatibility_list_for_edge[oe].push(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/*** ************************ ***/\n\n\t\t/*** Main Bundling Loop Methods ***/\n\t\tvar forcebundle = function () {\n\t\t\tvar S = S_initial;\n\t\t\tvar I = I_initial;\n\t\t\tvar P = P_initial;\n\n\t\t\tinitialize_edge_subdivisions();\n\t\t\tinitialize_compatibility_lists();\n\t\t\tupdate_edge_divisions(P);\n\t\t\tcompute_compatibility_lists();\n\n\t\t\tfor (var cycle = 0; cycle < C; cycle++) {\n\t\t\t\tfor (var iteration = 0; iteration < I; iteration++) {\n\t\t\t\t\tvar forces = [];\n\t\t\t\t\tfor (var edge = 0; edge < data_edges.length; edge++) {\n\t\t\t\t\t\tforces[edge] = apply_resulting_forces_on_subdivision_points(edge, P, S);\n\t\t\t\t\t}\n\t\t\t\t\tfor (var e = 0; e < data_edges.length; e++) {\n\t\t\t\t\t\tfor (var i = 0; i < P + 1; i++) {\n\t\t\t\t\t\t\tsubdivision_points_for_edge[e][i].x += forces[e][i].x;\n\t\t\t\t\t\t\tsubdivision_points_for_edge[e][i].y += forces[e][i].y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// prepare for next cycle\n\t\t\t\tS = S / 2;\n\t\t\t\tP = P * P_rate;\n\t\t\t\tI = I_rate * I;\n\n\t\t\t\tupdate_edge_divisions(P);\n\t\t\t\t//console.log('C' + cycle);\n\t\t\t\t//console.log('P' + P);\n\t\t\t\t//console.log('S' + S);\n\t\t\t}\n\t\t\treturn subdivision_points_for_edge;\n\t\t};\n\t\t/*** ************************ ***/\n\n\n\t\t/*** Getters/Setters Methods ***/\n\t\tforcebundle.nodes = function (nl) {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\treturn data_nodes;\n\t\t\t} else {\n\t\t\t\tdata_nodes = nl;\n\t\t\t}\n\n\t\t\treturn forcebundle;\n\t\t};\n\n\t\tforcebundle.edges = function (ll) {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\treturn data_edges;\n\t\t\t} else {\n\t\t\t\tdata_edges = filter_self_loops(ll); //remove edges to from to the same point\n\t\t\t}\n\n\t\t\treturn forcebundle;\n\t\t};\n\n\t\tforcebundle.bundling_stiffness = function (k) {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\treturn K;\n\t\t\t} else {\n\t\t\t\tK = k;\n\t\t\t}\n\n\t\t\treturn forcebundle;\n\t\t};\n\n\t\tforcebundle.step_size = function (step) {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\treturn S_initial;\n\t\t\t} else {\n\t\t\t\tS_initial = step;\n\t\t\t}\n\n\t\t\treturn forcebundle;\n\t\t};\n\n\t\tforcebundle.cycles = function (c) {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\treturn C;\n\t\t\t} else {\n\t\t\t\tC = c;\n\t\t\t}\n\n\t\t\treturn forcebundle;\n\t\t};\n\n\t\tforcebundle.iterations = function (i) {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\treturn I_initial;\n\t\t\t} else {\n\t\t\t\tI_initial = i;\n\t\t\t}\n\n\t\t\treturn forcebundle;\n\t\t};\n\n\t\tforcebundle.iterations_rate = function (i) {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\treturn I_rate;\n\t\t\t} else {\n\t\t\t\tI_rate = i;\n\t\t\t}\n\n\t\t\treturn forcebundle;\n\t\t};\n\n\t\tforcebundle.subdivision_points_seed = function (p) {\n\t\t\tif (arguments.length == 0) {\n\t\t\t\treturn P;\n\t\t\t} else {\n\t\t\t\tP = p;\n\t\t\t}\n\n\t\t\treturn forcebundle;\n\t\t};\n\n\t\tforcebundle.subdivision_rate = function (r) {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\treturn P_rate;\n\t\t\t} else {\n\t\t\t\tP_rate = r;\n\t\t\t}\n\n\t\t\treturn forcebundle;\n\t\t};\n\n\t\tforcebundle.compatibility_threshold = function (t) {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\treturn compatibility_threshold;\n\t\t\t} else {\n\t\t\t\tcompatibility_threshold = t;\n\t\t\t}\n\n\t\t\treturn forcebundle;\n\t\t};\n\n\t\t/*** ************************ ***/\n\n\t\treturn forcebundle;\n\t}\n})();\n"]}]}