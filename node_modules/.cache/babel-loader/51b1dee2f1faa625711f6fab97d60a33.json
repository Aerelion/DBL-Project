{"remainingRequest":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\src\\views\\fileUpload.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\src\\views\\fileUpload.vue","mtime":1622037620846},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\src\\views\\fileUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"fileupload\" v-bind:style=\"{display:grid}\">\r\n    <h1>File Upload Page</h1>\r\n    <input type=\"text\" placeholder=\"Name of the Dataset\" v-model=datasets.dataName class=\"form-control\">\r\n    <p id=\"msg\"></p><br><br>\r\n    <input type=\"file\" accept=\".csv\" @change=\"selectFile\"><button @click=\"uploadFile\">Upload</button><br><br>\r\n  </div><br><br>\r\n  <div class=\"row\">\r\n  <ul id=\"list\" class=\"column\"> </ul>\r\n  <div id=\"vis\" class=\"column\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport firebase from 'firebase';\r\nimport * as d3 from 'd3';\r\nimport {db} from '../main'\r\n\r\nexport default {\r\n  name: 'fileUpload',\r\n  data () {\r\n      return {\r\n        datasets: {\r\n          fileLink: null,\r\n          dataName: null,\r\n        },\r\n          selectedFile: null,\r\n          datasetNo: 0\r\n      }\r\n  },\r\n  mounted() {\r\n    this.getAllDatabaseEntries(); //the mounted() lifecycle executes after all components of the page have finished loading, so after the page is ready\r\n                                  // the previous uploaded datasets are visible in the page.\r\n  },\r\n  methods: {\r\n      selectFile(event) {\r\n          this.selectedFile = event.target.files[0] //Selects the uploaded file and assigns it to the \"selectedFile\" variable.\r\n          //TODO: Add proper checks to ensure that the files given are csv files.\r\n      },\r\n      uploadFile() {\r\n          let fileName = `${this.selectedFile.name}`;\r\n          var storageRef = firebase.storage().ref(fileName);\r\n          let uploadTask = storageRef.put(this.selectedFile);\r\n          uploadTask.on('state_changed', () => {\r\n          }, (error) => {\r\n            //Handle unsuccessfull uploads.\r\n            console.log(error);\r\n          }, () => {\r\n            //Handle successfull uploads.\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n              this.datasets.fileLink = downloadURL;\r\n              this.saveDataToDB();\r\n            })\r\n          })\r\n          },\r\n      saveDataToDB() {\r\n          db.collection(\"datasets\").add(this.datasets).then((docRef) => {\r\n            var sucMsg = document.getElementById(\"msg\")\r\n            sucMsg.innerHTML = \"The dataset has been uploaded successfully.\"\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n          })\r\n          .catch( (error) => {\r\n            console.error(\"Error adding document: \", error);\r\n          })\r\n          },\r\n      showDatabaseEntries(name, link) {\r\n          var ul = document.getElementById('list');\r\n          var header = document.createElement('h2');\r\n          var _name = document.createElement('li');\r\n          var _visualise = document.createElement('button');\r\n          var visDiv = document.getElementById('vis');\r\n         // var testParaghraph = document.createElement(\"h2\");\r\n          header.innerHTML = \"Dataset-\"+ (++this.datasetNo);\r\n          _name.innerHTML=\"Name of the dataset: \"+name;\r\n          _visualise.innerHTML = \"Visualise\";\r\n          _visualise.onclick = async () => {\r\n            visDiv.innerHTML=\"\";\r\n            const response = await fetch(link);\r\n            const data = d3.csvParse(await response.text(), d3.autoType);\r\n            var edges = [];\r\n            var nodes = [];\r\n            //console.log(data);\r\n            data.forEach((x) => {\r\n              var objEdges = {}\r\n              objEdges[\"source\"] = x.fromId;\r\n              objEdges[\"target\"] = x.toId;\r\n              edges.push(objEdges);\r\n              var objNodesTo = {}\r\n              var objNodesFrom = {}\r\n              var index = nodes.findIndex(o => o.employeeID == x.fromId)\r\n              if(index === -1) {\r\n                objNodesFrom[\"employeeID\"] = x.fromId;\r\n                nodes.push(objNodesFrom);\r\n              }\r\n              var index2 = nodes.findIndex(o => o.employeeID == x.toId)\r\n              if(index2 === -1) {\r\n                objNodesTo[\"employeeID\"] = x.toId;\r\n                nodes.push(objNodesTo);\r\n              }\r\n            })\r\n            console.log(edges);\r\n            console.log(nodes);\r\n            this.generateNetwork(edges, nodes);\r\n          }\r\n          ul.appendChild(header);\r\n          ul.appendChild(_name);\r\n          ul.appendChild(_visualise);\r\n        },\r\n      getAllDatabaseEntries() {\r\n          db.collection('datasets').get().then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n              let name = doc.data().dataName;\r\n              let link = doc.data().fileLink;\r\n              this.showDatabaseEntries(name, link);\r\n            }\r\n            )\r\n          }\r\n          )\r\n        },\r\n    generateNetwork(edges, nodes) {\r\n      var w = 1000;\r\n      var h = 600;\r\n\r\n      var svg = d3\r\n        .select(\"#vis\")\r\n        .append(\"svg\")\r\n        .attr(\"width\", w)\r\n        .attr(\"height\", h)\r\n        .style(\"background\", \"black\")\r\n        .call(d3.zoom().on('zoom', (event) => {\r\n            svg.attr('transform', event.transform).scaleExtent([1,24]);}))\r\n        .append('g');\r\n      \r\n      var simulation = d3.forceSimulation(nodes)\r\n          .force(\"charge\", d3.forceManyBody().strength(-50))\r\n          .force(\"link\", d3.forceLink().id(function (d) {return d.employeeID;}).links(edges))\r\n          .force(\"center\", d3.forceCenter(w / 2, h / 2))\r\n          .on(\"end\", ticked);\r\n\r\n        var edge = svg\r\n          .append(\"g\")\r\n          .attr(\"class\", \"links\")\r\n          .selectAll(\"line\")\r\n          .data(edges)\r\n          .enter()\r\n          .append(\"line\")\r\n          .style(\"stroke\", \"#aaa\");\r\n\r\n        var node = svg\r\n          .append(\"g\")\r\n          .attr(\"class\", \"nodes\")\r\n          .selectAll(\"circle\")\r\n          .data(nodes)\r\n          .join(\"circle\")\r\n          .attr(\"r\", 5)\r\n          .attr(\"fill\", function() {return \"blue\";})\r\n          //.call(dragNodes(simulation));\r\n        \r\n        function ticked() {\r\n          edge\r\n            .attr(\"x1\", function(d) {\r\n              return d.source.x;\r\n            })\r\n            .attr(\"y1\", function(d) {\r\n              return d.source.y;\r\n            })\r\n            .attr(\"x2\", function(d) {\r\n              return d.target.x;\r\n            })\r\n            .attr(\"y2\", function(d) {\r\n              return d.target.y;\r\n            });\r\n            \r\n            node\r\n              .attr(\"cx\", function(d) {\r\n              return d.x;\r\n            })\r\n              .attr(\"cy\", function(d) {\r\n              return d.y;\r\n            });\r\n        }\r\n        /*function dragNodes(simulation) { // This needs a lot more optimization, so it is being left out for the prototype.\r\n          function dragStarted(event) {\r\n            if (!event.active) simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n          }\r\n          \r\n          function dragged(event) {\r\n            event.subject.fx = event.x;\r\n            event.subject.fy = event.y;\r\n          }\r\n          \r\n          function dragEnded(event) {\r\n            if (!event.active) simulation.alphaTarget(0);\r\n            event.subject.fx = null;\r\n            event.subject.fy = null;\r\n          }\r\n          \r\n          return d3.drag()\r\n              .on(\"start\", dragStarted)\r\n              .on(\"drag\", dragged)\r\n              .on(\"end\", dragEnded);\r\n        }*/\r\n      console.log(simulation)\r\n      return svg.node();\r\n}\r\n/*generateNetworkWithCanvas(edges, nodes) { //Trying to optimize by using a canvas instead of svg, should improve performance of the full dataset quite a bit, but just testing atm. Not included in the prototype.\r\n      var w = 1000;\r\n      var h = 600;\r\n      var r = 5;\r\n\r\n      var htmlCanvas = d3\r\n        .select(\"#vis\")\r\n        .append(\"canvas\")\r\n        .attr(\"width\", w)\r\n        .attr(\"height\", h)\r\n        .style(\"background\", \"black\");\r\n      \r\n      var canvasToolbox = htmlCanvas.node().getContext('2d'); //Canvas toolbox, it is an object carrying all the properties and methods we need to draw on the canvas.\r\n      \r\n      //var div = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\r\n      \r\n      var simulation = d3.forceSimulation(nodes)\r\n          .force(\"charge\", d3.forceManyBody().strength(-30))\r\n          .force(\"x\", d3.forceX(w / 2).strength(0.1))\r\n          .force(\"y\", d3.forceY(h / 2).strength(0.1))\r\n          .force(\"link\", d3.forceLink().id(function (d) {return d.employeeID;}).links(edges))\r\n          .force(\"center\", d3.forceCenter(w / 2, h / 2));\r\n      \r\n      var transform = d3.zoomIdentity;\r\n\r\n      initGraph(edges, nodes);\r\n\r\n      function initGraph(edges, nodes) {\r\n        \r\n        function zoomed(event) {\r\n          console.log(\"zooming\");\r\n          transform = event.transform;\r\n          ticked()\r\n        }\r\n        console.log(\"Hello\")\r\n        d3.select(htmlCanvas)\r\n            .call(d3.drag().subject(dragsubject).on(\"start\", dragStarted).on(\"drag\", dragged).on(\"end\",dragEnded))\r\n            .call(d3.zoom().scaleExtent([1 / 10, 8]).on(\"zoom\", zoomed));\r\n        \r\n        function dragsubject(event) {\r\n          var i,\r\n          x = transform.invertX(event.x),\r\n          y = transform.invertY(event.y),\r\n          dx,\r\n          dy;\r\n          for (i = nodes.length - 1; i >= 0; --i) {\r\n            var node = nodes[i];\r\n            dx = x - node.x;\r\n            dy = y - node.y;\r\n\r\n            if (dx * dx + dy * dy < r * r) {\r\n\r\n              node.x =  transform.applyX(node.x);\r\n              node.y = transform.applyY(node.y);\r\n\r\n              return node;\r\n            }\r\n          }\r\n        }\r\n        function dragStarted(event) {\r\n            if (!event.active) simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n          }\r\n          \r\n          function dragged(event) {\r\n            event.subject.fx = event.x;\r\n            event.subject.fy = event.y;\r\n          }\r\n          \r\n          function dragEnded(event) {\r\n            if (!event.active) simulation.alphaTarget(0);\r\n            event.subject.fx = null;\r\n            event.subject.fy = null;\r\n          }\r\n          simulation.nodes(nodes).on('tick', ticked);\r\n          simulation.force(\"link\").links(edges);\r\n          \r\n          function ticked() {\r\n          canvasToolbox.save();\r\n          canvasToolbox.clearRect(0, 0, w, h);\r\n          canvasToolbox.translate(transform.x, transform.y);\r\n          canvasToolbox.scale(transform.k, transform.k);\r\n\r\n          edges.forEach(function (d) {\r\n            canvasToolbox.beginPath();\r\n            canvasToolbox.moveTo(d.source.x, d.source.y);\r\n            canvasToolbox.lineTo(d.target.x, d.target.y);\r\n            canvasToolbox.stroke();\r\n          });\r\n          nodes.forEach(function (d) {\r\n            canvasToolbox.beginPath();\r\n            canvasToolbox.arc(d.x, d.y, r, 0, 2 * Math.PI, true);\r\n            canvasToolbox.fillStyle = d.col ? \"red\":\"black\"\r\n            canvasToolbox.fill();\r\n          });\r\n          canvasToolbox.restore();\r\n        }\r\n\r\n      }\r\n}*/\r\n}\r\n}\r\n\r\n\r\n</script>\r\n<style scoped>\r\n  ul{\r\n    list-style-type: none;\r\n  }\r\n  .edges line {\r\n      stroke: rgb(255, 255, 255);\r\n      stroke-opacity: 0.6;\r\n    }\r\n\r\n    .nodes circle {\r\n      stroke: rgb(255, 255, 255);\r\n      stroke-width: 1.5px;\r\n    }\r\n    .row {\r\n      display: flex;\r\n    }\r\n    .column {\r\n      flex: 50%;\r\n    }\r\n</style>"],"sourceRoot":""}]}