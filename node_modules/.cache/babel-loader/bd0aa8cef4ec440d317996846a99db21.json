{"remainingRequest":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\src\\visualisations\\adjacencymatrix.js","dependencies":[{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\src\\visualisations\\adjacencymatrix.js","mtime":1624958403660},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\20202482\\Documents\\GitHub\\DBL-Project\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubWF0aC5sb2cyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7CmltcG9ydCAqIGFzIGQzIGZyb20gImQzIjsKCmZ1bmN0aW9uIGdlbmVyYXRlTWF0cml4KGVkZ2VzLCBub2RlcywgZWRnZVdlaWdodHMsIGdsb2JhbFNlbGVjdGlvbikgewogIHZhciBzaWRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRlc3RTZWxlY3RBTSIpLnZhbHVlOwogIHZhciB3ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInZpc2NvbnRlbnQiKS5jbGllbnRXaWR0aDsKICB2YXIgaCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ2aXNjb250ZW50IikuY2xpZW50SGVpZ2h0OwogIHZhciB0ZXh0TGVuZ3RoID0gMTI7IC8vIGNoYW5nZSB0aGlzIHRvIHRoZSBhcHByb3ggbWF4IG5vZGUgdGV4dCBsZW5ndGgKCiAgdmFyIG1pbk9wYWNpdHkgPSAwLjM7IC8vIG9wYWNpdHkgb2YgYW4gZWRnZSB3aXRoIHdlaWdodCAxCgogIHZhciBsb2dDb2VmZmljaWVudCA9ICgxIC0gbWluT3BhY2l0eSkgLyBNYXRoLmxvZzIoZWRnZVdlaWdodHMubWF4V2VpZ2h0KTsgLy8gY29lZmljaWVudCB0aGF0IGlzIHVzZWQgdG8gY2FsY3VsYXRlIG9wYWNpdHkKCiAgdmFyIHNxdWFyZVNpemUgPSBNYXRoLmZsb29yKGggLyAobm9kZXMubGVuZ3RoICsgdGV4dExlbmd0aCkpIC0gMTsgLy8gdGhlIGVkZ2Ugc2lkZSBsZW5ndGgKCiAgdmFyIHRleHRTcGFjZSA9IHNxdWFyZVNpemUgKiB0ZXh0TGVuZ3RoOyAvLyBhcHByb3ggc3BhY2UgYWxsb2NhdGVkIGZvciB0ZXh0IChpbXBvcnRhbnQgb25seSB0byBjZW50ZXIgdGhlIHZpc3VhbGlzYXRpb24gd2hlbiByZW5kZXJpbmcpCiAgLy8gbm9kZVBvc2l0aW9ucyBpcyBhbiBvYmplY3QgdGhhdCBzdG9yZXMgdGhlIHBvc2l0aW9ucyB3aGVyZSB0aGUgbm9kZXMgc2hvdWxkIGJlIGRpc3BsYXllZCBpbiB0aGUgYWRqIG1hdHJpeAoKICB2YXIgbm9kZVBvc2l0aW9ucyA9IHt9OwoKICBmb3IgKHZhciBpID0gMDsgaSA8IG5vZGVzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgcG9zaXRpb24gPSBub2Rlc1tpXS5lbXBsb3llZUlELnRvU3RyaW5nKCk7CiAgICBub2RlUG9zaXRpb25zW3Bvc2l0aW9uXSA9IGk7CiAgfQoKICB2YXIgbG9jYWxTZWxlY3Rpb24gPSBbXTsgLy8gYXJyYXkgb2Ygc2VsZWN0ZWQgbm9kZXMKICAvLyBldmVyeSBzdmcgY29tcG9uZW50IGdvZXMgaW4gaGVyZQoKICB2YXIgc3ZnID0gZDMuc2VsZWN0KCcjJyArIHNpZGUpLmFwcGVuZCgic3ZnIikuYXR0cigiaGVpZ2h0IiwgaCkuYXR0cigid2lkdGgiLCB3KS5jYWxsKGQzLnpvb20oKS5vbigiem9vbSIsIGZ1bmN0aW9uIChldmVudCkgewogICAgc3ZnLmF0dHIoInRyYW5zZm9ybSIsIGV2ZW50LnRyYW5zZm9ybSk7CiAgfSkpLmFwcGVuZCgiZyIpOyAvLyB0aGUgZ3JpZCBvZiBlZGdlcwoKICB2YXIgZ3JpZCA9IHN2Zy5hcHBlbmQoImciKS5hdHRyKCJpZCIsICJncmlkIik7CiAgZ3JpZC5zZWxlY3RBbGwoInJlY3QiKS5kYXRhKGVkZ2VzKS5lbnRlcigpLmFwcGVuZCgicmVjdCIpLmF0dHIoImNsYXNzIiwgZnVuY3Rpb24gKGQpIHsKICAgIHJldHVybiAiaWQiICsgZC50YXJnZXQgKyAiICIgKyAiaWQiICsgZC5zb3VyY2U7CiAgfSkuYXR0cigieCIsIGZ1bmN0aW9uIChkKSB7CiAgICByZXR1cm4gbm9kZVBvc2l0aW9uc1tkLnRhcmdldC50b1N0cmluZygpXSAqIHNxdWFyZVNpemUgKyB0ZXh0U3BhY2U7CiAgfSkuYXR0cigieSIsIGZ1bmN0aW9uIChkKSB7CiAgICByZXR1cm4gbm9kZVBvc2l0aW9uc1tkLnNvdXJjZS50b1N0cmluZygpXSAqIHNxdWFyZVNpemUgKyB0ZXh0U3BhY2U7CiAgfSkuYXR0cigiaGVpZ2h0Iiwgc3F1YXJlU2l6ZSkuYXR0cigid2lkdGgiLCBzcXVhcmVTaXplKS5hdHRyKCJmaWxsIiwgIndoaXRlIikuc3R5bGUoIm9wYWNpdHkiLCBmdW5jdGlvbiAoZCkgewogICAgcmV0dXJuIE1hdGgubG9nMihkLndlaWdodCkgKiBsb2dDb2VmZmljaWVudCArIG1pbk9wYWNpdHk7CiAgfSk7IC8vIHRoaXMgbWFrZXMgaXQgc28gdGhhdCBvdmVybGF5ZWQgcmVjdGFuZ2xlcyBjYW4gYmUgc2VlbiAoa2luZCBvZiBhZGRzIHdlaWdodHMgdG8gdGhlIGVkZ2VzKQoKICB2YXIgdGV4dCA9IHN2Zy5hcHBlbmQoImciKS5hdHRyKCJpZCIsICJtYXRyaXhUZXh0Iik7IC8vIGFsbCB0ZXh0IG5vZGVzCgogIHZhciB0ZXh0TGVmdCA9IHRleHQuYXBwZW5kKCJnIikuYXR0cigiaWQiLCAidGV4dExlZnQiKTsgLy8gdGhlIHRleHQgbm9kZXMgb24gdGhlIGxlZnQgc2lkZSBvZiB0aGUgZ3JpZAoKICB2YXIgdGV4dFVwID0gdGV4dC5hcHBlbmQoImciKS5hdHRyKCJpZCIsICJ0ZXh0VXAiKTsgLy8gdGhlIHRleHQgbm9kZXMgb24gdG9wIG9mIHRoZSBncmlkCgogIHRleHRMZWZ0LnNlbGVjdEFsbCgidGV4dCIpLmRhdGEobm9kZXMpLmVudGVyKCkuYXBwZW5kKCJ0ZXh0IikuYXR0cigidGV4dC1hbmNob3IiLCAiZW5kIikuYXR0cigiY2xhc3MiLCBmdW5jdGlvbiAoZCkgewogICAgcmV0dXJuICJpZCIgKyBkLmVtcGxveWVlSUQ7CiAgfSkuYXR0cigieCIsIHRleHRTcGFjZSkuYXR0cigieSIsIGZ1bmN0aW9uIChkKSB7CiAgICByZXR1cm4gbm9kZVBvc2l0aW9uc1tkLmVtcGxveWVlSUQudG9TdHJpbmcoKV0gKiBzcXVhcmVTaXplICsgdGV4dFNwYWNlICsgc3F1YXJlU2l6ZSAqIDAuNzU7CiAgfSkudGV4dChmdW5jdGlvbiAoZCkgewogICAgcmV0dXJuIGQubmFtZTsKICB9KS5zdHlsZSgiZmlsbCIsICJ3aGl0ZSIpLnN0eWxlKCJmb250LXNpemUiLCBzcXVhcmVTaXplKTsKICB0ZXh0VXAuc2VsZWN0QWxsKCJ0ZXh0IikuZGF0YShub2RlcykuZW50ZXIoKS5hcHBlbmQoInRleHQiKS5hdHRyKCJ0ZXh0LWFuY2hvciIsICJlbmQiKS5hdHRyKCJ0cmFuc2Zvcm0iLCAicm90YXRlKDkwKSIpLmF0dHIoImNsYXNzIiwgZnVuY3Rpb24gKGQpIHsKICAgIHJldHVybiAiaWQiICsgZC5lbXBsb3llZUlEOwogIH0pLmF0dHIoIngiLCB0ZXh0U3BhY2UpLmF0dHIoInkiLCBmdW5jdGlvbiAoZCkgewogICAgcmV0dXJuIC0obm9kZVBvc2l0aW9uc1tkLmVtcGxveWVlSUQudG9TdHJpbmcoKV0gKiBzcXVhcmVTaXplICsgdGV4dFNwYWNlICsgc3F1YXJlU2l6ZSAqIDAuMjUpOwogIH0pLnRleHQoZnVuY3Rpb24gKGQpIHsKICAgIHJldHVybiBkLm5hbWU7CiAgfSkuc3R5bGUoImZpbGwiLCAid2hpdGUiKS5zdHlsZSgiZm9udC1zaXplIiwgc3F1YXJlU2l6ZSk7IC8vIGV2ZW50IGhhbmRsZXIgZm9yIGNsaWNraW5nIG9uIG5vZGVzCgogIHRleHQuc2VsZWN0QWxsKCJ0ZXh0Iikub24oImNsaWNrIiwgZnVuY3Rpb24gKGUsIGQpIHsKICAgIHZhciBub2Rlc0lEID0gW107CiAgICBub2Rlc0lELnB1c2goZC5lbXBsb3llZUlEKTsKICAgIGhpZ2hsaWdodE1hdHJpeChub2Rlc0lEKTsKICB9KTsgLy8gZXZlbnQgaGFuZGxlciBmb3IgY2xpY2tpbmcgb24gZWRnZXMKCiAgZ3JpZC5zZWxlY3RBbGwoInJlY3QiKS5vbigiY2xpY2siLCBmdW5jdGlvbiAoZSwgZCkgewogICAgdmFyIG5vZGVzSUQgPSBbXTsKICAgIG5vZGVzSUQucHVzaChwYXJzZUludChkLnNvdXJjZSkpOwoKICAgIGlmIChkLnNvdXJjZSAhPSBkLnRhcmdldCkgewogICAgICBub2Rlc0lELnB1c2gocGFyc2VJbnQoZC50YXJnZXQpKTsKICAgIH0KCiAgICBoaWdobGlnaHRNYXRyaXgobm9kZXNJRCk7CiAgfSk7IC8vIGZ1bmN0aW9uIHRoYXQgdG9nZ2xlcyBoaWdobGlnaHRzIGZvciB0aGUgbm9kZXMgaW4gdGhlIG1hdHJpeAogIC8vIG5vZGVzSUQgbXVzdCBiZSBhbiBhcnJheSBvZiBpbnRlZ2VycwoKICBmdW5jdGlvbiBoaWdobGlnaHRNYXRyaXgobm9kZXNJRCkgewogICAgbm9kZXNJRC5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgIHZhciBpbmRleCA9IGdsb2JhbFNlbGVjdGlvbi5pbmRleE9mKG5vZGUpOwoKICAgICAgaWYgKGluZGV4ID09PSAtMSkgewogICAgICAgIHN2Zy5zZWxlY3RBbGwoInRleHQuaWQiICsgbm9kZSkuc3R5bGUoImZpbGwiLCAicmVkIik7CiAgICAgICAgc3ZnLnNlbGVjdEFsbCgicmVjdC5pZCIgKyBub2RlKS5zdHlsZSgiZmlsbCIsICJvcmFuZ2UiKTsKICAgICAgICBnbG9iYWxTZWxlY3Rpb24ucHVzaChub2RlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBzdmcuc2VsZWN0QWxsKCJ0ZXh0LmlkIiArIG5vZGUpLnN0eWxlKCJmaWxsIiwgIndoaXRlIik7CiAgICAgICAgc3ZnLnNlbGVjdEFsbCgicmVjdC5pZCIgKyBub2RlKS5zdHlsZSgiZmlsbCIsICJ3aGl0ZSIpOwogICAgICAgIGdsb2JhbFNlbGVjdGlvbi5zcGxpY2UoaW5kZXgsIDEpOwogICAgICB9CiAgICB9KTsKICB9CgogIGZ1bmN0aW9uIHVwZGF0ZUhpZ2hsaWdodCgpIHsKICAgIC8vIGhpZ2hsaWdodCBub2RlcyB0aGF0IHdlcmUgaGlnaGxpZ2h0ZWQgaW4gdGhlIE5MIGRpYWdyYW0KICAgIGdsb2JhbFNlbGVjdGlvbi5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgIHZhciBpbmRleCA9IGxvY2FsU2VsZWN0aW9uLmluZGV4T2Yobm9kZSk7CgogICAgICBpZiAoaW5kZXggPT09IC0xKSB7CiAgICAgICAgc3ZnLnNlbGVjdEFsbCgidGV4dC5pZCIgKyBub2RlKS5zdHlsZSgiZmlsbCIsICJyZWQiKTsKICAgICAgICBzdmcuc2VsZWN0QWxsKCJyZWN0LmlkIiArIG5vZGUpLnN0eWxlKCJmaWxsIiwgIm9yYW5nZSIpOwogICAgICAgIGxvY2FsU2VsZWN0aW9uLnB1c2gobm9kZSk7CiAgICAgIH0KICAgIH0pOyAvLyB1bi1oaWdobGlnaHQgbm9kZXMgdGhhdCBhcmUgbm8gbG9uZ2VyIGhpZ2hsaWdodGVkIGluIHRoZSBOTCBkaWFncmFtCgogICAgbG9jYWxTZWxlY3Rpb24uZm9yRWFjaChmdW5jdGlvbiAobm9kZSkgewogICAgICB2YXIgaW5kZXggPSBnbG9iYWxTZWxlY3Rpb24uaW5kZXhPZihub2RlKTsKCiAgICAgIGlmIChpbmRleCA9PT0gLTEpIHsKICAgICAgICBzdmcuc2VsZWN0QWxsKCJ0ZXh0LmlkIiArIG5vZGUpLnN0eWxlKCJmaWxsIiwgIndoaXRlIik7CiAgICAgICAgc3ZnLnNlbGVjdEFsbCgicmVjdC5pZCIgKyBub2RlKS5zdHlsZSgiZmlsbCIsICJ3aGl0ZSIpOwogICAgICAgIGxvY2FsU2VsZWN0aW9uLnNwbGljZShsb2NhbFNlbGVjdGlvbi5pbmRleE9mKG5vZGUpLCAxKTsKICAgICAgfQogICAgfSk7CiAgfQoKICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICB1cGRhdGVIaWdobGlnaHQoKTsKICB9LCA1MCk7Cn0KCmV4cG9ydCBkZWZhdWx0IGdlbmVyYXRlTWF0cml4Ow=="},{"version":3,"sources":["C:/Users/20202482/Documents/GitHub/DBL-Project/src/visualisations/adjacencymatrix.js"],"names":["d3","generateMatrix","edges","nodes","edgeWeights","globalSelection","side","document","getElementById","value","w","clientWidth","h","clientHeight","textLength","minOpacity","logCoefficient","Math","log2","maxWeight","squareSize","floor","length","textSpace","nodePositions","i","position","employeeID","toString","localSelection","svg","select","append","attr","call","zoom","on","event","transform","grid","selectAll","data","enter","d","target","source","style","weight","text","textLeft","textUp","name","e","nodesID","push","highlightMatrix","parseInt","forEach","node","index","indexOf","splice","updateHighlight","setInterval"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\r\n\r\nfunction generateMatrix(edges, nodes, edgeWeights, globalSelection) {\r\n\r\n  var side = document.getElementById(\"testSelectAM\").value;\r\n  var w = document.getElementById(\"viscontent\").clientWidth;\r\n  var h = document.getElementById(\"viscontent\").clientHeight;\r\n\r\n  const textLength = 12;                                                        // change this to the approx max node text length\r\n  const minOpacity = 0.3;                                                     // opacity of an edge with weight 1\r\n  const logCoefficient = (1 - minOpacity) / Math.log2(edgeWeights.maxWeight); // coeficient that is used to calculate opacity\r\n  const squareSize = Math.floor(h / (nodes.length + textLength)) - 1;           // the edge side length\r\n  const textSpace = squareSize * textLength;                                  // approx space allocated for text (important only to center the visualisation when rendering)\r\n\r\n  // nodePositions is an object that stores the positions where the nodes should be displayed in the adj matrix\r\n  var nodePositions = {};\r\n  for (var i = 0; i < nodes.length; i++) {\r\n    let position = (nodes[i].employeeID).toString()\r\n    nodePositions[position] = i;\r\n  }\r\n\r\n  var localSelection = [];\r\n\r\n  // array of selected nodes\r\n\r\n  // every svg component goes in here\r\n  var svg = d3\r\n    .select('#' + side)\r\n    .append(\"svg\")\r\n    .attr(\"height\", h)\r\n    .attr(\"width\", w)\r\n    .call(\r\n      d3.zoom().on(\"zoom\", (event) => {\r\n        svg.attr(\"transform\", event.transform);\r\n      })\r\n    )\r\n    .append(\"g\");\r\n\r\n  // the grid of edges\r\n  var grid = svg.append(\"g\").attr(\"id\", \"grid\");\r\n  grid.selectAll(\"rect\")\r\n    .data(edges)\r\n    .enter()\r\n    .append(\"rect\")\r\n    .attr(\"class\", (d) => {\r\n      return \"id\" + d.target + \" \" + \"id\" + d.source;\r\n    })\r\n    .attr(\"x\", (d) => {\r\n      return (nodePositions[(d.target).toString()] * squareSize) + textSpace;\r\n    })\r\n    .attr(\"y\", (d) => {\r\n      return (nodePositions[(d.source).toString()] * squareSize) + textSpace;\r\n    })\r\n    .attr(\"height\", squareSize)\r\n    .attr(\"width\", squareSize)\r\n    .attr(\"fill\", \"white\")\r\n    .style(\"opacity\", ((d) => { return (Math.log2(d.weight) * logCoefficient) + minOpacity }));  // this makes it so that overlayed rectangles can be seen (kind of adds weights to the edges)\r\n\r\n  var text = svg.append(\"g\").attr(\"id\", \"matrixText\");     // all text nodes\r\n  var textLeft = text.append(\"g\").attr(\"id\", \"textLeft\");  // the text nodes on the left side of the grid\r\n  var textUp = text.append(\"g\").attr(\"id\", \"textUp\");      // the text nodes on top of the grid\r\n\r\n  textLeft.selectAll(\"text\")\r\n    .data(nodes)\r\n    .enter()\r\n    .append(\"text\")\r\n    .attr(\"text-anchor\", \"end\")\r\n    .attr(\"class\", (d) => {\r\n      return \"id\" + d.employeeID;\r\n    })\r\n    .attr(\"x\", textSpace)\r\n    .attr(\"y\", (d) => {\r\n      return (nodePositions[(d.employeeID).toString()] * squareSize) + textSpace + (squareSize * 0.75);\r\n    })\r\n    .text((d) => {\r\n      return d.name;\r\n    })\r\n    .style(\"fill\", \"white\")\r\n    .style(\"font-size\", squareSize)\r\n\r\n  textUp.selectAll(\"text\")\r\n    .data(nodes)\r\n    .enter()\r\n    .append(\"text\")\r\n    .attr(\"text-anchor\", \"end\")\r\n    .attr(\"transform\", \"rotate(90)\")\r\n    .attr(\"class\", (d) => {\r\n      return \"id\" + d.employeeID;\r\n    })\r\n    .attr(\"x\", textSpace)\r\n    .attr(\"y\", (d) => {\r\n      return -((nodePositions[(d.employeeID).toString()] * squareSize) + textSpace + (squareSize * 0.25));\r\n    })\r\n    .text((d) => {\r\n      return d.name;\r\n    })\r\n    .style(\"fill\", \"white\")\r\n    .style(\"font-size\", squareSize);\r\n\r\n\r\n  // event handler for clicking on nodes\r\n  text.selectAll(\"text\")\r\n    .on(\"click\", function (e, d) {\r\n      let nodesID = [];\r\n      nodesID.push(d.employeeID);\r\n      highlightMatrix(nodesID);\r\n    });\r\n\r\n  // event handler for clicking on edges\r\n  grid.selectAll(\"rect\")\r\n    .on(\"click\", function (e, d) {\r\n      let nodesID = [];\r\n      nodesID.push(parseInt(d.source));\r\n      if (d.source != d.target) {\r\n        nodesID.push(parseInt(d.target));\r\n      }\r\n\r\n      highlightMatrix(nodesID);\r\n    });\r\n\r\n  // function that toggles highlights for the nodes in the matrix\r\n  // nodesID must be an array of integers\r\n  function highlightMatrix(nodesID) {\r\n    nodesID.forEach((node) => {\r\n      var index = globalSelection.indexOf(node);\r\n      if (index === -1) {\r\n        svg.selectAll(\"text.id\" + node).style(\"fill\", \"red\");\r\n        svg.selectAll(\"rect.id\" + node).style(\"fill\", \"orange\");\r\n        globalSelection.push(node);\r\n      } else {\r\n        svg.selectAll(\"text.id\" + node).style(\"fill\", \"white\");\r\n        svg.selectAll(\"rect.id\" + node).style(\"fill\", \"white\");\r\n        globalSelection.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  function updateHighlight() {\r\n\r\n    // highlight nodes that were highlighted in the NL diagram\r\n    globalSelection.forEach((node) => {\r\n      var index = localSelection.indexOf(node);\r\n      if (index === -1) {\r\n        svg.selectAll(\"text.id\" + node).style(\"fill\", \"red\");\r\n        svg.selectAll(\"rect.id\" + node).style(\"fill\", \"orange\");\r\n        localSelection.push(node);\r\n      }\r\n    });\r\n\r\n    // un-highlight nodes that are no longer highlighted in the NL diagram\r\n    localSelection.forEach((node) => {\r\n      var index = globalSelection.indexOf(node);\r\n      if (index === -1) {\r\n        svg.selectAll(\"text.id\" + node).style(\"fill\", \"white\");\r\n        svg.selectAll(\"rect.id\" + node).style(\"fill\", \"white\");\r\n        localSelection.splice(localSelection.indexOf(node), 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  setInterval(function () { updateHighlight(); }, 50);\r\n}\r\n\r\nexport default generateMatrix"]}]}